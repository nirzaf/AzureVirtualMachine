<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Azure.KeyVault</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Azure.KeyVault.HttpBearerChallenge">
            <summary>
            Handles http bearer challenge operations
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.HttpBearerChallenge.IsBearerChallenge(System.String)">
            <summary>
            Tests whether an authentication header is a Bearer challenge
            </summary>
            <remarks>
            This method is forgiving: if the parameter is null, or the scheme
            in the header is missing, then it will simply return false.
            </remarks>
            <param name="challenge">The AuthenticationHeaderValue to test</param>
            <returns>True if the header is a Bearer challenge</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.HttpBearerChallenge.#ctor(System.Uri,System.String)">
            <summary>
            Parses an HTTP WWW-Authentication Bearer challenge from a server.
            </summary>
            <param name="challenge">The AuthenticationHeaderValue to parse</param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.HttpBearerChallenge.TryGetValue(System.String,System.String@)">
            <summary>
            Returns the value stored at the specified key.
            </summary>
            <remarks>
            If the key does not exist, will return false and the
            content of value will not be changed
            </remarks>
            <param name="key">The key to be retrieved</param>
            <param name="value">The value for the specified key</param>
            <returns>True when the key is found, false when it is not</returns>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.HttpBearerChallenge.AuthorizationServer">
            <summary>
            Returns the URI for the Authorization server if present,
            otherwise string.Empty
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.HttpBearerChallenge.Resource">
            <summary>
            Returns the Realm value if present, otherwise the Authority
            of the request URI given in the ctor
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.HttpBearerChallenge.Scope">
            <summary>
            Returns the Scope value if present, otherwise string.Empty
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.HttpBearerChallenge.SourceAuthority">
            <summary>
            The Authority of the request URI
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.HttpBearerChallenge.SourceUri">
            <summary>
            The source URI
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.HttpBearerChallengeCache">
            <summary>
            Singleton class for handling caching of the http bearer challenge
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.HttpBearerChallengeCache.GetInstance">
            <summary>
            Gets the singleton instance of <see cref="T:Microsoft.Azure.KeyVault.HttpBearerChallengeCache"/> 
            </summary>
            <returns>Instance of this class</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.HttpBearerChallengeCache.GetChallengeForURL(System.Uri)">
            <summary>
            Gets the challenge for the cached URL.
            </summary>
            <param name="url"> the URL that the challenge is cached for.</param>
            <returns>the cached challenge or null otherwise.</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.HttpBearerChallengeCache.RemoveChallengeForURL(System.Uri)">
            <summary>
            Removes the cached challenge for the specified URL
            </summary>
            <param name="url"> the URL to remove its cached challenge </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.HttpBearerChallengeCache.SetChallengeForURL(System.Uri,Microsoft.Azure.KeyVault.HttpBearerChallenge)">
            <summary>
            Caches the challenge for the specified URL
            </summary>
            <param name="url"> URL corresponding to challenge as cache key </param>
            <param name="value"> the challenge </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.HttpBearerChallengeCache.Clear">
            <summary>
            Clears the cache
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.KeyVaultCredential">
            <summary>
            The Key Vault credential class that implements <see cref="T:Microsoft.Rest.ServiceClientCredentials"/>
            </summary>
        </member>
        <member name="E:Microsoft.Azure.KeyVault.KeyVaultCredential.OnAuthenticate">
            <summary>
            The authentication callback
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.KeyVaultCredential.Token">
            <summary>
            Bearer token
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultCredential.#ctor(Microsoft.Azure.KeyVault.KeyVaultClient.AuthenticationCallback)">
            <summary>
            Constructor.
            </summary>
            <param name="authenticationCallback"> the authentication callback. </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultCredential.Clone">
            <summary>
            Clones the current KeyVaultCredential object.
            </summary>
            <returns>A new KeyVaultCredential instance using the same authentication callback as the current instance.</returns>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.CertificateBundle">
            <summary>
            A certificate bundle consists of a certificate (X509) plus its
            attributes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateBundle.SecretIdentifier">
            <summary>
            This is the Id of the secret backing the certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateBundle.KeyIdentifier">
            <summary>
            This is the Id of the key backing the certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateBundle.CertificateIdentifier">
            <summary>
            This is the Id of the certificate.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificateBundle.#ctor">
            <summary>
            Initializes a new instance of the CertificateBundle class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificateBundle.#ctor(System.String,System.String,System.String,System.Byte[],Microsoft.Azure.KeyVault.Models.CertificatePolicy,System.Byte[],System.String,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the CertificateBundle class.
            </summary>
            <param name="id">The certificate id.</param>
            <param name="kid">The key id.</param>
            <param name="sid">The secret id.</param>
            <param name="x509Thumbprint">Thumbprint of the certificate.</param>
            <param name="policy">The management policy.</param>
            <param name="cer">CER contents of x509 certificate.</param>
            <param name="contentType">The content type of the secret.</param>
            <param name="attributes">The certificate attributes.</param>
            <param name="tags">Application specific metadata in the form of
            key-value pairs</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateBundle.Id">
            <summary>
            Gets the certificate id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateBundle.Kid">
            <summary>
            Gets the key id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateBundle.Sid">
            <summary>
            Gets the secret id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateBundle.X509Thumbprint">
            <summary>
            Gets thumbprint of the certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateBundle.Policy">
            <summary>
            Gets the management policy.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateBundle.Cer">
            <summary>
            Gets or sets CER contents of x509 certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateBundle.ContentType">
            <summary>
            Gets or sets the content type of the secret.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateBundle.Attributes">
            <summary>
            Gets or sets the certificate attributes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateBundle.Tags">
            <summary>
            Gets or sets application specific metadata in the form of key-value
            pairs
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificateBundle.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.CertificateContentType">
            <summary>
            Media types relevant to certificates.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.CertificateItem">
            <summary>
            The certificate item containing certificate metadata
            </summary>
            <summary>
            The certificate item containing certificate metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateItem.Identifier">
            <summary>
            The certificate identifier
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificateItem.#ctor">
            <summary>
            Initializes a new instance of the CertificateItem class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificateItem.#ctor(System.String,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Byte[])">
            <summary>
            Initializes a new instance of the CertificateItem class.
            </summary>
            <param name="id">Certificate identifier.</param>
            <param name="attributes">The certificate management
            attributes.</param>
            <param name="tags">Application specific metadata in the form of
            key-value pairs.</param>
            <param name="x509Thumbprint">Thumbprint of the certificate.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateItem.Id">
            <summary>
            Gets or sets certificate identifier.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateItem.Attributes">
            <summary>
            Gets or sets the certificate management attributes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateItem.Tags">
            <summary>
            Gets or sets application specific metadata in the form of key-value
            pairs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateItem.X509Thumbprint">
            <summary>
            Gets or sets thumbprint of the certificate.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.CertificateOperation">
            <summary>
            A certificate operation is returned in case of asynchronous requests.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateOperation.CertificateOperationIdentifier">
            <summary>
            The certificate operation identifier
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificateOperation.#ctor">
            <summary>
            Initializes a new instance of the CertificateOperation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificateOperation.#ctor(System.String,Microsoft.Azure.KeyVault.Models.IssuerParameters,System.Byte[],System.Nullable{System.Boolean},System.String,System.String,Microsoft.Azure.KeyVault.Models.Error,System.String,System.String)">
            <summary>
            Initializes a new instance of the CertificateOperation class.
            </summary>
            <param name="id">The certificate id.</param>
            <param name="issuerParameters">Parameters for the issuer of the
            X509 component of a certificate.</param>
            <param name="csr">The certificate signing request (CSR) that is
            being used in the certificate operation.</param>
            <param name="cancellationRequested">Indicates if cancellation was
            requested on the certificate operation.</param>
            <param name="status">Status of the certificate operation.</param>
            <param name="statusDetails">The status details of the certificate
            operation.</param>
            <param name="error">Error encountered, if any, during the
            certificate operation.</param>
            <param name="target">Location which contains the result of the
            certificate operation.</param>
            <param name="requestId">Identifier for the certificate
            operation.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateOperation.Id">
            <summary>
            Gets the certificate id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateOperation.IssuerParameters">
            <summary>
            Gets or sets parameters for the issuer of the X509 component of a
            certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateOperation.Csr">
            <summary>
            Gets or sets the certificate signing request (CSR) that is being
            used in the certificate operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateOperation.CancellationRequested">
            <summary>
            Gets or sets indicates if cancellation was requested on the
            certificate operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateOperation.Status">
            <summary>
            Gets or sets status of the certificate operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateOperation.StatusDetails">
            <summary>
            Gets or sets the status details of the certificate operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateOperation.Error">
            <summary>
            Gets or sets error encountered, if any, during the certificate
            operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateOperation.Target">
            <summary>
            Gets or sets location which contains the result of the certificate
            operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateOperation.RequestId">
            <summary>
            Gets or sets identifier for the certificate operation.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.DeletedCertificateBundle">
            <summary>
            A Deleted Certificate consisting of its previous id, attributes and its
            tags, as well as information on when it will be purged.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedCertificateBundle.RecoveryIdentifier">
            <summary>
            The identifier of the deleted certificate object. This is used to recover the certificate.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.DeletedCertificateBundle.#ctor">
            <summary>
            Initializes a new instance of the DeletedCertificateBundle class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.DeletedCertificateBundle.#ctor(System.String,System.String,System.String,System.Byte[],Microsoft.Azure.KeyVault.Models.CertificatePolicy,System.Byte[],System.String,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the DeletedCertificateBundle class.
            </summary>
            <param name="id">The certificate id.</param>
            <param name="kid">The key id.</param>
            <param name="sid">The secret id.</param>
            <param name="x509Thumbprint">Thumbprint of the certificate.</param>
            <param name="policy">The management policy.</param>
            <param name="cer">CER contents of x509 certificate.</param>
            <param name="contentType">The content type of the secret.</param>
            <param name="attributes">The certificate attributes.</param>
            <param name="tags">Application specific metadata in the form of
            key-value pairs</param>
            <param name="recoveryId">The url of the recovery object, used to
            identify and recover the deleted certificate.</param>
            <param name="scheduledPurgeDate">The time when the certificate is
            scheduled to be purged, in UTC</param>
            <param name="deletedDate">The time when the certificate was
            deleted, in UTC</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedCertificateBundle.RecoveryId">
            <summary>
            Gets or sets the url of the recovery object, used to identify and
            recover the deleted certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedCertificateBundle.ScheduledPurgeDate">
            <summary>
            Gets the time when the certificate is scheduled to be purged, in
            UTC
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedCertificateBundle.DeletedDate">
            <summary>
            Gets the time when the certificate was deleted, in UTC
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.DeletedCertificateBundle.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.DeletedCertificateItem">
            <summary>
            The deleted certificate item containing metadata about the deleted
            certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedCertificateItem.RecoveryIdentifier">
            <summary>
            The identifier of the deleted secret object. This is used to recover the secret.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.DeletedCertificateItem.#ctor">
            <summary>
            Initializes a new instance of the DeletedCertificateItem class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.DeletedCertificateItem.#ctor(System.String,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Byte[],System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the DeletedCertificateItem class.
            </summary>
            <param name="id">Certificate identifier.</param>
            <param name="attributes">The certificate management
            attributes.</param>
            <param name="tags">Application specific metadata in the form of
            key-value pairs.</param>
            <param name="x509Thumbprint">Thumbprint of the certificate.</param>
            <param name="recoveryId">The url of the recovery object, used to
            identify and recover the deleted certificate.</param>
            <param name="scheduledPurgeDate">The time when the certificate is
            scheduled to be purged, in UTC</param>
            <param name="deletedDate">The time when the certificate was
            deleted, in UTC</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedCertificateItem.RecoveryId">
            <summary>
            Gets or sets the url of the recovery object, used to identify and
            recover the deleted certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedCertificateItem.ScheduledPurgeDate">
            <summary>
            Gets the time when the certificate is scheduled to be purged, in
            UTC
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedCertificateItem.DeletedDate">
            <summary>
            Gets the time when the certificate was deleted, in UTC
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.DeletedKeyBundle">
            <summary>
            A DeletedKeyBundle consisting of a WebKey plus its Attributes and
            deletion info
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedKeyBundle.RecoveryIdentifier">
            <summary>
            The identifier of the deleted key object. This is used to recover the key.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.DeletedKeyBundle.#ctor">
            <summary>
            Initializes a new instance of the DeletedKeyBundle class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.DeletedKeyBundle.#ctor(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Boolean},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the DeletedKeyBundle class.
            </summary>
            <param name="key">The Json web key.</param>
            <param name="attributes">The key management attributes.</param>
            <param name="tags">Application specific metadata in the form of
            key-value pairs.</param>
            <param name="managed">True if the key's lifetime is managed by key
            vault. If this is a key backing a certificate, then managed will be
            true.</param>
            <param name="recoveryId">The url of the recovery object, used to
            identify and recover the deleted key.</param>
            <param name="scheduledPurgeDate">The time when the key is scheduled
            to be purged, in UTC</param>
            <param name="deletedDate">The time when the key was deleted, in
            UTC</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedKeyBundle.RecoveryId">
            <summary>
            Gets or sets the url of the recovery object, used to identify and
            recover the deleted key.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedKeyBundle.ScheduledPurgeDate">
            <summary>
            Gets the time when the key is scheduled to be purged, in UTC
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedKeyBundle.DeletedDate">
            <summary>
            Gets the time when the key was deleted, in UTC
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.DeletedKeyItem">
            <summary>
            The deleted key item containing the deleted key metadata and
            information about deletion.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedKeyItem.RecoveryIdentifier">
            <summary>
            The identifier of the deleted key object. This is used to recover the key.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.DeletedKeyItem.#ctor">
            <summary>
            Initializes a new instance of the DeletedKeyItem class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.DeletedKeyItem.#ctor(System.String,Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Boolean},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the DeletedKeyItem class.
            </summary>
            <param name="kid">Key identifier.</param>
            <param name="attributes">The key management attributes.</param>
            <param name="tags">Application specific metadata in the form of
            key-value pairs.</param>
            <param name="managed">True if the key's lifetime is managed by key
            vault. If this is a key backing a certificate, then managed will be
            true.</param>
            <param name="recoveryId">The url of the recovery object, used to
            identify and recover the deleted key.</param>
            <param name="scheduledPurgeDate">The time when the key is scheduled
            to be purged, in UTC</param>
            <param name="deletedDate">The time when the key was deleted, in
            UTC</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedKeyItem.RecoveryId">
            <summary>
            Gets or sets the url of the recovery object, used to identify and
            recover the deleted key.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedKeyItem.ScheduledPurgeDate">
            <summary>
            Gets the time when the key is scheduled to be purged, in UTC
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedKeyItem.DeletedDate">
            <summary>
            Gets the time when the key was deleted, in UTC
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.DeletedSecretBundle">
            <summary>
            A Deleted Secret consisting of its previous id, attributes and its
            tags, as well as information on when it will be purged.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedSecretBundle.RecoveryIdentifier">
            <summary>
            The identifier of the deleted secret object. This is used to recover the secret.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.DeletedSecretBundle.#ctor">
            <summary>
            Initializes a new instance of the DeletedSecretBundle class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.DeletedSecretBundle.#ctor(System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the DeletedSecretBundle class.
            </summary>
            <param name="value">The secret value.</param>
            <param name="id">The secret id.</param>
            <param name="contentType">The content type of the secret.</param>
            <param name="attributes">The secret management attributes.</param>
            <param name="tags">Application specific metadata in the form of
            key-value pairs.</param>
            <param name="kid">If this is a secret backing a KV certificate,
            then this field specifies the corresponding key backing the KV
            certificate.</param>
            <param name="managed">True if the secret's lifetime is managed by
            key vault. If this is a secret backing a certificate, then managed
            will be true.</param>
            <param name="recoveryId">The url of the recovery object, used to
            identify and recover the deleted secret.</param>
            <param name="scheduledPurgeDate">The time when the secret is
            scheduled to be purged, in UTC</param>
            <param name="deletedDate">The time when the secret was deleted, in
            UTC</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedSecretBundle.RecoveryId">
            <summary>
            Gets or sets the url of the recovery object, used to identify and
            recover the deleted secret.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedSecretBundle.ScheduledPurgeDate">
            <summary>
            Gets the time when the secret is scheduled to be purged, in UTC
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedSecretBundle.DeletedDate">
            <summary>
            Gets the time when the secret was deleted, in UTC
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.DeletedSecretItem">
            <summary>
            The deleted secret item containing metadata about the deleted secret.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedSecretItem.RecoveryIdentifier">
            <summary>
            The identifier of the deleted secret object. This is used to recover the secret.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.DeletedSecretItem.#ctor">
            <summary>
            Initializes a new instance of the DeletedSecretItem class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.DeletedSecretItem.#ctor(System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the DeletedSecretItem class.
            </summary>
            <param name="id">Secret identifier.</param>
            <param name="attributes">The secret management attributes.</param>
            <param name="tags">Application specific metadata in the form of
            key-value pairs.</param>
            <param name="contentType">Type of the secret value such as a
            password.</param>
            <param name="managed">True if the secret's lifetime is managed by
            key vault. If this is a key backing a certificate, then managed
            will be true.</param>
            <param name="recoveryId">The url of the recovery object, used to
            identify and recover the deleted secret.</param>
            <param name="scheduledPurgeDate">The time when the secret is
            scheduled to be purged, in UTC</param>
            <param name="deletedDate">The time when the secret was deleted, in
            UTC</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedSecretItem.RecoveryId">
            <summary>
            Gets or sets the url of the recovery object, used to identify and
            recover the deleted secret.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedSecretItem.ScheduledPurgeDate">
            <summary>
            Gets the time when the secret is scheduled to be purged, in UTC
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedSecretItem.DeletedDate">
            <summary>
            Gets the time when the secret was deleted, in UTC
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.IssuerBundle">
            <summary>
            The issuer for Key Vault certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.IssuerBundle.IssuerIdentifier">
            <summary>
            Identifier for the issuer object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.IssuerBundle.#ctor">
            <summary>
            Initializes a new instance of the IssuerBundle class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.IssuerBundle.#ctor(System.String,System.String,Microsoft.Azure.KeyVault.Models.IssuerCredentials,Microsoft.Azure.KeyVault.Models.OrganizationDetails,Microsoft.Azure.KeyVault.Models.IssuerAttributes)">
            <summary>
            Initializes a new instance of the IssuerBundle class.
            </summary>
            <param name="id">Identifier for the issuer object.</param>
            <param name="provider">The issuer provider.</param>
            <param name="credentials">The credentials to be used for the
            issuer.</param>
            <param name="organizationDetails">Details of the organization as
            provided to the issuer.</param>
            <param name="attributes">Attributes of the issuer object.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.IssuerBundle.Id">
            <summary>
            Gets identifier for the issuer object.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.IssuerBundle.Provider">
            <summary>
            Gets or sets the issuer provider.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.IssuerBundle.Credentials">
            <summary>
            Gets or sets the credentials to be used for the issuer.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.IssuerBundle.OrganizationDetails">
            <summary>
            Gets or sets details of the organization as provided to the issuer.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.IssuerBundle.Attributes">
            <summary>
            Gets or sets attributes of the issuer object.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.KeyBundle">
            <summary>
            A KeyBundle consisting of a WebKey plus its attributes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyBundle.KeyIdentifier">
            <summary>
            The identifier for the key object
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeyBundle.#ctor">
            <summary>
            Initializes a new instance of the KeyBundle class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeyBundle.#ctor(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the KeyBundle class.
            </summary>
            <param name="key">The Json web key.</param>
            <param name="attributes">The key management attributes.</param>
            <param name="tags">Application specific metadata in the form of
            key-value pairs.</param>
            <param name="managed">True if the key's lifetime is managed by key
            vault. If this is a key backing a certificate, then managed will be
            true.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyBundle.Key">
            <summary>
            Gets or sets the Json web key.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyBundle.Attributes">
            <summary>
            Gets or sets the key management attributes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyBundle.Tags">
            <summary>
            Gets or sets application specific metadata in the form of key-value
            pairs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyBundle.Managed">
            <summary>
            Gets true if the key's lifetime is managed by key vault. If this is
            a key backing a certificate, then managed will be true.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.KeyItem">
            <summary>
            The key item containing key metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyItem.Identifier">
            <summary>
            Identifier for the key object
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeyItem.#ctor">
            <summary>
            Initializes a new instance of the KeyItem class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeyItem.#ctor(System.String,Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the KeyItem class.
            </summary>
            <param name="kid">Key identifier.</param>
            <param name="attributes">The key management attributes.</param>
            <param name="tags">Application specific metadata in the form of
            key-value pairs.</param>
            <param name="managed">True if the key's lifetime is managed by key
            vault. If this is a key backing a certificate, then managed will be
            true.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyItem.Kid">
            <summary>
            Gets or sets key identifier.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyItem.Attributes">
            <summary>
            Gets or sets the key management attributes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyItem.Tags">
            <summary>
            Gets or sets application specific metadata in the form of key-value
            pairs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyItem.Managed">
            <summary>
            Gets true if the key's lifetime is managed by key vault. If this is
            a key backing a certificate, then managed will be true.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.NewKeyParameters">
            <summary>
            Describes parameters used for creation of a new cryptographic key.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.NewKeyParameters.Kty">
            <summary>
            Gets or sets the desired JsonWebKey key type. Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.NewKeyParameters.CurveName">
            <summary>
            Gets or sets the name of desired curve for used with Elliptic Curve Cryptography (ECC) algorithms.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.NewKeyParameters.KeySize">
            <summary>
            Gets or sets the desired key size.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.NewKeyParameters.KeyOps">
            <summary>
            Gets or sets the desired operations that the key will support.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.NewKeyParameters.Attributes">
            <summary>
            Gets or sets the desired key management attributes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.NewKeyParameters.Tags">
            <summary>
            Gets or sets application specific metadata in the form of key-value pairs.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.SasDefinitionItem">
            <summary>
            The storage SAS definition item containing storage SAS definition metadata.
            </summary>
            <summary>
            The SAS definition item containing storage SAS definition metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SasDefinitionItem.Identifier">
            <summary>
            The key vault storage SAS definition identifier.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.SasDefinitionItem.#ctor">
            <summary>
            Initializes a new instance of the SasDefinitionItem class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.SasDefinitionItem.#ctor(System.String,System.String,Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the SasDefinitionItem class.
            </summary>
            <param name="id">The storage SAS identifier.</param>
            <param name="secretId">The storage account SAS definition secret
            id.</param>
            <param name="attributes">The SAS definition management
            attributes.</param>
            <param name="tags">Application specific metadata in the form of
            key-value pairs.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SasDefinitionItem.Id">
            <summary>
            Gets the storage SAS identifier.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SasDefinitionItem.SecretId">
            <summary>
            Gets the storage account SAS definition secret id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SasDefinitionItem.Attributes">
            <summary>
            Gets the SAS definition management attributes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SasDefinitionItem.Tags">
            <summary>
            Gets application specific metadata in the form of key-value pairs.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.SecretBundle">
            <summary>
            A secret consisting of a value, id and its attributes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SecretBundle.SecretIdentifier">
            <summary>
            The identifier for secret object
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.SecretBundle.#ctor">
            <summary>
            Initializes a new instance of the SecretBundle class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.SecretBundle.#ctor(System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the SecretBundle class.
            </summary>
            <param name="value">The secret value.</param>
            <param name="id">The secret id.</param>
            <param name="contentType">The content type of the secret.</param>
            <param name="attributes">The secret management attributes.</param>
            <param name="tags">Application specific metadata in the form of
            key-value pairs.</param>
            <param name="kid">If this is a secret backing a KV certificate,
            then this field specifies the corresponding key backing the KV
            certificate.</param>
            <param name="managed">True if the secret's lifetime is managed by
            key vault. If this is a secret backing a certificate, then managed
            will be true.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SecretBundle.Value">
            <summary>
            Gets or sets the secret value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SecretBundle.Id">
            <summary>
            Gets or sets the secret id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SecretBundle.ContentType">
            <summary>
            Gets or sets the content type of the secret.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SecretBundle.Attributes">
            <summary>
            Gets or sets the secret management attributes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SecretBundle.Tags">
            <summary>
            Gets or sets application specific metadata in the form of key-value
            pairs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SecretBundle.Kid">
            <summary>
            Gets if this is a secret backing a KV certificate, then this field
            specifies the corresponding key backing the KV certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SecretBundle.Managed">
            <summary>
            Gets true if the secret's lifetime is managed by key vault. If this
            is a secret backing a certificate, then managed will be true.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.SecretItem">
            <summary>
            The secret item containing secret metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SecretItem.Identifier">
            <summary>
            The identifier for secret object
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.SecretItem.#ctor">
            <summary>
            Initializes a new instance of the SecretItem class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.SecretItem.#ctor(System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the SecretItem class.
            </summary>
            <param name="id">Secret identifier.</param>
            <param name="attributes">The secret management attributes.</param>
            <param name="tags">Application specific metadata in the form of
            key-value pairs.</param>
            <param name="contentType">Type of the secret value such as a
            password.</param>
            <param name="managed">True if the secret's lifetime is managed by
            key vault. If this is a key backing a certificate, then managed
            will be true.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SecretItem.Id">
            <summary>
            Gets or sets secret identifier.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SecretItem.Attributes">
            <summary>
            Gets or sets the secret management attributes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SecretItem.Tags">
            <summary>
            Gets or sets application specific metadata in the form of key-value
            pairs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SecretItem.ContentType">
            <summary>
            Gets or sets type of the secret value such as a password.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SecretItem.Managed">
            <summary>
            Gets true if the secret's lifetime is managed by key vault. If this
            is a key backing a certificate, then managed will be true.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.StorageAccountItem">
            <summary>
            The storage account item containing storage account metadata.
            </summary>
            <summary>
            The storage account item containing storage account metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.StorageAccountItem.Identifier">
            <summary>
            The storage account identifier.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.StorageAccountItem.#ctor">
            <summary>
            Initializes a new instance of the StorageAccountItem class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.StorageAccountItem.#ctor(System.String,System.String,Microsoft.Azure.KeyVault.Models.StorageAccountAttributes,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the StorageAccountItem class.
            </summary>
            <param name="id">Storage identifier.</param>
            <param name="resourceId">Storage account resource Id.</param>
            <param name="attributes">The storage account management
            attributes.</param>
            <param name="tags">Application specific metadata in the form of
            key-value pairs.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.StorageAccountItem.Id">
            <summary>
            Gets storage identifier.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.StorageAccountItem.ResourceId">
            <summary>
            Gets storage account resource Id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.StorageAccountItem.Attributes">
            <summary>
            Gets the storage account management attributes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.StorageAccountItem.Tags">
            <summary>
            Gets application specific metadata in the form of key-value pairs.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.Action">
            <summary>
            The action that will be executed.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.Action.#ctor">
            <summary>
            Initializes a new instance of the Action class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.Action.#ctor(System.Nullable{Microsoft.Azure.KeyVault.Models.ActionType})">
            <summary>
            Initializes a new instance of the Action class.
            </summary>
            <param name="actionType">The type of the action. Possible values
            include: 'EmailContacts', 'AutoRenew'</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.Action.ActionType">
            <summary>
            Gets or sets the type of the action. Possible values include:
            'EmailContacts', 'AutoRenew'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.ActionType">
            <summary>
            Defines values for ActionType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.AdministratorDetails">
            <summary>
            Details of the organization administrator of the certificate issuer.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.AdministratorDetails.#ctor">
            <summary>
            Initializes a new instance of the AdministratorDetails class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.AdministratorDetails.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the AdministratorDetails class.
            </summary>
            <param name="firstName">First name.</param>
            <param name="lastName">Last name.</param>
            <param name="emailAddress">Email addresss.</param>
            <param name="phone">Phone number.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.AdministratorDetails.FirstName">
            <summary>
            Gets or sets first name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.AdministratorDetails.LastName">
            <summary>
            Gets or sets last name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.AdministratorDetails.EmailAddress">
            <summary>
            Gets or sets email addresss.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.AdministratorDetails.Phone">
            <summary>
            Gets or sets phone number.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.Attributes">
            <summary>
            The object attributes managed by the KeyVault service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.Attributes.#ctor">
            <summary>
            Initializes a new instance of the Attributes class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.Attributes.#ctor(System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the Attributes class.
            </summary>
            <param name="enabled">Determines whether the object is
            enabled.</param>
            <param name="notBefore">Not before date in UTC.</param>
            <param name="expires">Expiry date in UTC.</param>
            <param name="created">Creation time in UTC.</param>
            <param name="updated">Last updated time in UTC.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.Attributes.Enabled">
            <summary>
            Gets or sets determines whether the object is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.Attributes.NotBefore">
            <summary>
            Gets or sets not before date in UTC.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.Attributes.Expires">
            <summary>
            Gets or sets expiry date in UTC.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.Attributes.Created">
            <summary>
            Gets creation time in UTC.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.Attributes.Updated">
            <summary>
            Gets last updated time in UTC.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.BackupCertificateResult">
            <summary>
            The backup certificate result, containing the backup blob.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.BackupCertificateResult.#ctor">
            <summary>
            Initializes a new instance of the BackupCertificateResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.BackupCertificateResult.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the BackupCertificateResult class.
            </summary>
            <param name="value">The backup blob containing the backed up
            certificate.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.BackupCertificateResult.Value">
            <summary>
            Gets the backup blob containing the backed up certificate.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.BackupKeyResult">
            <summary>
            The backup key result, containing the backup blob.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.BackupKeyResult.#ctor">
            <summary>
            Initializes a new instance of the BackupKeyResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.BackupKeyResult.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the BackupKeyResult class.
            </summary>
            <param name="value">The backup blob containing the backed up
            key.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.BackupKeyResult.Value">
            <summary>
            Gets the backup blob containing the backed up key.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.BackupSecretResult">
            <summary>
            The backup secret result, containing the backup blob.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.BackupSecretResult.#ctor">
            <summary>
            Initializes a new instance of the BackupSecretResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.BackupSecretResult.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the BackupSecretResult class.
            </summary>
            <param name="value">The backup blob containing the backed up
            secret.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.BackupSecretResult.Value">
            <summary>
            Gets the backup blob containing the backed up secret.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.BackupStorageResult">
            <summary>
            The backup storage result, containing the backup blob.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.BackupStorageResult.#ctor">
            <summary>
            Initializes a new instance of the BackupStorageResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.BackupStorageResult.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the BackupStorageResult class.
            </summary>
            <param name="value">The backup blob containing the backed up
            storage account.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.BackupStorageResult.Value">
            <summary>
            Gets the backup blob containing the backed up storage account.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.CertificateAttributes">
            <summary>
            The certificate management attributes.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificateAttributes.#ctor">
            <summary>
            Initializes a new instance of the CertificateAttributes class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificateAttributes.#ctor(System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the CertificateAttributes class.
            </summary>
            <param name="enabled">Determines whether the object is
            enabled.</param>
            <param name="notBefore">Not before date in UTC.</param>
            <param name="expires">Expiry date in UTC.</param>
            <param name="created">Creation time in UTC.</param>
            <param name="updated">Last updated time in UTC.</param>
            <param name="recoveryLevel">Reflects the deletion recovery level
            currently in effect for certificates in the current vault. If it
            contains 'Purgeable', the certificate can be permanently deleted by
            a privileged user; otherwise, only the system can purge the
            certificate, at the end of the retention interval. Possible values
            include: 'Purgeable', 'Recoverable+Purgeable', 'Recoverable',
            'Recoverable+ProtectedSubscription'</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateAttributes.RecoveryLevel">
            <summary>
            Gets reflects the deletion recovery level currently in effect for
            certificates in the current vault. If it contains 'Purgeable', the
            certificate can be permanently deleted by a privileged user;
            otherwise, only the system can purge the certificate, at the end of
            the retention interval. Possible values include: 'Purgeable',
            'Recoverable+Purgeable', 'Recoverable',
            'Recoverable+ProtectedSubscription'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.CertificateCreateParameters">
            <summary>
            The certificate create parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificateCreateParameters.#ctor">
            <summary>
            Initializes a new instance of the CertificateCreateParameters
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificateCreateParameters.#ctor(Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the CertificateCreateParameters
            class.
            </summary>
            <param name="certificatePolicy">The management policy for the
            certificate.</param>
            <param name="certificateAttributes">The attributes of the
            certificate (optional).</param>
            <param name="tags">Application specific metadata in the form of
            key-value pairs.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateCreateParameters.CertificatePolicy">
            <summary>
            Gets or sets the management policy for the certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateCreateParameters.CertificateAttributes">
            <summary>
            Gets or sets the attributes of the certificate (optional).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateCreateParameters.Tags">
            <summary>
            Gets or sets application specific metadata in the form of key-value
            pairs.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificateCreateParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.CertificateImportParameters">
            <summary>
            The certificate import parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificateImportParameters.#ctor">
            <summary>
            Initializes a new instance of the CertificateImportParameters
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificateImportParameters.#ctor(System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the CertificateImportParameters
            class.
            </summary>
            <param name="base64EncodedCertificate">Base64 encoded
            representation of the certificate object to import. This
            certificate needs to contain the private key.</param>
            <param name="password">If the private key in
            base64EncodedCertificate is encrypted, the password used for
            encryption.</param>
            <param name="certificatePolicy">The management policy for the
            certificate.</param>
            <param name="certificateAttributes">The attributes of the
            certificate (optional).</param>
            <param name="tags">Application specific metadata in the form of
            key-value pairs.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateImportParameters.Base64EncodedCertificate">
            <summary>
            Gets or sets base64 encoded representation of the certificate
            object to import. This certificate needs to contain the private
            key.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateImportParameters.Password">
            <summary>
            Gets or sets if the private key in base64EncodedCertificate is
            encrypted, the password used for encryption.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateImportParameters.CertificatePolicy">
            <summary>
            Gets or sets the management policy for the certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateImportParameters.CertificateAttributes">
            <summary>
            Gets or sets the attributes of the certificate (optional).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateImportParameters.Tags">
            <summary>
            Gets or sets application specific metadata in the form of key-value
            pairs.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificateImportParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.CertificateIssuerItem">
            <summary>
            The certificate issuer item containing certificate issuer metadata.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificateIssuerItem.#ctor">
            <summary>
            Initializes a new instance of the CertificateIssuerItem class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificateIssuerItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the CertificateIssuerItem class.
            </summary>
            <param name="id">Certificate Identifier.</param>
            <param name="provider">The issuer provider.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateIssuerItem.Id">
            <summary>
            Gets or sets certificate Identifier.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateIssuerItem.Provider">
            <summary>
            Gets or sets the issuer provider.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.CertificateIssuerSetParameters">
            <summary>
            The certificate issuer set parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificateIssuerSetParameters.#ctor">
            <summary>
            Initializes a new instance of the CertificateIssuerSetParameters
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificateIssuerSetParameters.#ctor(System.String,Microsoft.Azure.KeyVault.Models.IssuerCredentials,Microsoft.Azure.KeyVault.Models.OrganizationDetails,Microsoft.Azure.KeyVault.Models.IssuerAttributes)">
            <summary>
            Initializes a new instance of the CertificateIssuerSetParameters
            class.
            </summary>
            <param name="provider">The issuer provider.</param>
            <param name="credentials">The credentials to be used for the
            issuer.</param>
            <param name="organizationDetails">Details of the organization as
            provided to the issuer.</param>
            <param name="attributes">Attributes of the issuer object.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateIssuerSetParameters.Provider">
            <summary>
            Gets or sets the issuer provider.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateIssuerSetParameters.Credentials">
            <summary>
            Gets or sets the credentials to be used for the issuer.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateIssuerSetParameters.OrganizationDetails">
            <summary>
            Gets or sets details of the organization as provided to the issuer.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateIssuerSetParameters.Attributes">
            <summary>
            Gets or sets attributes of the issuer object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificateIssuerSetParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.CertificateIssuerUpdateParameters">
            <summary>
            The certificate issuer update parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificateIssuerUpdateParameters.#ctor">
            <summary>
            Initializes a new instance of the CertificateIssuerUpdateParameters
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificateIssuerUpdateParameters.#ctor(System.String,Microsoft.Azure.KeyVault.Models.IssuerCredentials,Microsoft.Azure.KeyVault.Models.OrganizationDetails,Microsoft.Azure.KeyVault.Models.IssuerAttributes)">
            <summary>
            Initializes a new instance of the CertificateIssuerUpdateParameters
            class.
            </summary>
            <param name="provider">The issuer provider.</param>
            <param name="credentials">The credentials to be used for the
            issuer.</param>
            <param name="organizationDetails">Details of the organization as
            provided to the issuer.</param>
            <param name="attributes">Attributes of the issuer object.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateIssuerUpdateParameters.Provider">
            <summary>
            Gets or sets the issuer provider.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateIssuerUpdateParameters.Credentials">
            <summary>
            Gets or sets the credentials to be used for the issuer.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateIssuerUpdateParameters.OrganizationDetails">
            <summary>
            Gets or sets details of the organization as provided to the issuer.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateIssuerUpdateParameters.Attributes">
            <summary>
            Gets or sets attributes of the issuer object.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.CertificateMergeParameters">
            <summary>
            The certificate merge parameters
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificateMergeParameters.#ctor">
            <summary>
            Initializes a new instance of the CertificateMergeParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificateMergeParameters.#ctor(System.Collections.Generic.IList{System.Byte[]},Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the CertificateMergeParameters class.
            </summary>
            <param name="x509Certificates">The certificate or the certificate
            chain to merge.</param>
            <param name="certificateAttributes">The attributes of the
            certificate (optional).</param>
            <param name="tags">Application specific metadata in the form of
            key-value pairs.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateMergeParameters.X509Certificates">
            <summary>
            Gets or sets the certificate or the certificate chain to merge.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateMergeParameters.CertificateAttributes">
            <summary>
            Gets or sets the attributes of the certificate (optional).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateMergeParameters.Tags">
            <summary>
            Gets or sets application specific metadata in the form of key-value
            pairs.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificateMergeParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.CertificateOperationUpdateParameter">
            <summary>
            The certificate operation update parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificateOperationUpdateParameter.#ctor">
            <summary>
            Initializes a new instance of the
            CertificateOperationUpdateParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificateOperationUpdateParameter.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the
            CertificateOperationUpdateParameter class.
            </summary>
            <param name="cancellationRequested">Indicates if cancellation was
            requested on the certificate operation.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateOperationUpdateParameter.CancellationRequested">
            <summary>
            Gets or sets indicates if cancellation was requested on the
            certificate operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificateOperationUpdateParameter.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.CertificatePolicy">
            <summary>
            Management policy for a certificate.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificatePolicy.#ctor">
            <summary>
            Initializes a new instance of the CertificatePolicy class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificatePolicy.#ctor(System.String,Microsoft.Azure.KeyVault.Models.KeyProperties,Microsoft.Azure.KeyVault.Models.SecretProperties,Microsoft.Azure.KeyVault.Models.X509CertificateProperties,System.Collections.Generic.IList{Microsoft.Azure.KeyVault.Models.LifetimeAction},Microsoft.Azure.KeyVault.Models.IssuerParameters,Microsoft.Azure.KeyVault.Models.CertificateAttributes)">
            <summary>
            Initializes a new instance of the CertificatePolicy class.
            </summary>
            <param name="id">The certificate id.</param>
            <param name="keyProperties">Properties of the key backing a
            certificate.</param>
            <param name="secretProperties">Properties of the secret backing a
            certificate.</param>
            <param name="x509CertificateProperties">Properties of the X509
            component of a certificate.</param>
            <param name="lifetimeActions">Actions that will be performed by Key
            Vault over the lifetime of a certificate.</param>
            <param name="issuerParameters">Parameters for the issuer of the
            X509 component of a certificate.</param>
            <param name="attributes">The certificate attributes.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificatePolicy.Id">
            <summary>
            Gets the certificate id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificatePolicy.KeyProperties">
            <summary>
            Gets or sets properties of the key backing a certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificatePolicy.SecretProperties">
            <summary>
            Gets or sets properties of the secret backing a certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificatePolicy.X509CertificateProperties">
            <summary>
            Gets or sets properties of the X509 component of a certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificatePolicy.LifetimeActions">
            <summary>
            Gets or sets actions that will be performed by Key Vault over the
            lifetime of a certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificatePolicy.IssuerParameters">
            <summary>
            Gets or sets parameters for the issuer of the X509 component of a
            certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificatePolicy.Attributes">
            <summary>
            Gets or sets the certificate attributes.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificatePolicy.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.CertificateRestoreParameters">
            <summary>
            The certificate restore parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificateRestoreParameters.#ctor">
            <summary>
            Initializes a new instance of the CertificateRestoreParameters
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificateRestoreParameters.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the CertificateRestoreParameters
            class.
            </summary>
            <param name="certificateBundleBackup">The backup blob associated
            with a certificate bundle.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateRestoreParameters.CertificateBundleBackup">
            <summary>
            Gets or sets the backup blob associated with a certificate bundle.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificateRestoreParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.CertificateUpdateParameters">
            <summary>
            The certificate update parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificateUpdateParameters.#ctor">
            <summary>
            Initializes a new instance of the CertificateUpdateParameters
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificateUpdateParameters.#ctor(Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the CertificateUpdateParameters
            class.
            </summary>
            <param name="certificatePolicy">The management policy for the
            certificate.</param>
            <param name="certificateAttributes">The attributes of the
            certificate (optional).</param>
            <param name="tags">Application specific metadata in the form of
            key-value pairs.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateUpdateParameters.CertificatePolicy">
            <summary>
            Gets or sets the management policy for the certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateUpdateParameters.CertificateAttributes">
            <summary>
            Gets or sets the attributes of the certificate (optional).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.CertificateUpdateParameters.Tags">
            <summary>
            Gets or sets application specific metadata in the form of key-value
            pairs.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.CertificateUpdateParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.Contact">
            <summary>
            The contact information for the vault certificates.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.Contact.#ctor">
            <summary>
            Initializes a new instance of the Contact class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.Contact.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the Contact class.
            </summary>
            <param name="emailAddress">Email addresss.</param>
            <param name="name">Name.</param>
            <param name="phone">Phone number.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.Contact.EmailAddress">
            <summary>
            Gets or sets email addresss.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.Contact.Name">
            <summary>
            Gets or sets name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.Contact.Phone">
            <summary>
            Gets or sets phone number.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.Contacts">
            <summary>
            The contacts for the vault certificates.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.Contacts.#ctor">
            <summary>
            Initializes a new instance of the Contacts class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.Contacts.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.KeyVault.Models.Contact})">
            <summary>
            Initializes a new instance of the Contacts class.
            </summary>
            <param name="id">Identifier for the contacts collection.</param>
            <param name="contactList">The contact list for the vault
            certificates.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.Contacts.Id">
            <summary>
            Gets identifier for the contacts collection.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.Contacts.ContactList">
            <summary>
            Gets or sets the contact list for the vault certificates.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionBundle">
            <summary>
            A deleted SAS definition bundle consisting of its previous id,
            attributes and its tags, as well as information on when it will be
            purged.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionBundle.#ctor">
            <summary>
            Initializes a new instance of the DeletedSasDefinitionBundle class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionBundle.#ctor(System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the DeletedSasDefinitionBundle class.
            </summary>
            <param name="id">The SAS definition id.</param>
            <param name="secretId">Storage account SAS definition secret
            id.</param>
            <param name="templateUri">The SAS definition token template signed
            with an arbitrary key.  Tokens created according to the SAS
            definition will have the same properties as the template.</param>
            <param name="sasType">The type of SAS token the SAS definition will
            create. Possible values include: 'account', 'service'</param>
            <param name="validityPeriod">The validity period of SAS tokens
            created according to the SAS definition.</param>
            <param name="attributes">The SAS definition attributes.</param>
            <param name="tags">Application specific metadata in the form of
            key-value pairs</param>
            <param name="recoveryId">The url of the recovery object, used to
            identify and recover the deleted SAS definition.</param>
            <param name="scheduledPurgeDate">The time when the SAS definition
            is scheduled to be purged, in UTC</param>
            <param name="deletedDate">The time when the SAS definition was
            deleted, in UTC</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionBundle.RecoveryId">
            <summary>
            Gets or sets the url of the recovery object, used to identify and
            recover the deleted SAS definition.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionBundle.ScheduledPurgeDate">
            <summary>
            Gets the time when the SAS definition is scheduled to be purged, in
            UTC
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionBundle.DeletedDate">
            <summary>
            Gets the time when the SAS definition was deleted, in UTC
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionItem">
            <summary>
            The deleted SAS definition item containing metadata about the deleted
            SAS definition.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionItem.#ctor">
            <summary>
            Initializes a new instance of the DeletedSasDefinitionItem class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionItem.#ctor(System.String,System.String,Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the DeletedSasDefinitionItem class.
            </summary>
            <param name="id">The storage SAS identifier.</param>
            <param name="secretId">The storage account SAS definition secret
            id.</param>
            <param name="attributes">The SAS definition management
            attributes.</param>
            <param name="tags">Application specific metadata in the form of
            key-value pairs.</param>
            <param name="recoveryId">The url of the recovery object, used to
            identify and recover the deleted SAS definition.</param>
            <param name="scheduledPurgeDate">The time when the SAS definition
            is scheduled to be purged, in UTC</param>
            <param name="deletedDate">The time when the SAS definition was
            deleted, in UTC</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionItem.RecoveryId">
            <summary>
            Gets or sets the url of the recovery object, used to identify and
            recover the deleted SAS definition.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionItem.ScheduledPurgeDate">
            <summary>
            Gets the time when the SAS definition is scheduled to be purged, in
            UTC
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionItem.DeletedDate">
            <summary>
            Gets the time when the SAS definition was deleted, in UTC
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.DeletedStorageAccountItem">
            <summary>
            The deleted storage account item containing metadata about the deleted
            storage account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.DeletedStorageAccountItem.#ctor">
            <summary>
            Initializes a new instance of the DeletedStorageAccountItem class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.DeletedStorageAccountItem.#ctor(System.String,System.String,Microsoft.Azure.KeyVault.Models.StorageAccountAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the DeletedStorageAccountItem class.
            </summary>
            <param name="id">Storage identifier.</param>
            <param name="resourceId">Storage account resource Id.</param>
            <param name="attributes">The storage account management
            attributes.</param>
            <param name="tags">Application specific metadata in the form of
            key-value pairs.</param>
            <param name="recoveryId">The url of the recovery object, used to
            identify and recover the deleted storage account.</param>
            <param name="scheduledPurgeDate">The time when the storage account
            is scheduled to be purged, in UTC</param>
            <param name="deletedDate">The time when the storage account was
            deleted, in UTC</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedStorageAccountItem.RecoveryId">
            <summary>
            Gets or sets the url of the recovery object, used to identify and
            recover the deleted storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedStorageAccountItem.ScheduledPurgeDate">
            <summary>
            Gets the time when the storage account is scheduled to be purged,
            in UTC
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedStorageAccountItem.DeletedDate">
            <summary>
            Gets the time when the storage account was deleted, in UTC
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.DeletedStorageBundle">
            <summary>
            A deleted storage account bundle consisting of its previous id,
            attributes and its tags, as well as information on when it will be
            purged.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.DeletedStorageBundle.#ctor">
            <summary>
            Initializes a new instance of the DeletedStorageBundle class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.DeletedStorageBundle.#ctor(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,Microsoft.Azure.KeyVault.Models.StorageAccountAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the DeletedStorageBundle class.
            </summary>
            <param name="id">The storage account id.</param>
            <param name="resourceId">The storage account resource id.</param>
            <param name="activeKeyName">The current active storage account key
            name.</param>
            <param name="autoRegenerateKey">whether keyvault should manage the
            storage account for the user.</param>
            <param name="regenerationPeriod">The key regeneration time duration
            specified in ISO-8601 format.</param>
            <param name="attributes">The storage account attributes.</param>
            <param name="tags">Application specific metadata in the form of
            key-value pairs</param>
            <param name="recoveryId">The url of the recovery object, used to
            identify and recover the deleted storage account.</param>
            <param name="scheduledPurgeDate">The time when the storage account
            is scheduled to be purged, in UTC</param>
            <param name="deletedDate">The time when the storage account was
            deleted, in UTC</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedStorageBundle.RecoveryId">
            <summary>
            Gets or sets the url of the recovery object, used to identify and
            recover the deleted storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedStorageBundle.ScheduledPurgeDate">
            <summary>
            Gets the time when the storage account is scheduled to be purged,
            in UTC
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.DeletedStorageBundle.DeletedDate">
            <summary>
            Gets the time when the storage account was deleted, in UTC
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.DeletionRecoveryLevel">
            <summary>
            Defines values for DeletionRecoveryLevel.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.Error">
            <summary>
            The key vault server error.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.Error.#ctor">
            <summary>
            Initializes a new instance of the Error class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.Error.#ctor(System.String,System.String,Microsoft.Azure.KeyVault.Models.Error)">
            <summary>
            Initializes a new instance of the Error class.
            </summary>
            <param name="code">The error code.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.Error.Code">
            <summary>
            Gets the error code.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.Error.Message">
            <summary>
            Gets the error message.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.Error.InnerError">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.IssuerAttributes">
            <summary>
            The attributes of an issuer managed by the Key Vault service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.IssuerAttributes.#ctor">
            <summary>
            Initializes a new instance of the IssuerAttributes class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.IssuerAttributes.#ctor(System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the IssuerAttributes class.
            </summary>
            <param name="enabled">Determines whether the issuer is
            enabled.</param>
            <param name="created">Creation time in UTC.</param>
            <param name="updated">Last updated time in UTC.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.IssuerAttributes.Enabled">
            <summary>
            Gets or sets determines whether the issuer is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.IssuerAttributes.Created">
            <summary>
            Gets creation time in UTC.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.IssuerAttributes.Updated">
            <summary>
            Gets last updated time in UTC.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.IssuerCredentials">
            <summary>
            The credentials to be used for the certificate issuer.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.IssuerCredentials.#ctor">
            <summary>
            Initializes a new instance of the IssuerCredentials class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.IssuerCredentials.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the IssuerCredentials class.
            </summary>
            <param name="accountId">The user name/account name/account
            id.</param>
            <param name="password">The password/secret/account key.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.IssuerCredentials.AccountId">
            <summary>
            Gets or sets the user name/account name/account id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.IssuerCredentials.Password">
            <summary>
            Gets or sets the password/secret/account key.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.IssuerParameters">
            <summary>
            Parameters for the issuer of the X509 component of a certificate.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.IssuerParameters.#ctor">
            <summary>
            Initializes a new instance of the IssuerParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.IssuerParameters.#ctor(System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the IssuerParameters class.
            </summary>
            <param name="name">Name of the referenced issuer object or reserved
            names; for example, 'Self' or 'Unknown'.</param>
            <param name="certificateType">Type of certificate to be requested
            from the issuer provider.</param>
            <param name="certificateTransparency">Indicates if the certificates
            generated under this policy should be published to certificate
            transparency logs.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.IssuerParameters.Name">
            <summary>
            Gets or sets name of the referenced issuer object or reserved
            names; for example, 'Self' or 'Unknown'.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.IssuerParameters.CertificateType">
            <summary>
            Gets or sets type of certificate to be requested from the issuer
            provider.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.IssuerParameters.CertificateTransparency">
            <summary>
            Gets or sets indicates if the certificates generated under this
            policy should be published to certificate transparency logs.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.KeyAttributes">
            <summary>
            The attributes of a key managed by the key vault service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeyAttributes.#ctor">
            <summary>
            Initializes a new instance of the KeyAttributes class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeyAttributes.#ctor(System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the KeyAttributes class.
            </summary>
            <param name="enabled">Determines whether the object is
            enabled.</param>
            <param name="notBefore">Not before date in UTC.</param>
            <param name="expires">Expiry date in UTC.</param>
            <param name="created">Creation time in UTC.</param>
            <param name="updated">Last updated time in UTC.</param>
            <param name="recoveryLevel">Reflects the deletion recovery level
            currently in effect for keys in the current vault. If it contains
            'Purgeable' the key can be permanently deleted by a privileged
            user; otherwise, only the system can purge the key, at the end of
            the retention interval. Possible values include: 'Purgeable',
            'Recoverable+Purgeable', 'Recoverable',
            'Recoverable+ProtectedSubscription'</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyAttributes.RecoveryLevel">
            <summary>
            Gets reflects the deletion recovery level currently in effect for
            keys in the current vault. If it contains 'Purgeable' the key can
            be permanently deleted by a privileged user; otherwise, only the
            system can purge the key, at the end of the retention interval.
            Possible values include: 'Purgeable', 'Recoverable+Purgeable',
            'Recoverable', 'Recoverable+ProtectedSubscription'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.KeyCreateParameters">
            <summary>
            The key create parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeyCreateParameters.#ctor">
            <summary>
            Initializes a new instance of the KeyCreateParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeyCreateParameters.#ctor(System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Initializes a new instance of the KeyCreateParameters class.
            </summary>
            <param name="kty">The type of key to create. For valid values, see
            Microsoft.Azure.KeyVault.WebKey.JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA',
            'RSA-HSM', 'oct'</param>
            <param name="keySize">The key size in bits. For example: 2048,
            3072, or 4096 for RSA.</param>
            <param name="tags">Application specific metadata in the form of
            key-value pairs.</param>
            <param name="curve">Elliptic curve name. For valid values, see
            Microsoft.Azure.KeyVault.WebKey.JsonWebKeyCurveName. Possible values include: 'P-256', 'P-384',
            'P-521', 'P-256K'</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyCreateParameters.Kty">
            <summary>
            Gets or sets the type of key to create. For valid values, see
            Microsoft.Azure.KeyVault.WebKey.JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA',
            'RSA-HSM', 'oct'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyCreateParameters.KeySize">
            <summary>
            Gets or sets the key size in bits. For example: 2048, 3072, or 4096
            for RSA.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyCreateParameters.KeyOps">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyCreateParameters.KeyAttributes">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyCreateParameters.Tags">
            <summary>
            Gets or sets application specific metadata in the form of key-value
            pairs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyCreateParameters.Curve">
            <summary>
            Gets or sets elliptic curve name. For valid values, see
            Microsoft.Azure.KeyVault.WebKey.JsonWebKeyCurveName. Possible values include: 'P-256', 'P-384',
            'P-521', 'P-256K'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeyCreateParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.KeyImportParameters">
            <summary>
            The key import parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeyImportParameters.#ctor">
            <summary>
            Initializes a new instance of the KeyImportParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeyImportParameters.#ctor(Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Nullable{System.Boolean},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the KeyImportParameters class.
            </summary>
            <param name="key">The Json web key</param>
            <param name="hsm">Whether to import as a hardware key (HSM) or
            software key.</param>
            <param name="keyAttributes">The key management attributes.</param>
            <param name="tags">Application specific metadata in the form of
            key-value pairs.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyImportParameters.Hsm">
            <summary>
            Gets or sets whether to import as a hardware key (HSM) or software
            key.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyImportParameters.Key">
            <summary>
            Gets or sets the Json web key
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyImportParameters.KeyAttributes">
            <summary>
            Gets or sets the key management attributes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyImportParameters.Tags">
            <summary>
            Gets or sets application specific metadata in the form of key-value
            pairs.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeyImportParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.KeyOperationResult">
            <summary>
            The key operation result.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeyOperationResult.#ctor">
            <summary>
            Initializes a new instance of the KeyOperationResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeyOperationResult.#ctor(System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the KeyOperationResult class.
            </summary>
            <param name="kid">Key identifier</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyOperationResult.Kid">
            <summary>
            Gets key identifier
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyOperationResult.Result">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.KeyOperationsParameters">
            <summary>
            The key operations parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeyOperationsParameters.#ctor">
            <summary>
            Initializes a new instance of the KeyOperationsParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeyOperationsParameters.#ctor(System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the KeyOperationsParameters class.
            </summary>
            <param name="algorithm">algorithm identifier. Possible values
            include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyOperationsParameters.Algorithm">
            <summary>
            Gets or sets algorithm identifier. Possible values include:
            'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyOperationsParameters.Value">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeyOperationsParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.KeyProperties">
            <summary>
            Properties of the key pair backing a certificate.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeyProperties.#ctor">
            <summary>
            Initializes a new instance of the KeyProperties class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeyProperties.#ctor(System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String)">
            <summary>
            Initializes a new instance of the KeyProperties class.
            </summary>
            <param name="exportable">Indicates if the private key can be
            exported.</param>
            <param name="keyType">The type of key pair to be used for the
            certificate. Possible values include: 'EC', 'EC-HSM', 'RSA',
            'RSA-HSM', 'oct'</param>
            <param name="keySize">The key size in bits. For example: 2048,
            3072, or 4096 for RSA.</param>
            <param name="reuseKey">Indicates if the same key pair will be used
            on certificate renewal.</param>
            <param name="curve">Elliptic curve name. For valid values, see
            Microsoft.Azure.KeyVault.WebKey.JsonWebKeyCurveName. Possible values include: 'P-256', 'P-384',
            'P-521', 'P-256K'</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyProperties.Exportable">
            <summary>
            Gets or sets indicates if the private key can be exported.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyProperties.KeyType">
            <summary>
            Gets or sets the type of key pair to be used for the certificate.
            Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyProperties.KeySize">
            <summary>
            Gets or sets the key size in bits. For example: 2048, 3072, or 4096
            for RSA.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyProperties.ReuseKey">
            <summary>
            Gets or sets indicates if the same key pair will be used on
            certificate renewal.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyProperties.Curve">
            <summary>
            Gets or sets elliptic curve name. For valid values, see
            Microsoft.Azure.KeyVault.WebKey.JsonWebKeyCurveName. Possible values include: 'P-256', 'P-384',
            'P-521', 'P-256K'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.KeyRestoreParameters">
            <summary>
            The key restore parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeyRestoreParameters.#ctor">
            <summary>
            Initializes a new instance of the KeyRestoreParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeyRestoreParameters.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the KeyRestoreParameters class.
            </summary>
            <param name="keyBundleBackup">The backup blob associated with a key
            bundle.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyRestoreParameters.KeyBundleBackup">
            <summary>
            Gets or sets the backup blob associated with a key bundle.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeyRestoreParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.KeySignParameters">
            <summary>
            The key operations parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeySignParameters.#ctor">
            <summary>
            Initializes a new instance of the KeySignParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeySignParameters.#ctor(System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the KeySignParameters class.
            </summary>
            <param name="algorithm">The signing/verification algorithm
            identifier. For more information on possible algorithm types, see
            Microsoft.Azure.KeyVault.WebKey.JsonWebKeySignatureAlgorithm. Possible values include: 'PS256',
            'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256',
            'ES384', 'ES512', 'ES256K'</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeySignParameters.Algorithm">
            <summary>
            Gets or sets the signing/verification algorithm identifier. For
            more information on possible algorithm types, see
            Microsoft.Azure.KeyVault.WebKey.JsonWebKeySignatureAlgorithm. Possible values include: 'PS256',
            'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256',
            'ES384', 'ES512', 'ES256K'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeySignParameters.Value">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeySignParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.KeyUpdateParameters">
            <summary>
            The key update parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeyUpdateParameters.#ctor">
            <summary>
            Initializes a new instance of the KeyUpdateParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeyUpdateParameters.#ctor(System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the KeyUpdateParameters class.
            </summary>
            <param name="keyOps">Json web key operations. For more information
            on possible key operations, see Microsoft.Azure.KeyVault.WebKey.JsonWebKeyOperation.</param>
            <param name="tags">Application specific metadata in the form of
            key-value pairs.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyUpdateParameters.KeyOps">
            <summary>
            Gets or sets json web key operations. For more information on
            possible key operations, see Microsoft.Azure.KeyVault.WebKey.JsonWebKeyOperation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyUpdateParameters.KeyAttributes">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyUpdateParameters.Tags">
            <summary>
            Gets or sets application specific metadata in the form of key-value
            pairs.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.KeyUsageType">
            <summary>
            Defines values for KeyUsageType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.KeyVaultError">
            <summary>
            The key vault error exception.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeyVaultError.#ctor">
            <summary>
            Initializes a new instance of the KeyVaultError class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeyVaultError.#ctor(Microsoft.Azure.KeyVault.Models.Error)">
            <summary>
            Initializes a new instance of the KeyVaultError class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyVaultError.Error">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            <summary>
            Exception thrown for an invalid response with KeyVaultError
            information.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException.Request">
            <summary>
            Gets information about the associated HTTP request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException.Response">
            <summary>
            Gets information about the associated HTTP response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException.Body">
            <summary>
            Gets or sets the body object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException.#ctor">
            <summary>
            Initializes a new instance of the KeyVaultErrorException class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the KeyVaultErrorException class.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the KeyVaultErrorException class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">Inner exception.</param>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.KeyVerifyParameters">
            <summary>
            The key verify parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.#ctor">
            <summary>
            Initializes a new instance of the KeyVerifyParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.#ctor(System.String,System.Byte[],System.Byte[])">
            <summary>
            Initializes a new instance of the KeyVerifyParameters class.
            </summary>
            <param name="algorithm">The signing/verification algorithm. For
            more information on possible algorithm types, see
            Microsoft.Azure.KeyVault.WebKey.JsonWebKeySignatureAlgorithm. Possible values include: 'PS256',
            'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256',
            'ES384', 'ES512', 'ES256K'</param>
            <param name="digest">The digest used for signing.</param>
            <param name="signature">The signature to be verified.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Algorithm">
            <summary>
            Gets or sets the signing/verification algorithm. For more
            information on possible algorithm types, see
            Microsoft.Azure.KeyVault.WebKey.JsonWebKeySignatureAlgorithm. Possible values include: 'PS256',
            'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256',
            'ES384', 'ES512', 'ES256K'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Digest">
            <summary>
            Gets or sets the digest used for signing.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Signature">
            <summary>
            Gets or sets the signature to be verified.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.KeyVerifyResult">
            <summary>
            The key verify result.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeyVerifyResult.#ctor">
            <summary>
            Initializes a new instance of the KeyVerifyResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.KeyVerifyResult.#ctor(System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the KeyVerifyResult class.
            </summary>
            <param name="value">True if the signature is verified, otherwise
            false.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.KeyVerifyResult.Value">
            <summary>
            Gets true if the signature is verified, otherwise false.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.LifetimeAction">
            <summary>
            Action and its trigger that will be performed by Key Vault over the
            lifetime of a certificate.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.LifetimeAction.#ctor">
            <summary>
            Initializes a new instance of the LifetimeAction class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.LifetimeAction.#ctor(Microsoft.Azure.KeyVault.Models.Trigger,Microsoft.Azure.KeyVault.Models.Action)">
            <summary>
            Initializes a new instance of the LifetimeAction class.
            </summary>
            <param name="trigger">The condition that will execute the
            action.</param>
            <param name="action">The action that will be executed.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.LifetimeAction.Trigger">
            <summary>
            Gets or sets the condition that will execute the action.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.LifetimeAction.Action">
            <summary>
            Gets or sets the action that will be executed.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.LifetimeAction.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.OrganizationDetails">
            <summary>
            Details of the organization of the certificate issuer.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.OrganizationDetails.#ctor">
            <summary>
            Initializes a new instance of the OrganizationDetails class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.OrganizationDetails.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.KeyVault.Models.AdministratorDetails})">
            <summary>
            Initializes a new instance of the OrganizationDetails class.
            </summary>
            <param name="id">Id of the organization.</param>
            <param name="adminDetails">Details of the organization
            administrator.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.OrganizationDetails.Id">
            <summary>
            Gets or sets id of the organization.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.OrganizationDetails.AdminDetails">
            <summary>
            Gets or sets details of the organization administrator.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.Page`1">
            <summary>
            Defines a page in Azure responses.
            </summary>
            <typeparam name="T">Type of the page content items</typeparam>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.Page`1.NextPageLink">
            <summary>
            Gets the link to the next page.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.Page`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A an enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.Page`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A an enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.PendingCertificateSigningRequestResult">
            <summary>
            The pending certificate signing request result.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.PendingCertificateSigningRequestResult.#ctor">
            <summary>
            Initializes a new instance of the
            PendingCertificateSigningRequestResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.PendingCertificateSigningRequestResult.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            PendingCertificateSigningRequestResult class.
            </summary>
            <param name="value">The pending certificate signing request as
            Base64 encoded string.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.PendingCertificateSigningRequestResult.Value">
            <summary>
            Gets the pending certificate signing request as Base64 encoded
            string.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes">
            <summary>
            The SAS definition management attributes.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes.#ctor">
            <summary>
            Initializes a new instance of the SasDefinitionAttributes class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes.#ctor(System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the SasDefinitionAttributes class.
            </summary>
            <param name="enabled">the enabled state of the object.</param>
            <param name="created">Creation time in UTC.</param>
            <param name="updated">Last updated time in UTC.</param>
            <param name="recoveryLevel">Reflects the deletion recovery level
            currently in effect for SAS definitions in the current vault. If it
            contains 'Purgeable' the SAS definition can be permanently deleted
            by a privileged user; otherwise, only the system can purge the SAS
            definition, at the end of the retention interval. Possible values
            include: 'Purgeable', 'Recoverable+Purgeable', 'Recoverable',
            'Recoverable+ProtectedSubscription'</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes.Enabled">
            <summary>
            Gets or sets the enabled state of the object.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes.Created">
            <summary>
            Gets creation time in UTC.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes.Updated">
            <summary>
            Gets last updated time in UTC.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes.RecoveryLevel">
            <summary>
            Gets reflects the deletion recovery level currently in effect for
            SAS definitions in the current vault. If it contains 'Purgeable'
            the SAS definition can be permanently deleted by a privileged user;
            otherwise, only the system can purge the SAS definition, at the end
            of the retention interval. Possible values include: 'Purgeable',
            'Recoverable+Purgeable', 'Recoverable',
            'Recoverable+ProtectedSubscription'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.SasDefinitionBundle">
            <summary>
            A SAS definition bundle consists of key vault SAS definition details
            plus its attributes.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.SasDefinitionBundle.#ctor">
            <summary>
            Initializes a new instance of the SasDefinitionBundle class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.SasDefinitionBundle.#ctor(System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the SasDefinitionBundle class.
            </summary>
            <param name="id">The SAS definition id.</param>
            <param name="secretId">Storage account SAS definition secret
            id.</param>
            <param name="templateUri">The SAS definition token template signed
            with an arbitrary key.  Tokens created according to the SAS
            definition will have the same properties as the template.</param>
            <param name="sasType">The type of SAS token the SAS definition will
            create. Possible values include: 'account', 'service'</param>
            <param name="validityPeriod">The validity period of SAS tokens
            created according to the SAS definition.</param>
            <param name="attributes">The SAS definition attributes.</param>
            <param name="tags">Application specific metadata in the form of
            key-value pairs</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SasDefinitionBundle.Id">
            <summary>
            Gets the SAS definition id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SasDefinitionBundle.SecretId">
            <summary>
            Gets storage account SAS definition secret id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SasDefinitionBundle.TemplateUri">
            <summary>
            Gets the SAS definition token template signed with an arbitrary
            key.  Tokens created according to the SAS definition will have the
            same properties as the template.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SasDefinitionBundle.SasType">
            <summary>
            Gets the type of SAS token the SAS definition will create. Possible
            values include: 'account', 'service'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SasDefinitionBundle.ValidityPeriod">
            <summary>
            Gets the validity period of SAS tokens created according to the SAS
            definition.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SasDefinitionBundle.Attributes">
            <summary>
            Gets the SAS definition attributes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SasDefinitionBundle.Tags">
            <summary>
            Gets application specific metadata in the form of key-value pairs
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.SasDefinitionCreateParameters">
            <summary>
            The SAS definition create parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.SasDefinitionCreateParameters.#ctor">
            <summary>
            Initializes a new instance of the SasDefinitionCreateParameters
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.SasDefinitionCreateParameters.#ctor(System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the SasDefinitionCreateParameters
            class.
            </summary>
            <param name="templateUri">The SAS definition token template signed
            with an arbitrary key.  Tokens created according to the SAS
            definition will have the same properties as the template.</param>
            <param name="sasType">The type of SAS token the SAS definition will
            create. Possible values include: 'account', 'service'</param>
            <param name="validityPeriod">The validity period of SAS tokens
            created according to the SAS definition.</param>
            <param name="sasDefinitionAttributes">The attributes of the SAS
            definition.</param>
            <param name="tags">Application specific metadata in the form of
            key-value pairs.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SasDefinitionCreateParameters.TemplateUri">
            <summary>
            Gets or sets the SAS definition token template signed with an
            arbitrary key.  Tokens created according to the SAS definition will
            have the same properties as the template.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SasDefinitionCreateParameters.SasType">
            <summary>
            Gets or sets the type of SAS token the SAS definition will create.
            Possible values include: 'account', 'service'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SasDefinitionCreateParameters.ValidityPeriod">
            <summary>
            Gets or sets the validity period of SAS tokens created according to
            the SAS definition.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SasDefinitionCreateParameters.SasDefinitionAttributes">
            <summary>
            Gets or sets the attributes of the SAS definition.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SasDefinitionCreateParameters.Tags">
            <summary>
            Gets or sets application specific metadata in the form of key-value
            pairs.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.SasDefinitionCreateParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.SasDefinitionUpdateParameters">
            <summary>
            The SAS definition update parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.SasDefinitionUpdateParameters.#ctor">
            <summary>
            Initializes a new instance of the SasDefinitionUpdateParameters
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.SasDefinitionUpdateParameters.#ctor(System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the SasDefinitionUpdateParameters
            class.
            </summary>
            <param name="templateUri">The SAS definition token template signed
            with an arbitrary key.  Tokens created according to the SAS
            definition will have the same properties as the template.</param>
            <param name="sasType">The type of SAS token the SAS definition will
            create. Possible values include: 'account', 'service'</param>
            <param name="validityPeriod">The validity period of SAS tokens
            created according to the SAS definition.</param>
            <param name="sasDefinitionAttributes">The attributes of the SAS
            definition.</param>
            <param name="tags">Application specific metadata in the form of
            key-value pairs.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SasDefinitionUpdateParameters.TemplateUri">
            <summary>
            Gets or sets the SAS definition token template signed with an
            arbitrary key.  Tokens created according to the SAS definition will
            have the same properties as the template.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SasDefinitionUpdateParameters.SasType">
            <summary>
            Gets or sets the type of SAS token the SAS definition will create.
            Possible values include: 'account', 'service'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SasDefinitionUpdateParameters.ValidityPeriod">
            <summary>
            Gets or sets the validity period of SAS tokens created according to
            the SAS definition.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SasDefinitionUpdateParameters.SasDefinitionAttributes">
            <summary>
            Gets or sets the attributes of the SAS definition.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SasDefinitionUpdateParameters.Tags">
            <summary>
            Gets or sets application specific metadata in the form of key-value
            pairs.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.SasTokenType">
            <summary>
            Defines values for SasTokenType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.SecretAttributes">
            <summary>
            The secret management attributes.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.SecretAttributes.#ctor">
            <summary>
            Initializes a new instance of the SecretAttributes class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.SecretAttributes.#ctor(System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the SecretAttributes class.
            </summary>
            <param name="enabled">Determines whether the object is
            enabled.</param>
            <param name="notBefore">Not before date in UTC.</param>
            <param name="expires">Expiry date in UTC.</param>
            <param name="created">Creation time in UTC.</param>
            <param name="updated">Last updated time in UTC.</param>
            <param name="recoveryLevel">Reflects the deletion recovery level
            currently in effect for secrets in the current vault. If it
            contains 'Purgeable', the secret can be permanently deleted by a
            privileged user; otherwise, only the system can purge the secret,
            at the end of the retention interval. Possible values include:
            'Purgeable', 'Recoverable+Purgeable', 'Recoverable',
            'Recoverable+ProtectedSubscription'</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SecretAttributes.RecoveryLevel">
            <summary>
            Gets reflects the deletion recovery level currently in effect for
            secrets in the current vault. If it contains 'Purgeable', the
            secret can be permanently deleted by a privileged user; otherwise,
            only the system can purge the secret, at the end of the retention
            interval. Possible values include: 'Purgeable',
            'Recoverable+Purgeable', 'Recoverable',
            'Recoverable+ProtectedSubscription'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.SecretProperties">
            <summary>
            Properties of the key backing a certificate.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.SecretProperties.#ctor">
            <summary>
            Initializes a new instance of the SecretProperties class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.SecretProperties.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SecretProperties class.
            </summary>
            <param name="contentType">The media type (MIME type).</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SecretProperties.ContentType">
            <summary>
            Gets or sets the media type (MIME type).
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.SecretRestoreParameters">
            <summary>
            The secret restore parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.SecretRestoreParameters.#ctor">
            <summary>
            Initializes a new instance of the SecretRestoreParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.SecretRestoreParameters.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the SecretRestoreParameters class.
            </summary>
            <param name="secretBundleBackup">The backup blob associated with a
            secret bundle.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SecretRestoreParameters.SecretBundleBackup">
            <summary>
            Gets or sets the backup blob associated with a secret bundle.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.SecretRestoreParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.SecretSetParameters">
            <summary>
            The secret set parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.SecretSetParameters.#ctor">
            <summary>
            Initializes a new instance of the SecretSetParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.SecretSetParameters.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes)">
            <summary>
            Initializes a new instance of the SecretSetParameters class.
            </summary>
            <param name="value">The value of the secret.</param>
            <param name="tags">Application specific metadata in the form of
            key-value pairs.</param>
            <param name="contentType">Type of the secret value such as a
            password.</param>
            <param name="secretAttributes">The secret management
            attributes.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SecretSetParameters.Value">
            <summary>
            Gets or sets the value of the secret.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SecretSetParameters.Tags">
            <summary>
            Gets or sets application specific metadata in the form of key-value
            pairs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SecretSetParameters.ContentType">
            <summary>
            Gets or sets type of the secret value such as a password.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SecretSetParameters.SecretAttributes">
            <summary>
            Gets or sets the secret management attributes.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.SecretSetParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.SecretUpdateParameters">
            <summary>
            The secret update parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.SecretUpdateParameters.#ctor">
            <summary>
            Initializes a new instance of the SecretUpdateParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.SecretUpdateParameters.#ctor(System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the SecretUpdateParameters class.
            </summary>
            <param name="contentType">Type of the secret value such as a
            password.</param>
            <param name="secretAttributes">The secret management
            attributes.</param>
            <param name="tags">Application specific metadata in the form of
            key-value pairs.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SecretUpdateParameters.ContentType">
            <summary>
            Gets or sets type of the secret value such as a password.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SecretUpdateParameters.SecretAttributes">
            <summary>
            Gets or sets the secret management attributes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SecretUpdateParameters.Tags">
            <summary>
            Gets or sets application specific metadata in the form of key-value
            pairs.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.StorageAccountAttributes">
            <summary>
            The storage account management attributes.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.StorageAccountAttributes.#ctor">
            <summary>
            Initializes a new instance of the StorageAccountAttributes class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.StorageAccountAttributes.#ctor(System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the StorageAccountAttributes class.
            </summary>
            <param name="enabled">the enabled state of the object.</param>
            <param name="created">Creation time in UTC.</param>
            <param name="updated">Last updated time in UTC.</param>
            <param name="recoveryLevel">Reflects the deletion recovery level
            currently in effect for storage accounts in the current vault. If
            it contains 'Purgeable' the storage account can be permanently
            deleted by a privileged user; otherwise, only the system can purge
            the storage account, at the end of the retention interval. Possible
            values include: 'Purgeable', 'Recoverable+Purgeable',
            'Recoverable', 'Recoverable+ProtectedSubscription'</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.StorageAccountAttributes.Enabled">
            <summary>
            Gets or sets the enabled state of the object.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.StorageAccountAttributes.Created">
            <summary>
            Gets creation time in UTC.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.StorageAccountAttributes.Updated">
            <summary>
            Gets last updated time in UTC.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.StorageAccountAttributes.RecoveryLevel">
            <summary>
            Gets reflects the deletion recovery level currently in effect for
            storage accounts in the current vault. If it contains 'Purgeable'
            the storage account can be permanently deleted by a privileged
            user; otherwise, only the system can purge the storage account, at
            the end of the retention interval. Possible values include:
            'Purgeable', 'Recoverable+Purgeable', 'Recoverable',
            'Recoverable+ProtectedSubscription'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.StorageAccountCreateParameters">
            <summary>
            The storage account create parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.StorageAccountCreateParameters.#ctor">
            <summary>
            Initializes a new instance of the StorageAccountCreateParameters
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.StorageAccountCreateParameters.#ctor(System.String,System.String,System.Boolean,System.String,Microsoft.Azure.KeyVault.Models.StorageAccountAttributes,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the StorageAccountCreateParameters
            class.
            </summary>
            <param name="resourceId">Storage account resource id.</param>
            <param name="activeKeyName">Current active storage account key
            name.</param>
            <param name="autoRegenerateKey">whether keyvault should manage the
            storage account for the user.</param>
            <param name="regenerationPeriod">The key regeneration time duration
            specified in ISO-8601 format.</param>
            <param name="storageAccountAttributes">The attributes of the
            storage account.</param>
            <param name="tags">Application specific metadata in the form of
            key-value pairs.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.StorageAccountCreateParameters.ResourceId">
            <summary>
            Gets or sets storage account resource id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.StorageAccountCreateParameters.ActiveKeyName">
            <summary>
            Gets or sets current active storage account key name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.StorageAccountCreateParameters.AutoRegenerateKey">
            <summary>
            Gets or sets whether keyvault should manage the storage account for
            the user.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.StorageAccountCreateParameters.RegenerationPeriod">
            <summary>
            Gets or sets the key regeneration time duration specified in
            ISO-8601 format.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.StorageAccountCreateParameters.StorageAccountAttributes">
            <summary>
            Gets or sets the attributes of the storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.StorageAccountCreateParameters.Tags">
            <summary>
            Gets or sets application specific metadata in the form of key-value
            pairs.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.StorageAccountCreateParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.StorageAccountRegenerteKeyParameters">
            <summary>
            The storage account key regenerate parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.StorageAccountRegenerteKeyParameters.#ctor">
            <summary>
            Initializes a new instance of the
            StorageAccountRegenerteKeyParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.StorageAccountRegenerteKeyParameters.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            StorageAccountRegenerteKeyParameters class.
            </summary>
            <param name="keyName">The storage account key name.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.StorageAccountRegenerteKeyParameters.KeyName">
            <summary>
            Gets or sets the storage account key name.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.StorageAccountRegenerteKeyParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.StorageAccountUpdateParameters">
            <summary>
            The storage account update parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.StorageAccountUpdateParameters.#ctor">
            <summary>
            Initializes a new instance of the StorageAccountUpdateParameters
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.StorageAccountUpdateParameters.#ctor(System.String,System.Nullable{System.Boolean},System.String,Microsoft.Azure.KeyVault.Models.StorageAccountAttributes,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the StorageAccountUpdateParameters
            class.
            </summary>
            <param name="activeKeyName">The current active storage account key
            name.</param>
            <param name="autoRegenerateKey">whether keyvault should manage the
            storage account for the user.</param>
            <param name="regenerationPeriod">The key regeneration time duration
            specified in ISO-8601 format.</param>
            <param name="storageAccountAttributes">The attributes of the
            storage account.</param>
            <param name="tags">Application specific metadata in the form of
            key-value pairs.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.StorageAccountUpdateParameters.ActiveKeyName">
            <summary>
            Gets or sets the current active storage account key name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.StorageAccountUpdateParameters.AutoRegenerateKey">
            <summary>
            Gets or sets whether keyvault should manage the storage account for
            the user.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.StorageAccountUpdateParameters.RegenerationPeriod">
            <summary>
            Gets or sets the key regeneration time duration specified in
            ISO-8601 format.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.StorageAccountUpdateParameters.StorageAccountAttributes">
            <summary>
            Gets or sets the attributes of the storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.StorageAccountUpdateParameters.Tags">
            <summary>
            Gets or sets application specific metadata in the form of key-value
            pairs.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.StorageBundle">
            <summary>
            A Storage account bundle consists of key vault storage account details
            plus its attributes.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.StorageBundle.#ctor">
            <summary>
            Initializes a new instance of the StorageBundle class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.StorageBundle.#ctor(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,Microsoft.Azure.KeyVault.Models.StorageAccountAttributes,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the StorageBundle class.
            </summary>
            <param name="id">The storage account id.</param>
            <param name="resourceId">The storage account resource id.</param>
            <param name="activeKeyName">The current active storage account key
            name.</param>
            <param name="autoRegenerateKey">whether keyvault should manage the
            storage account for the user.</param>
            <param name="regenerationPeriod">The key regeneration time duration
            specified in ISO-8601 format.</param>
            <param name="attributes">The storage account attributes.</param>
            <param name="tags">Application specific metadata in the form of
            key-value pairs</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.StorageBundle.Id">
            <summary>
            Gets the storage account id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.StorageBundle.ResourceId">
            <summary>
            Gets the storage account resource id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.StorageBundle.ActiveKeyName">
            <summary>
            Gets the current active storage account key name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.StorageBundle.AutoRegenerateKey">
            <summary>
            Gets whether keyvault should manage the storage account for the
            user.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.StorageBundle.RegenerationPeriod">
            <summary>
            Gets the key regeneration time duration specified in ISO-8601
            format.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.StorageBundle.Attributes">
            <summary>
            Gets the storage account attributes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.StorageBundle.Tags">
            <summary>
            Gets application specific metadata in the form of key-value pairs
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.StorageRestoreParameters">
            <summary>
            The secret restore parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.StorageRestoreParameters.#ctor">
            <summary>
            Initializes a new instance of the StorageRestoreParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.StorageRestoreParameters.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the StorageRestoreParameters class.
            </summary>
            <param name="storageBundleBackup">The backup blob associated with a
            storage account.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.StorageRestoreParameters.StorageBundleBackup">
            <summary>
            Gets or sets the backup blob associated with a storage account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.StorageRestoreParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.SubjectAlternativeNames">
            <summary>
            The subject alternate names of a X509 object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.SubjectAlternativeNames.#ctor">
            <summary>
            Initializes a new instance of the SubjectAlternativeNames class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.SubjectAlternativeNames.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the SubjectAlternativeNames class.
            </summary>
            <param name="emails">Email addresses.</param>
            <param name="dnsNames">Domain names.</param>
            <param name="upns">User principal names.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SubjectAlternativeNames.Emails">
            <summary>
            Gets or sets email addresses.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SubjectAlternativeNames.DnsNames">
            <summary>
            Gets or sets domain names.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.SubjectAlternativeNames.Upns">
            <summary>
            Gets or sets user principal names.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.Trigger">
            <summary>
            A condition to be satisfied for an action to be executed.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.Trigger.#ctor">
            <summary>
            Initializes a new instance of the Trigger class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.Trigger.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the Trigger class.
            </summary>
            <param name="lifetimePercentage">Percentage of lifetime at which to
            trigger. Value should be between 1 and 99.</param>
            <param name="daysBeforeExpiry">Days before expiry to attempt
            renewal. Value should be between 1 and validity_in_months
            multiplied by 27. If validity_in_months is 36, then value should be
            between 1 and 972 (36 * 27).</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.Trigger.LifetimePercentage">
            <summary>
            Gets or sets percentage of lifetime at which to trigger. Value
            should be between 1 and 99.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.Trigger.DaysBeforeExpiry">
            <summary>
            Gets or sets days before expiry to attempt renewal. Value should be
            between 1 and validity_in_months multiplied by 27. If
            validity_in_months is 36, then value should be between 1 and 972
            (36 * 27).
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.Trigger.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.Models.X509CertificateProperties">
            <summary>
            Properties of the X509 component of a certificate.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.X509CertificateProperties.#ctor">
            <summary>
            Initializes a new instance of the X509CertificateProperties class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.X509CertificateProperties.#ctor(System.String,System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.SubjectAlternativeNames,System.Collections.Generic.IList{System.String},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the X509CertificateProperties class.
            </summary>
            <param name="subject">The subject name. Should be a valid X509
            distinguished Name.</param>
            <param name="ekus">The enhanced key usage.</param>
            <param name="subjectAlternativeNames">The subject alternative
            names.</param>
            <param name="keyUsage">List of key usages.</param>
            <param name="validityInMonths">The duration that the ceritifcate is
            valid in months.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.X509CertificateProperties.Subject">
            <summary>
            Gets or sets the subject name. Should be a valid X509 distinguished
            Name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.X509CertificateProperties.Ekus">
            <summary>
            Gets or sets the enhanced key usage.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.X509CertificateProperties.SubjectAlternativeNames">
            <summary>
            Gets or sets the subject alternative names.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.X509CertificateProperties.KeyUsage">
            <summary>
            Gets or sets list of key usages.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.Models.X509CertificateProperties.ValidityInMonths">
            <summary>
            Gets or sets the duration that the ceritifcate is valid in months.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.Models.X509CertificateProperties.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.IKeyVaultClient">
            <summary>
            Client class to perform cryptographic key operations and vault
            operations against the Key Vault service.
            </summary>
            <summary>
            The key vault client performs cryptographic key operations and vault
            operations against the Key Vault service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetPendingCertificateSigningRequestWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the certificate operation response.
            </summary>
            <param name='vault'>
            The vault name, e.g. https://myvault.vault.azure.net
            </param>
            <param name='certificateName'>
            The name of the certificate
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.IKeyVaultClient.SerializationSettings">
            <summary>
            The base URI of the service.
            </summary>
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.IKeyVaultClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.IKeyVaultClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.IKeyVaultClient.ApiVersion">
            <summary>
            Client API version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.IKeyVaultClient.AcceptLanguage">
            <summary>
            Gets or sets the preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.IKeyVaultClient.LongRunningOperationRetryTimeout">
            <summary>
            Gets or sets the retry timeout in seconds for Long Running
            Operations. Default value is 30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.IKeyVaultClient.GenerateClientRequestId">
            <summary>
            When set to true a unique x-ms-client-request-id value is generated
            and included in each request. Default is true.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.CreateKeyWithHttpMessagesAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a new key, stores it, then returns key parameters and
            attributes to the client.
            </summary>
            <remarks>
            The create key operation can be used to create any key type in
            Azure Key Vault. If the named key already exists, Azure Key Vault
            creates a new version of the key. It requires the keys/create
            permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name for the new key. The system will generate the version name
            for the new key.
            </param>
            <param name='kty'>
            The type of key to create. For valid values, see Microsoft.Azure.KeyVault.WebKey.JsonWebKeyType.
            Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct'
            </param>
            <param name='keySize'>
            The key size in bits. For example: 2048, 3072, or 4096 for RSA.
            </param>
            <param name='keyOps'>
            </param>
            <param name='keyAttributes'>
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='curve'>
            Elliptic curve name. For valid values, see Microsoft.Azure.KeyVault.WebKey.JsonWebKeyCurveName.
            Possible values include: 'P-256', 'P-384', 'P-521', 'P-256K'
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.ImportKeyWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Nullable{System.Boolean},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Imports an externally created key, stores it, and returns key
            parameters and attributes to the client.
            </summary>
            <remarks>
            The import key operation may be used to import any key type into an
            Azure Key Vault. If the named key already exists, Azure Key Vault
            creates a new version of the key. This operation requires the
            keys/import permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            Name for the imported key.
            </param>
            <param name='key'>
            The Json web key
            </param>
            <param name='hsm'>
            Whether to import as a hardware key (HSM) or software key.
            </param>
            <param name='keyAttributes'>
            The key management attributes.
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.DeleteKeyWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a key of any type from storage in Azure Key Vault.
            </summary>
            <remarks>
            The delete key operation cannot be used to remove individual
            versions of a key. This operation removes the cryptographic
            material associated with the key, which means the key is not usable
            for Sign/Verify, Wrap/Unwrap or Encrypt/Decrypt operations. This
            operation requires the keys/delete permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key to delete.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.UpdateKeyWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            The update key operation changes specified attributes of a stored
            key and can be applied to any key type and key version stored in
            Azure Key Vault.
            </summary>
            <remarks>
            In order to perform this operation, the key must already exist in
            the Key Vault. Note: The cryptographic material of a key itself
            cannot be changed. This operation requires the keys/update
            permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of key to update.
            </param>
            <param name='keyVersion'>
            The version of the key to update.
            </param>
            <param name='keyOps'>
            Json web key operations. For more information on possible key
            operations, see Microsoft.Azure.KeyVault.WebKey.JsonWebKeyOperation.
            </param>
            <param name='keyAttributes'>
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetKeyWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the public part of a stored key.
            </summary>
            <remarks>
            The get key operation is applicable to all key types. If the
            requested key is symmetric, then no key material is released in the
            response. This operation requires the keys/get permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key to get.
            </param>
            <param name='keyVersion'>
            Adding the version parameter retrieves a specific version of a key.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetKeyVersionsWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of individual key versions with the same key name.
            </summary>
            <remarks>
            The full key identifier, attributes, and tags are provided in the
            response. This operation requires the keys/list permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the
            service will return up to 25 results.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetKeysWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List keys in the specified vault.
            </summary>
            <remarks>
            Retrieves a list of the keys in the Key Vault as JSON Web Key
            structures that contain the public part of a stored key. The LIST
            operation is applicable to all key types, however only the base key
            identifier, attributes, and tags are provided in the response.
            Individual versions of a key are not listed in the response. This
            operation requires the keys/list permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the
            service will return up to 25 results.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.BackupKeyWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Requests that a backup of the specified key be downloaded to the
            client.
            </summary>
            <remarks>
            The Key Backup operation exports a key from Azure Key Vault in a
            protected form. Note that this operation does NOT return key
            material in a form that can be used outside the Azure Key Vault
            system, the returned key material is either protected to a Azure
            Key Vault HSM or to Azure Key Vault itself. The intent of this
            operation is to allow a client to GENERATE a key in one Azure Key
            Vault instance, BACKUP the key, and then RESTORE it into another
            Azure Key Vault instance. The BACKUP operation may be used to
            export, in protected form, any key type from Azure Key Vault.
            Individual versions of a key cannot be backed up. BACKUP / RESTORE
            can be performed within geographical boundaries only; meaning that
            a BACKUP from one geographical area cannot be restored to another
            geographical area. For example, a backup from the US geographical
            area cannot be restored in an EU geographical area. This operation
            requires the key/backup permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.RestoreKeyWithHttpMessagesAsync(System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Restores a backed up key to a vault.
            </summary>
            <remarks>
            Imports a previously backed up key into Azure Key Vault, restoring
            the key, its key identifier, attributes and access control
            policies. The RESTORE operation may be used to import a previously
            backed up key. Individual versions of a key cannot be restored. The
            key is restored in its entirety with the same key name as it had
            when it was backed up. If the key name is not available in the
            target Key Vault, the RESTORE operation will be rejected. While the
            key name is retained during restore, the final key identifier will
            change if the key is restored to a different vault. Restore will
            restore all versions and preserve version identifiers. The RESTORE
            operation is subject to security constraints: The target Key Vault
            must be owned by the same Microsoft Azure Subscription as the
            source Key Vault The user must have RESTORE permission in the
            target Key Vault. This operation requires the keys/restore
            permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyBundleBackup'>
            The backup blob associated with a key bundle.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.EncryptWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Encrypts an arbitrary sequence of bytes using an encryption key
            that is stored in a key vault.
            </summary>
            <remarks>
            The ENCRYPT operation encrypts an arbitrary sequence of bytes using
            an encryption key that is stored in Azure Key Vault. Note that the
            ENCRYPT operation only supports a single block of data, the size of
            which is dependent on the target key and the encryption algorithm
            to be used. The ENCRYPT operation is only strictly necessary for
            symmetric keys stored in Azure Key Vault since protection with an
            asymmetric key can be performed using public portion of the key.
            This operation is supported for asymmetric keys as a convenience
            for callers that have a key-reference but do not have access to the
            public key material. This operation requires the keys/encypt
            permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key.
            </param>
            <param name='keyVersion'>
            The version of the key.
            </param>
            <param name='algorithm'>
            algorithm identifier. Possible values include: 'RSA-OAEP',
            'RSA-OAEP-256', 'RSA1_5'
            </param>
            <param name='value'>
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.DecryptWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Decrypts a single block of encrypted data.
            </summary>
            <remarks>
            The DECRYPT operation decrypts a well-formed block of ciphertext
            using the target encryption key and specified algorithm. This
            operation is the reverse of the ENCRYPT operation; only a single
            block of data may be decrypted, the size of this block is dependent
            on the target key and the algorithm to be used. The DECRYPT
            operation applies to asymmetric and symmetric keys stored in Azure
            Key Vault since it uses the private portion of the key. This
            operation requires the keys/decrypt permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key.
            </param>
            <param name='keyVersion'>
            The version of the key.
            </param>
            <param name='algorithm'>
            algorithm identifier. Possible values include: 'RSA-OAEP',
            'RSA-OAEP-256', 'RSA1_5'
            </param>
            <param name='value'>
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.SignWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a signature from a digest using the specified key.
            </summary>
            <remarks>
            The SIGN operation is applicable to asymmetric and symmetric keys
            stored in Azure Key Vault since this operation uses the private
            portion of the key. This operation requires the keys/sign
            permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key.
            </param>
            <param name='keyVersion'>
            The version of the key.
            </param>
            <param name='algorithm'>
            The signing/verification algorithm identifier. For more information
            on possible algorithm types, see Microsoft.Azure.KeyVault.WebKey.JsonWebKeySignatureAlgorithm.
            Possible values include: 'PS256', 'PS384', 'PS512', 'RS256',
            'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K'
            </param>
            <param name='value'>
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.VerifyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Byte[],System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Verifies a signature using a specified key.
            </summary>
            <remarks>
            The VERIFY operation is applicable to symmetric keys stored in
            Azure Key Vault. VERIFY is not strictly necessary for asymmetric
            keys stored in Azure Key Vault since signature verification can be
            performed using the public portion of the key but this operation is
            supported as a convenience for callers that only have a
            key-reference and not the public portion of the key. This operation
            requires the keys/verify permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key.
            </param>
            <param name='keyVersion'>
            The version of the key.
            </param>
            <param name='algorithm'>
            The signing/verification algorithm. For more information on
            possible algorithm types, see Microsoft.Azure.KeyVault.WebKey.JsonWebKeySignatureAlgorithm.
            Possible values include: 'PS256', 'PS384', 'PS512', 'RS256',
            'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K'
            </param>
            <param name='digest'>
            The digest used for signing.
            </param>
            <param name='signature'>
            The signature to be verified.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.WrapKeyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Wraps a symmetric key using a specified key.
            </summary>
            <remarks>
            The WRAP operation supports encryption of a symmetric key using a
            key encryption key that has previously been stored in an Azure Key
            Vault. The WRAP operation is only strictly necessary for symmetric
            keys stored in Azure Key Vault since protection with an asymmetric
            key can be performed using the public portion of the key. This
            operation is supported for asymmetric keys as a convenience for
            callers that have a key-reference but do not have access to the
            public key material. This operation requires the keys/wrapKey
            permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key.
            </param>
            <param name='keyVersion'>
            The version of the key.
            </param>
            <param name='algorithm'>
            algorithm identifier. Possible values include: 'RSA-OAEP',
            'RSA-OAEP-256', 'RSA1_5'
            </param>
            <param name='value'>
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.UnwrapKeyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Unwraps a symmetric key using the specified key that was initially
            used for wrapping that key.
            </summary>
            <remarks>
            The UNWRAP operation supports decryption of a symmetric key using
            the target key encryption key. This operation is the reverse of the
            WRAP operation. The UNWRAP operation applies to asymmetric and
            symmetric keys stored in Azure Key Vault since it uses the private
            portion of the key. This operation requires the keys/unwrapKey
            permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key.
            </param>
            <param name='keyVersion'>
            The version of the key.
            </param>
            <param name='algorithm'>
            algorithm identifier. Possible values include: 'RSA-OAEP',
            'RSA-OAEP-256', 'RSA1_5'
            </param>
            <param name='value'>
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetDeletedKeysWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the deleted keys in the specified vault.
            </summary>
            <remarks>
            Retrieves a list of the keys in the Key Vault as JSON Web Key
            structures that contain the public part of a deleted key. This
            operation includes deletion-specific information. The Get Deleted
            Keys operation is applicable for vaults enabled for soft-delete.
            While the operation can be invoked on any vault, it will return an
            error if invoked on a non soft-delete enabled vault. This operation
            requires the keys/list permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the
            service will return up to 25 results.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetDeletedKeyWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the public part of a deleted key.
            </summary>
            <remarks>
            The Get Deleted Key operation is applicable for soft-delete enabled
            vaults. While the operation can be invoked on any vault, it will
            return an error if invoked on a non soft-delete enabled vault. This
            operation requires the keys/get permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.PurgeDeletedKeyWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Permanently deletes the specified key.
            </summary>
            <remarks>
            The Purge Deleted Key operation is applicable for soft-delete
            enabled vaults. While the operation can be invoked on any vault, it
            will return an error if invoked on a non soft-delete enabled vault.
            This operation requires the keys/purge permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.RecoverDeletedKeyWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Recovers the deleted key to its latest version.
            </summary>
            <remarks>
            The Recover Deleted Key operation is applicable for deleted keys in
            soft-delete enabled vaults. It recovers the deleted key back to its
            latest version under /keys. An attempt to recover an non-deleted
            key will return an error. Consider this the inverse of the delete
            operation on soft-delete enabled vaults. This operation requires
            the keys/recover permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the deleted key.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.SetSecretWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets a secret in a specified key vault.
            </summary>
            <remarks>
            The SET operation adds a secret to the Azure Key Vault. If the
            named secret already exists, Azure Key Vault creates a new version
            of that secret. This operation requires the secrets/set permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='secretName'>
            The name of the secret.
            </param>
            <param name='value'>
            The value of the secret.
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='contentType'>
            Type of the secret value such as a password.
            </param>
            <param name='secretAttributes'>
            The secret management attributes.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.DeleteSecretWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a secret from a specified key vault.
            </summary>
            <remarks>
            The DELETE operation applies to any secret stored in Azure Key
            Vault. DELETE cannot be applied to an individual version of a
            secret. This operation requires the secrets/delete permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='secretName'>
            The name of the secret.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.UpdateSecretWithHttpMessagesAsync(System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the attributes associated with a specified secret in a
            given key vault.
            </summary>
            <remarks>
            The UPDATE operation changes specified attributes of an existing
            stored secret. Attributes that are not specified in the request are
            left unchanged. The value of a secret itself cannot be changed.
            This operation requires the secrets/set permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='secretName'>
            The name of the secret.
            </param>
            <param name='secretVersion'>
            The version of the secret.
            </param>
            <param name='contentType'>
            Type of the secret value such as a password.
            </param>
            <param name='secretAttributes'>
            The secret management attributes.
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetSecretWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get a specified secret from a given key vault.
            </summary>
            <remarks>
            The GET operation is applicable to any secret stored in Azure Key
            Vault. This operation requires the secrets/get permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='secretName'>
            The name of the secret.
            </param>
            <param name='secretVersion'>
            The version of the secret.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetSecretsWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List secrets in a specified key vault.
            </summary>
            <remarks>
            The Get Secrets operation is applicable to the entire vault.
            However, only the base secret identifier and its attributes are
            provided in the response. Individual secret versions are not listed
            in the response. This operation requires the secrets/list
            permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified,
            the service will return up to 25 results.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetSecretVersionsWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List all versions of the specified secret.
            </summary>
            <remarks>
            The full secret identifier and attributes are provided in the
            response. No values are returned for the secrets. This operations
            requires the secrets/list permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='secretName'>
            The name of the secret.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified,
            the service will return up to 25 results.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetDeletedSecretsWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists deleted secrets for the specified vault.
            </summary>
            <remarks>
            The Get Deleted Secrets operation returns the secrets that have
            been deleted for a vault enabled for soft-delete. This operation
            requires the secrets/list permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the
            service will return up to 25 results.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetDeletedSecretWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the specified deleted secret.
            </summary>
            <remarks>
            The Get Deleted Secret operation returns the specified deleted
            secret along with its attributes. This operation requires the
            secrets/get permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='secretName'>
            The name of the secret.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.PurgeDeletedSecretWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Permanently deletes the specified secret.
            </summary>
            <remarks>
            The purge deleted secret operation removes the secret permanently,
            without the possibility of recovery. This operation can only be
            enabled on a soft-delete enabled vault. This operation requires the
            secrets/purge permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='secretName'>
            The name of the secret.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.RecoverDeletedSecretWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Recovers the deleted secret to the latest version.
            </summary>
            <remarks>
            Recovers the deleted secret in the specified vault. This operation
            can only be performed on a soft-delete enabled vault. This
            operation requires the secrets/recover permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='secretName'>
            The name of the deleted secret.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.BackupSecretWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Backs up the specified secret.
            </summary>
            <remarks>
            Requests that a backup of the specified secret be downloaded to the
            client. All versions of the secret will be downloaded. This
            operation requires the secrets/backup permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='secretName'>
            The name of the secret.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.RestoreSecretWithHttpMessagesAsync(System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Restores a backed up secret to a vault.
            </summary>
            <remarks>
            Restores a backed up secret, and all its versions, to a vault. This
            operation requires the secrets/restore permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='secretBundleBackup'>
            The backup blob associated with a secret bundle.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetCertificatesWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List certificates in a specified key vault
            </summary>
            <remarks>
            The GetCertificates operation returns the set of certificates
            resources in the specified key vault. This operation requires the
            certificates/list permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the
            service will return up to 25 results.
            </param>
            <param name='includePending'>
            Specifies whether to include certificates which are not completely
            provisioned.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.DeleteCertificateWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a certificate from a specified key vault.
            </summary>
            <remarks>
            Deletes all versions of a certificate object along with its
            associated policy. Delete certificate cannot be used to remove
            individual versions of a certificate object. This operation
            requires the certificates/delete permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.SetCertificateContactsWithHttpMessagesAsync(System.String,Microsoft.Azure.KeyVault.Models.Contacts,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets the certificate contacts for the specified key vault.
            </summary>
            <remarks>
            Sets the certificate contacts for the specified key vault. This
            operation requires the certificates/managecontacts permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='contacts'>
            The contacts for the key vault certificate.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetCertificateContactsWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the certificate contacts for a specified key vault.
            </summary>
            <remarks>
            The GetCertificateContacts operation returns the set of certificate
            contact resources in the specified key vault. This operation
            requires the certificates/managecontacts permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.DeleteCertificateContactsWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the certificate contacts for a specified key vault.
            </summary>
            <remarks>
            Deletes the certificate contacts for a specified key vault
            certificate. This operation requires the
            certificates/managecontacts permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetCertificateIssuersWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List certificate issuers for a specified key vault.
            </summary>
            <remarks>
            The GetCertificateIssuers operation returns the set of certificate
            issuer resources in the specified key vault. This operation
            requires the certificates/manageissuers/getissuers permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the
            service will return up to 25 results.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.SetCertificateIssuerWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.IssuerCredentials,Microsoft.Azure.KeyVault.Models.OrganizationDetails,Microsoft.Azure.KeyVault.Models.IssuerAttributes,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets the specified certificate issuer.
            </summary>
            <remarks>
            The SetCertificateIssuer operation adds or updates the specified
            certificate issuer. This operation requires the
            certificates/setissuers permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='issuerName'>
            The name of the issuer.
            </param>
            <param name='provider'>
            The issuer provider.
            </param>
            <param name='credentials'>
            The credentials to be used for the issuer.
            </param>
            <param name='organizationDetails'>
            Details of the organization as provided to the issuer.
            </param>
            <param name='attributes'>
            Attributes of the issuer object.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.UpdateCertificateIssuerWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.IssuerCredentials,Microsoft.Azure.KeyVault.Models.OrganizationDetails,Microsoft.Azure.KeyVault.Models.IssuerAttributes,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the specified certificate issuer.
            </summary>
            <remarks>
            The UpdateCertificateIssuer operation performs an update on the
            specified certificate issuer entity. This operation requires the
            certificates/setissuers permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='issuerName'>
            The name of the issuer.
            </param>
            <param name='provider'>
            The issuer provider.
            </param>
            <param name='credentials'>
            The credentials to be used for the issuer.
            </param>
            <param name='organizationDetails'>
            Details of the organization as provided to the issuer.
            </param>
            <param name='attributes'>
            Attributes of the issuer object.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetCertificateIssuerWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the specified certificate issuer.
            </summary>
            <remarks>
            The GetCertificateIssuer operation returns the specified
            certificate issuer resources in the specified key vault. This
            operation requires the certificates/manageissuers/getissuers
            permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='issuerName'>
            The name of the issuer.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.DeleteCertificateIssuerWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified certificate issuer.
            </summary>
            <remarks>
            The DeleteCertificateIssuer operation permanently removes the
            specified certificate issuer from the vault. This operation
            requires the certificates/manageissuers/deleteissuers permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='issuerName'>
            The name of the issuer.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.CreateCertificateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a new certificate.
            </summary>
            <remarks>
            If this is the first version, the certificate resource is created.
            This operation requires the certificates/create permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate.
            </param>
            <param name='certificatePolicy'>
            The management policy for the certificate.
            </param>
            <param name='certificateAttributes'>
            The attributes of the certificate (optional).
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.ImportCertificateWithHttpMessagesAsync(System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Imports a certificate into a specified key vault.
            </summary>
            <remarks>
            Imports an existing valid certificate, containing a private key,
            into Azure Key Vault. The certificate to be imported can be in
            either PFX or PEM format. If the certificate is in PEM format the
            PEM file must contain the key as well as x509 certificates. This
            operation requires the certificates/import permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate.
            </param>
            <param name='base64EncodedCertificate'>
            Base64 encoded representation of the certificate object to import.
            This certificate needs to contain the private key.
            </param>
            <param name='password'>
            If the private key in base64EncodedCertificate is encrypted, the
            password used for encryption.
            </param>
            <param name='certificatePolicy'>
            The management policy for the certificate.
            </param>
            <param name='certificateAttributes'>
            The attributes of the certificate (optional).
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetCertificateVersionsWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List the versions of a certificate.
            </summary>
            <remarks>
            The GetCertificateVersions operation returns the versions of a
            certificate in the specified key vault. This operation requires the
            certificates/list permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the
            service will return up to 25 results.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetCertificatePolicyWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the policy for a certificate.
            </summary>
            <remarks>
            The GetCertificatePolicy operation returns the specified
            certificate policy resources in the specified key vault. This
            operation requires the certificates/get permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate in a given key vault.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.UpdateCertificatePolicyWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the policy for a certificate.
            </summary>
            <remarks>
            Set specified members in the certificate policy. Leave others as
            null. This operation requires the certificates/update permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate in the given vault.
            </param>
            <param name='certificatePolicy'>
            The policy for the certificate.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.UpdateCertificateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the specified attributes associated with the given
            certificate.
            </summary>
            <remarks>
            The UpdateCertificate operation applies the specified update on the
            given certificate; the only elements updated are the certificate's
            attributes. This operation requires the certificates/update
            permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate in the given key vault.
            </param>
            <param name='certificateVersion'>
            The version of the certificate.
            </param>
            <param name='certificatePolicy'>
            The management policy for the certificate.
            </param>
            <param name='certificateAttributes'>
            The attributes of the certificate (optional).
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetCertificateWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about a certificate.
            </summary>
            <remarks>
            Gets information about a specific certificate. This operation
            requires the certificates/get permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate in the given vault.
            </param>
            <param name='certificateVersion'>
            The version of the certificate.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.UpdateCertificateOperationWithHttpMessagesAsync(System.String,System.String,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates a certificate operation.
            </summary>
            <remarks>
            Updates a certificate creation operation that is already in
            progress. This operation requires the certificates/update
            permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate.
            </param>
            <param name='cancellationRequested'>
            Indicates if cancellation was requested on the certificate
            operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetCertificateOperationWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the creation operation of a certificate.
            </summary>
            <remarks>
            Gets the creation operation associated with a specified
            certificate. This operation requires the certificates/get
            permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.DeleteCertificateOperationWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the creation operation for a specific certificate.
            </summary>
            <remarks>
            Deletes the creation operation for a specified certificate that is
            in the process of being created. The certificate is no longer
            created. This operation requires the certificates/update
            permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.MergeCertificateWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.IList{System.Byte[]},Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Merges a certificate or a certificate chain with a key pair
            existing on the server.
            </summary>
            <remarks>
            The MergeCertificate operation performs the merging of a
            certificate or certificate chain with a key pair currently
            available in the service. This operation requires the
            certificates/create permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate.
            </param>
            <param name='x509Certificates'>
            The certificate or the certificate chain to merge.
            </param>
            <param name='certificateAttributes'>
            The attributes of the certificate (optional).
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.BackupCertificateWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Backs up the specified certificate.
            </summary>
            <remarks>
            Requests that a backup of the specified certificate be downloaded
            to the client. All versions of the certificate will be downloaded.
            This operation requires the certificates/backup permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.RestoreCertificateWithHttpMessagesAsync(System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Restores a backed up certificate to a vault.
            </summary>
            <remarks>
            Restores a backed up certificate, and all its versions, to a vault.
            This operation requires the certificates/restore permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateBundleBackup'>
            The backup blob associated with a certificate bundle.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetDeletedCertificatesWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the deleted certificates in the specified vault currently
            available for recovery.
            </summary>
            <remarks>
            The GetDeletedCertificates operation retrieves the certificates in
            the current vault which are in a deleted state and ready for
            recovery or purging. This operation includes deletion-specific
            information. This operation requires the certificates/get/list
            permission. This operation can only be enabled on soft-delete
            enabled vaults.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the
            service will return up to 25 results.
            </param>
            <param name='includePending'>
            Specifies whether to include certificates which are not completely
            provisioned.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetDeletedCertificateWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves information about the specified deleted certificate.
            </summary>
            <remarks>
            The GetDeletedCertificate operation retrieves the deleted
            certificate information plus its attributes, such as retention
            interval, scheduled permanent deletion and the current deletion
            recovery level. This operation requires the certificates/get
            permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.PurgeDeletedCertificateWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Permanently deletes the specified deleted certificate.
            </summary>
            <remarks>
            The PurgeDeletedCertificate operation performs an irreversible
            deletion of the specified certificate, without possibility for
            recovery. The operation is not available if the recovery level does
            not specify 'Purgeable'. This operation requires the
            certificate/purge permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.RecoverDeletedCertificateWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Recovers the deleted certificate back to its current version under
            /certificates.
            </summary>
            <remarks>
            The RecoverDeletedCertificate operation performs the reversal of
            the Delete operation. The operation is applicable in vaults enabled
            for soft-delete, and must be issued during the retention interval
            (available in the deleted certificate's attributes). This operation
            requires the certificates/recover permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the deleted certificate
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetStorageAccountsWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List storage accounts managed by the specified key vault. This
            operation requires the storage/list permission.
            </summary>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the
            service will return up to 25 results.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetDeletedStorageAccountsWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists deleted storage accounts for the specified vault.
            </summary>
            <remarks>
            The Get Deleted Storage Accounts operation returns the storage
            accounts that have been deleted for a vault enabled for
            soft-delete. This operation requires the storage/list permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the
            service will return up to 25 results.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetDeletedStorageAccountWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the specified deleted storage account.
            </summary>
            <remarks>
            The Get Deleted Storage Account operation returns the specified
            deleted storage account along with its attributes. This operation
            requires the storage/get permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.PurgeDeletedStorageAccountWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Permanently deletes the specified storage account.
            </summary>
            <remarks>
            The purge deleted storage account operation removes the secret
            permanently, without the possibility of recovery. This operation
            can only be performed on a soft-delete enabled vault. This
            operation requires the storage/purge permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.RecoverDeletedStorageAccountWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Recovers the deleted storage account.
            </summary>
            <remarks>
            Recovers the deleted storage account in the specified vault. This
            operation can only be performed on a soft-delete enabled vault.
            This operation requires the storage/recover permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.BackupStorageAccountWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Backs up the specified storage account.
            </summary>
            <remarks>
            Requests that a backup of the specified storage account be
            downloaded to the client. This operation requires the
            storage/backup permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.RestoreStorageAccountWithHttpMessagesAsync(System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Restores a backed up storage account to a vault.
            </summary>
            <remarks>
            Restores a backed up storage account to a vault. This operation
            requires the storage/restore permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageBundleBackup'>
            The backup blob associated with a storage account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.DeleteStorageAccountWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a storage account. This operation requires the
            storage/delete permission.
            </summary>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetStorageAccountWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about a specified storage account. This operation
            requires the storage/get permission.
            </summary>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.SetStorageAccountWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Boolean,System.String,Microsoft.Azure.KeyVault.Models.StorageAccountAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a new storage account. This operation requires
            the storage/set permission.
            </summary>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='resourceId'>
            Storage account resource id.
            </param>
            <param name='activeKeyName'>
            Current active storage account key name.
            </param>
            <param name='autoRegenerateKey'>
            whether keyvault should manage the storage account for the user.
            </param>
            <param name='regenerationPeriod'>
            The key regeneration time duration specified in ISO-8601 format.
            </param>
            <param name='storageAccountAttributes'>
            The attributes of the storage account.
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.UpdateStorageAccountWithHttpMessagesAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,Microsoft.Azure.KeyVault.Models.StorageAccountAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the specified attributes associated with the given storage
            account. This operation requires the storage/set/update permission.
            </summary>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='activeKeyName'>
            The current active storage account key name.
            </param>
            <param name='autoRegenerateKey'>
            whether keyvault should manage the storage account for the user.
            </param>
            <param name='regenerationPeriod'>
            The key regeneration time duration specified in ISO-8601 format.
            </param>
            <param name='storageAccountAttributes'>
            The attributes of the storage account.
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.RegenerateStorageAccountKeyWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Regenerates the specified key value for the given storage account.
            This operation requires the storage/regeneratekey permission.
            </summary>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='keyName'>
            The storage account key name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetSasDefinitionsWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List storage SAS definitions for the given storage account. This
            operation requires the storage/listsas permission.
            </summary>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the
            service will return up to 25 results.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetDeletedSasDefinitionsWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists deleted SAS definitions for the specified vault and storage
            account.
            </summary>
            <remarks>
            The Get Deleted Sas Definitions operation returns the SAS
            definitions that have been deleted for a vault enabled for
            soft-delete. This operation requires the storage/listsas
            permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the
            service will return up to 25 results.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetDeletedSasDefinitionWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the specified deleted sas definition.
            </summary>
            <remarks>
            The Get Deleted SAS Definition operation returns the specified
            deleted SAS definition along with its attributes. This operation
            requires the storage/getsas permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='sasDefinitionName'>
            The name of the SAS definition.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.RecoverDeletedSasDefinitionWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Recovers the deleted SAS definition.
            </summary>
            <remarks>
            Recovers the deleted SAS definition for the specified storage
            account. This operation can only be performed on a soft-delete
            enabled vault. This operation requires the storage/recover
            permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='sasDefinitionName'>
            The name of the SAS definition.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.DeleteSasDefinitionWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a SAS definition from a specified storage account. This
            operation requires the storage/deletesas permission.
            </summary>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='sasDefinitionName'>
            The name of the SAS definition.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetSasDefinitionWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about a SAS definition for the specified storage
            account. This operation requires the storage/getsas permission.
            </summary>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='sasDefinitionName'>
            The name of the SAS definition.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.SetSasDefinitionWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a new SAS definition for the specified storage
            account. This operation requires the storage/setsas permission.
            </summary>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='sasDefinitionName'>
            The name of the SAS definition.
            </param>
            <param name='templateUri'>
            The SAS definition token template signed with an arbitrary key.
            Tokens created according to the SAS definition will have the same
            properties as the template.
            </param>
            <param name='sasType'>
            The type of SAS token the SAS definition will create. Possible
            values include: 'account', 'service'
            </param>
            <param name='validityPeriod'>
            The validity period of SAS tokens created according to the SAS
            definition.
            </param>
            <param name='sasDefinitionAttributes'>
            The attributes of the SAS definition.
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.UpdateSasDefinitionWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the specified attributes associated with the given SAS
            definition. This operation requires the storage/setsas permission.
            </summary>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='sasDefinitionName'>
            The name of the SAS definition.
            </param>
            <param name='templateUri'>
            The SAS definition token template signed with an arbitrary key.
            Tokens created according to the SAS definition will have the same
            properties as the template.
            </param>
            <param name='sasType'>
            The type of SAS token the SAS definition will create. Possible
            values include: 'account', 'service'
            </param>
            <param name='validityPeriod'>
            The validity period of SAS tokens created according to the SAS
            definition.
            </param>
            <param name='sasDefinitionAttributes'>
            The attributes of the SAS definition.
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetKeyVersionsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of individual key versions with the same key name.
            </summary>
            <remarks>
            The full key identifier, attributes, and tags are provided in the
            response. This operation requires the keys/list permission.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetKeysNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List keys in the specified vault.
            </summary>
            <remarks>
            Retrieves a list of the keys in the Key Vault as JSON Web Key
            structures that contain the public part of a stored key. The LIST
            operation is applicable to all key types, however only the base key
            identifier, attributes, and tags are provided in the response.
            Individual versions of a key are not listed in the response. This
            operation requires the keys/list permission.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetDeletedKeysNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the deleted keys in the specified vault.
            </summary>
            <remarks>
            Retrieves a list of the keys in the Key Vault as JSON Web Key
            structures that contain the public part of a deleted key. This
            operation includes deletion-specific information. The Get Deleted
            Keys operation is applicable for vaults enabled for soft-delete.
            While the operation can be invoked on any vault, it will return an
            error if invoked on a non soft-delete enabled vault. This operation
            requires the keys/list permission.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetSecretsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List secrets in a specified key vault.
            </summary>
            <remarks>
            The Get Secrets operation is applicable to the entire vault.
            However, only the base secret identifier and its attributes are
            provided in the response. Individual secret versions are not listed
            in the response. This operation requires the secrets/list
            permission.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetSecretVersionsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List all versions of the specified secret.
            </summary>
            <remarks>
            The full secret identifier and attributes are provided in the
            response. No values are returned for the secrets. This operations
            requires the secrets/list permission.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetDeletedSecretsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists deleted secrets for the specified vault.
            </summary>
            <remarks>
            The Get Deleted Secrets operation returns the secrets that have
            been deleted for a vault enabled for soft-delete. This operation
            requires the secrets/list permission.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetCertificatesNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List certificates in a specified key vault
            </summary>
            <remarks>
            The GetCertificates operation returns the set of certificates
            resources in the specified key vault. This operation requires the
            certificates/list permission.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetCertificateIssuersNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List certificate issuers for a specified key vault.
            </summary>
            <remarks>
            The GetCertificateIssuers operation returns the set of certificate
            issuer resources in the specified key vault. This operation
            requires the certificates/manageissuers/getissuers permission.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetCertificateVersionsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List the versions of a certificate.
            </summary>
            <remarks>
            The GetCertificateVersions operation returns the versions of a
            certificate in the specified key vault. This operation requires the
            certificates/list permission.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetDeletedCertificatesNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the deleted certificates in the specified vault currently
            available for recovery.
            </summary>
            <remarks>
            The GetDeletedCertificates operation retrieves the certificates in
            the current vault which are in a deleted state and ready for
            recovery or purging. This operation includes deletion-specific
            information. This operation requires the certificates/get/list
            permission. This operation can only be enabled on soft-delete
            enabled vaults.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetStorageAccountsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List storage accounts managed by the specified key vault. This
            operation requires the storage/list permission.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetDeletedStorageAccountsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists deleted storage accounts for the specified vault.
            </summary>
            <remarks>
            The Get Deleted Storage Accounts operation returns the storage
            accounts that have been deleted for a vault enabled for
            soft-delete. This operation requires the storage/list permission.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetSasDefinitionsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List storage SAS definitions for the given storage account. This
            operation requires the storage/listsas permission.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.IKeyVaultClient.GetDeletedSasDefinitionsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists deleted SAS definitions for the specified vault and storage
            account.
            </summary>
            <remarks>
            The Get Deleted Sas Definitions operation returns the SAS
            definitions that have been deleted for a vault enabled for
            soft-delete. This operation requires the storage/listsas
            permission.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.KeyVaultClient">
            <summary>
            Client class to perform cryptographic key operations and vault
            operations against the Key Vault service.
            </summary>
            <summary>
            The key vault client performs cryptographic key operations and vault
            operations against the Key Vault service.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.KeyVaultClient.AuthenticationCallback">
            <summary>
            The authentication callback delegate which is to be implemented by the client code
            </summary>
            <param name="authority"> Identifier of the authority, a URL. </param>
            <param name="resource"> Identifier of the target resource that is the recipient of the requested token, a URL. </param>
            <param name="scope"> The scope of the authentication request. </param>
            <returns> access token </returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.#ctor(Microsoft.Azure.KeyVault.KeyVaultClient.AuthenticationCallback,System.Net.Http.DelegatingHandler[])">
            <summary>
            Constructor
            </summary>
            <param name="authenticationCallback">The authentication callback</param>
            <param name='handlers'>Optional. The delegating handlers to add to the http client pipeline.</param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.#ctor(Microsoft.Azure.KeyVault.KeyVaultClient.AuthenticationCallback,System.Net.Http.HttpClient)">
            <summary>
            Constructor
            </summary>
            <param name="authenticationCallback">The authentication callback</param>
            <param name="httpClient">Customized HTTP client </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.#ctor(Microsoft.Azure.KeyVault.KeyVaultCredential,System.Net.Http.HttpClient)">
            <summary>
            Constructor
            </summary>
            <param name="credential">Credential for key vault operations</param>
            <param name="httpClient">Customized HTTP client </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetPendingCertificateSigningRequestWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the pending certificate signing request response.
            </summary>
            <param name='vaultBaseUrl'>
            The vault name, e.g. https://myvault.vault.azure.net
            </param>
            <param name='certificateName'>
            The name of the certificate
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.KeyVaultClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.KeyVaultClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.KeyVaultClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.KeyVaultClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.KeyVaultClient.ApiVersion">
            <summary>
            Client API version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.KeyVaultClient.AcceptLanguage">
            <summary>
            Gets or sets the preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.KeyVaultClient.LongRunningOperationRetryTimeout">
            <summary>
            Gets or sets the retry timeout in seconds for Long Running Operations.
            Default value is 30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.KeyVaultClient.GenerateClientRequestId">
            <summary>
            When set to true a unique x-ms-client-request-id value is generated and
            included in each request. Default is true.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.#ctor(System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the KeyVaultClient class.
            </summary>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the KeyVaultClient class.
            </summary>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the KeyVaultClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the KeyVaultClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.Initialize">
            <summary>
            Initializes client properties.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.CreateKeyWithHttpMessagesAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a new key, stores it, then returns key parameters and attributes to
            the client.
            </summary>
            <remarks>
            The create key operation can be used to create any key type in Azure Key
            Vault. If the named key already exists, Azure Key Vault creates a new
            version of the key. It requires the keys/create permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name for the new key. The system will generate the version name for the
            new key.
            </param>
            <param name='kty'>
            The type of key to create. For valid values, see Microsoft.Azure.KeyVault.WebKey.JsonWebKeyType. Possible
            values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct'
            </param>
            <param name='keySize'>
            The key size in bits. For example: 2048, 3072, or 4096 for RSA.
            </param>
            <param name='keyOps'>
            </param>
            <param name='keyAttributes'>
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='curve'>
            Elliptic curve name. For valid values, see Microsoft.Azure.KeyVault.WebKey.JsonWebKeyCurveName. Possible
            values include: 'P-256', 'P-384', 'P-521', 'P-256K'
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.ImportKeyWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Nullable{System.Boolean},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Imports an externally created key, stores it, and returns key parameters
            and attributes to the client.
            </summary>
            <remarks>
            The import key operation may be used to import any key type into an Azure
            Key Vault. If the named key already exists, Azure Key Vault creates a new
            version of the key. This operation requires the keys/import permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            Name for the imported key.
            </param>
            <param name='key'>
            The Json web key
            </param>
            <param name='hsm'>
            Whether to import as a hardware key (HSM) or software key.
            </param>
            <param name='keyAttributes'>
            The key management attributes.
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.DeleteKeyWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a key of any type from storage in Azure Key Vault.
            </summary>
            <remarks>
            The delete key operation cannot be used to remove individual versions of a
            key. This operation removes the cryptographic material associated with the
            key, which means the key is not usable for Sign/Verify, Wrap/Unwrap or
            Encrypt/Decrypt operations. This operation requires the keys/delete
            permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key to delete.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.UpdateKeyWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            The update key operation changes specified attributes of a stored key and
            can be applied to any key type and key version stored in Azure Key Vault.
            </summary>
            <remarks>
            In order to perform this operation, the key must already exist in the Key
            Vault. Note: The cryptographic material of a key itself cannot be changed.
            This operation requires the keys/update permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of key to update.
            </param>
            <param name='keyVersion'>
            The version of the key to update.
            </param>
            <param name='keyOps'>
            Json web key operations. For more information on possible key operations,
            see Microsoft.Azure.KeyVault.WebKey.JsonWebKeyOperation.
            </param>
            <param name='keyAttributes'>
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetKeyWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the public part of a stored key.
            </summary>
            <remarks>
            The get key operation is applicable to all key types. If the requested key
            is symmetric, then no key material is released in the response. This
            operation requires the keys/get permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key to get.
            </param>
            <param name='keyVersion'>
            Adding the version parameter retrieves a specific version of a key.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetKeyVersionsWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of individual key versions with the same key name.
            </summary>
            <remarks>
            The full key identifier, attributes, and tags are provided in the response.
            This operation requires the keys/list permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetKeysWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List keys in the specified vault.
            </summary>
            <remarks>
            Retrieves a list of the keys in the Key Vault as JSON Web Key structures
            that contain the public part of a stored key. The LIST operation is
            applicable to all key types, however only the base key identifier,
            attributes, and tags are provided in the response. Individual versions of a
            key are not listed in the response. This operation requires the keys/list
            permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.BackupKeyWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Requests that a backup of the specified key be downloaded to the client.
            </summary>
            <remarks>
            The Key Backup operation exports a key from Azure Key Vault in a protected
            form. Note that this operation does NOT return key material in a form that
            can be used outside the Azure Key Vault system, the returned key material
            is either protected to a Azure Key Vault HSM or to Azure Key Vault itself.
            The intent of this operation is to allow a client to GENERATE a key in one
            Azure Key Vault instance, BACKUP the key, and then RESTORE it into another
            Azure Key Vault instance. The BACKUP operation may be used to export, in
            protected form, any key type from Azure Key Vault. Individual versions of a
            key cannot be backed up. BACKUP / RESTORE can be performed within
            geographical boundaries only; meaning that a BACKUP from one geographical
            area cannot be restored to another geographical area. For example, a backup
            from the US geographical area cannot be restored in an EU geographical
            area. This operation requires the key/backup permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.RestoreKeyWithHttpMessagesAsync(System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Restores a backed up key to a vault.
            </summary>
            <remarks>
            Imports a previously backed up key into Azure Key Vault, restoring the key,
            its key identifier, attributes and access control policies. The RESTORE
            operation may be used to import a previously backed up key. Individual
            versions of a key cannot be restored. The key is restored in its entirety
            with the same key name as it had when it was backed up. If the key name is
            not available in the target Key Vault, the RESTORE operation will be
            rejected. While the key name is retained during restore, the final key
            identifier will change if the key is restored to a different vault. Restore
            will restore all versions and preserve version identifiers. The RESTORE
            operation is subject to security constraints: The target Key Vault must be
            owned by the same Microsoft Azure Subscription as the source Key Vault The
            user must have RESTORE permission in the target Key Vault. This operation
            requires the keys/restore permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyBundleBackup'>
            The backup blob associated with a key bundle.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.EncryptWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Encrypts an arbitrary sequence of bytes using an encryption key that is
            stored in a key vault.
            </summary>
            <remarks>
            The ENCRYPT operation encrypts an arbitrary sequence of bytes using an
            encryption key that is stored in Azure Key Vault. Note that the ENCRYPT
            operation only supports a single block of data, the size of which is
            dependent on the target key and the encryption algorithm to be used. The
            ENCRYPT operation is only strictly necessary for symmetric keys stored in
            Azure Key Vault since protection with an asymmetric key can be performed
            using public portion of the key. This operation is supported for asymmetric
            keys as a convenience for callers that have a key-reference but do not have
            access to the public key material. This operation requires the keys/encypt
            permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key.
            </param>
            <param name='keyVersion'>
            The version of the key.
            </param>
            <param name='algorithm'>
            algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256',
            'RSA1_5'
            </param>
            <param name='value'>
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.DecryptWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Decrypts a single block of encrypted data.
            </summary>
            <remarks>
            The DECRYPT operation decrypts a well-formed block of ciphertext using the
            target encryption key and specified algorithm. This operation is the
            reverse of the ENCRYPT operation; only a single block of data may be
            decrypted, the size of this block is dependent on the target key and the
            algorithm to be used. The DECRYPT operation applies to asymmetric and
            symmetric keys stored in Azure Key Vault since it uses the private portion
            of the key. This operation requires the keys/decrypt permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key.
            </param>
            <param name='keyVersion'>
            The version of the key.
            </param>
            <param name='algorithm'>
            algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256',
            'RSA1_5'
            </param>
            <param name='value'>
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.SignWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a signature from a digest using the specified key.
            </summary>
            <remarks>
            The SIGN operation is applicable to asymmetric and symmetric keys stored in
            Azure Key Vault since this operation uses the private portion of the key.
            This operation requires the keys/sign permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key.
            </param>
            <param name='keyVersion'>
            The version of the key.
            </param>
            <param name='algorithm'>
            The signing/verification algorithm identifier. For more information on
            possible algorithm types, see Microsoft.Azure.KeyVault.WebKey.JsonWebKeySignatureAlgorithm. Possible values
            include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL',
            'ES256', 'ES384', 'ES512', 'ES256K'
            </param>
            <param name='value'>
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.VerifyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Byte[],System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Verifies a signature using a specified key.
            </summary>
            <remarks>
            The VERIFY operation is applicable to symmetric keys stored in Azure Key
            Vault. VERIFY is not strictly necessary for asymmetric keys stored in Azure
            Key Vault since signature verification can be performed using the public
            portion of the key but this operation is supported as a convenience for
            callers that only have a key-reference and not the public portion of the
            key. This operation requires the keys/verify permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key.
            </param>
            <param name='keyVersion'>
            The version of the key.
            </param>
            <param name='algorithm'>
            The signing/verification algorithm. For more information on possible
            algorithm types, see Microsoft.Azure.KeyVault.WebKey.JsonWebKeySignatureAlgorithm. Possible values include:
            'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256',
            'ES384', 'ES512', 'ES256K'
            </param>
            <param name='digest'>
            The digest used for signing.
            </param>
            <param name='signature'>
            The signature to be verified.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.WrapKeyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Wraps a symmetric key using a specified key.
            </summary>
            <remarks>
            The WRAP operation supports encryption of a symmetric key using a key
            encryption key that has previously been stored in an Azure Key Vault. The
            WRAP operation is only strictly necessary for symmetric keys stored in
            Azure Key Vault since protection with an asymmetric key can be performed
            using the public portion of the key. This operation is supported for
            asymmetric keys as a convenience for callers that have a key-reference but
            do not have access to the public key material. This operation requires the
            keys/wrapKey permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key.
            </param>
            <param name='keyVersion'>
            The version of the key.
            </param>
            <param name='algorithm'>
            algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256',
            'RSA1_5'
            </param>
            <param name='value'>
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.UnwrapKeyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Unwraps a symmetric key using the specified key that was initially used for
            wrapping that key.
            </summary>
            <remarks>
            The UNWRAP operation supports decryption of a symmetric key using the
            target key encryption key. This operation is the reverse of the WRAP
            operation. The UNWRAP operation applies to asymmetric and symmetric keys
            stored in Azure Key Vault since it uses the private portion of the key.
            This operation requires the keys/unwrapKey permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key.
            </param>
            <param name='keyVersion'>
            The version of the key.
            </param>
            <param name='algorithm'>
            algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256',
            'RSA1_5'
            </param>
            <param name='value'>
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetDeletedKeysWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the deleted keys in the specified vault.
            </summary>
            <remarks>
            Retrieves a list of the keys in the Key Vault as JSON Web Key structures
            that contain the public part of a deleted key. This operation includes
            deletion-specific information. The Get Deleted Keys operation is applicable
            for vaults enabled for soft-delete. While the operation can be invoked on
            any vault, it will return an error if invoked on a non soft-delete enabled
            vault. This operation requires the keys/list permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetDeletedKeyWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the public part of a deleted key.
            </summary>
            <remarks>
            The Get Deleted Key operation is applicable for soft-delete enabled vaults.
            While the operation can be invoked on any vault, it will return an error if
            invoked on a non soft-delete enabled vault. This operation requires the
            keys/get permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.PurgeDeletedKeyWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Permanently deletes the specified key.
            </summary>
            <remarks>
            The Purge Deleted Key operation is applicable for soft-delete enabled
            vaults. While the operation can be invoked on any vault, it will return an
            error if invoked on a non soft-delete enabled vault. This operation
            requires the keys/purge permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.RecoverDeletedKeyWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Recovers the deleted key to its latest version.
            </summary>
            <remarks>
            The Recover Deleted Key operation is applicable for deleted keys in
            soft-delete enabled vaults. It recovers the deleted key back to its latest
            version under /keys. An attempt to recover an non-deleted key will return
            an error. Consider this the inverse of the delete operation on soft-delete
            enabled vaults. This operation requires the keys/recover permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the deleted key.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.SetSecretWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets a secret in a specified key vault.
            </summary>
            <remarks>
            The SET operation adds a secret to the Azure Key Vault. If the named secret
            already exists, Azure Key Vault creates a new version of that secret. This
            operation requires the secrets/set permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='secretName'>
            The name of the secret.
            </param>
            <param name='value'>
            The value of the secret.
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='contentType'>
            Type of the secret value such as a password.
            </param>
            <param name='secretAttributes'>
            The secret management attributes.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.DeleteSecretWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a secret from a specified key vault.
            </summary>
            <remarks>
            The DELETE operation applies to any secret stored in Azure Key Vault.
            DELETE cannot be applied to an individual version of a secret. This
            operation requires the secrets/delete permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='secretName'>
            The name of the secret.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.UpdateSecretWithHttpMessagesAsync(System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the attributes associated with a specified secret in a given key
            vault.
            </summary>
            <remarks>
            The UPDATE operation changes specified attributes of an existing stored
            secret. Attributes that are not specified in the request are left
            unchanged. The value of a secret itself cannot be changed. This operation
            requires the secrets/set permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='secretName'>
            The name of the secret.
            </param>
            <param name='secretVersion'>
            The version of the secret.
            </param>
            <param name='contentType'>
            Type of the secret value such as a password.
            </param>
            <param name='secretAttributes'>
            The secret management attributes.
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get a specified secret from a given key vault.
            </summary>
            <remarks>
            The GET operation is applicable to any secret stored in Azure Key Vault.
            This operation requires the secrets/get permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='secretName'>
            The name of the secret.
            </param>
            <param name='secretVersion'>
            The version of the secret.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretsWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List secrets in a specified key vault.
            </summary>
            <remarks>
            The Get Secrets operation is applicable to the entire vault. However, only
            the base secret identifier and its attributes are provided in the response.
            Individual secret versions are not listed in the response. This operation
            requires the secrets/list permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified, the
            service will return up to 25 results.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretVersionsWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List all versions of the specified secret.
            </summary>
            <remarks>
            The full secret identifier and attributes are provided in the response. No
            values are returned for the secrets. This operations requires the
            secrets/list permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='secretName'>
            The name of the secret.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified, the
            service will return up to 25 results.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetDeletedSecretsWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists deleted secrets for the specified vault.
            </summary>
            <remarks>
            The Get Deleted Secrets operation returns the secrets that have been
            deleted for a vault enabled for soft-delete. This operation requires the
            secrets/list permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetDeletedSecretWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the specified deleted secret.
            </summary>
            <remarks>
            The Get Deleted Secret operation returns the specified deleted secret along
            with its attributes. This operation requires the secrets/get permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='secretName'>
            The name of the secret.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.PurgeDeletedSecretWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Permanently deletes the specified secret.
            </summary>
            <remarks>
            The purge deleted secret operation removes the secret permanently, without
            the possibility of recovery. This operation can only be enabled on a
            soft-delete enabled vault. This operation requires the secrets/purge
            permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='secretName'>
            The name of the secret.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.RecoverDeletedSecretWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Recovers the deleted secret to the latest version.
            </summary>
            <remarks>
            Recovers the deleted secret in the specified vault. This operation can only
            be performed on a soft-delete enabled vault. This operation requires the
            secrets/recover permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='secretName'>
            The name of the deleted secret.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.BackupSecretWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Backs up the specified secret.
            </summary>
            <remarks>
            Requests that a backup of the specified secret be downloaded to the client.
            All versions of the secret will be downloaded. This operation requires the
            secrets/backup permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='secretName'>
            The name of the secret.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.RestoreSecretWithHttpMessagesAsync(System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Restores a backed up secret to a vault.
            </summary>
            <remarks>
            Restores a backed up secret, and all its versions, to a vault. This
            operation requires the secrets/restore permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='secretBundleBackup'>
            The backup blob associated with a secret bundle.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetCertificatesWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List certificates in a specified key vault
            </summary>
            <remarks>
            The GetCertificates operation returns the set of certificates resources in
            the specified key vault. This operation requires the certificates/list
            permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
            <param name='includePending'>
            Specifies whether to include certificates which are not completely
            provisioned.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.DeleteCertificateWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a certificate from a specified key vault.
            </summary>
            <remarks>
            Deletes all versions of a certificate object along with its associated
            policy. Delete certificate cannot be used to remove individual versions of
            a certificate object. This operation requires the certificates/delete
            permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.SetCertificateContactsWithHttpMessagesAsync(System.String,Microsoft.Azure.KeyVault.Models.Contacts,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets the certificate contacts for the specified key vault.
            </summary>
            <remarks>
            Sets the certificate contacts for the specified key vault. This operation
            requires the certificates/managecontacts permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='contacts'>
            The contacts for the key vault certificate.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetCertificateContactsWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the certificate contacts for a specified key vault.
            </summary>
            <remarks>
            The GetCertificateContacts operation returns the set of certificate contact
            resources in the specified key vault. This operation requires the
            certificates/managecontacts permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.DeleteCertificateContactsWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the certificate contacts for a specified key vault.
            </summary>
            <remarks>
            Deletes the certificate contacts for a specified key vault certificate.
            This operation requires the certificates/managecontacts permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetCertificateIssuersWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List certificate issuers for a specified key vault.
            </summary>
            <remarks>
            The GetCertificateIssuers operation returns the set of certificate issuer
            resources in the specified key vault. This operation requires the
            certificates/manageissuers/getissuers permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.SetCertificateIssuerWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.IssuerCredentials,Microsoft.Azure.KeyVault.Models.OrganizationDetails,Microsoft.Azure.KeyVault.Models.IssuerAttributes,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets the specified certificate issuer.
            </summary>
            <remarks>
            The SetCertificateIssuer operation adds or updates the specified
            certificate issuer. This operation requires the certificates/setissuers
            permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='issuerName'>
            The name of the issuer.
            </param>
            <param name='provider'>
            The issuer provider.
            </param>
            <param name='credentials'>
            The credentials to be used for the issuer.
            </param>
            <param name='organizationDetails'>
            Details of the organization as provided to the issuer.
            </param>
            <param name='attributes'>
            Attributes of the issuer object.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.UpdateCertificateIssuerWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.IssuerCredentials,Microsoft.Azure.KeyVault.Models.OrganizationDetails,Microsoft.Azure.KeyVault.Models.IssuerAttributes,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the specified certificate issuer.
            </summary>
            <remarks>
            The UpdateCertificateIssuer operation performs an update on the specified
            certificate issuer entity. This operation requires the
            certificates/setissuers permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='issuerName'>
            The name of the issuer.
            </param>
            <param name='provider'>
            The issuer provider.
            </param>
            <param name='credentials'>
            The credentials to be used for the issuer.
            </param>
            <param name='organizationDetails'>
            Details of the organization as provided to the issuer.
            </param>
            <param name='attributes'>
            Attributes of the issuer object.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetCertificateIssuerWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the specified certificate issuer.
            </summary>
            <remarks>
            The GetCertificateIssuer operation returns the specified certificate issuer
            resources in the specified key vault. This operation requires the
            certificates/manageissuers/getissuers permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='issuerName'>
            The name of the issuer.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.DeleteCertificateIssuerWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified certificate issuer.
            </summary>
            <remarks>
            The DeleteCertificateIssuer operation permanently removes the specified
            certificate issuer from the vault. This operation requires the
            certificates/manageissuers/deleteissuers permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='issuerName'>
            The name of the issuer.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.CreateCertificateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a new certificate.
            </summary>
            <remarks>
            If this is the first version, the certificate resource is created. This
            operation requires the certificates/create permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate.
            </param>
            <param name='certificatePolicy'>
            The management policy for the certificate.
            </param>
            <param name='certificateAttributes'>
            The attributes of the certificate (optional).
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.ImportCertificateWithHttpMessagesAsync(System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Imports a certificate into a specified key vault.
            </summary>
            <remarks>
            Imports an existing valid certificate, containing a private key, into Azure
            Key Vault. The certificate to be imported can be in either PFX or PEM
            format. If the certificate is in PEM format the PEM file must contain the
            key as well as x509 certificates. This operation requires the
            certificates/import permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate.
            </param>
            <param name='base64EncodedCertificate'>
            Base64 encoded representation of the certificate object to import. This
            certificate needs to contain the private key.
            </param>
            <param name='password'>
            If the private key in base64EncodedCertificate is encrypted, the password
            used for encryption.
            </param>
            <param name='certificatePolicy'>
            The management policy for the certificate.
            </param>
            <param name='certificateAttributes'>
            The attributes of the certificate (optional).
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetCertificateVersionsWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List the versions of a certificate.
            </summary>
            <remarks>
            The GetCertificateVersions operation returns the versions of a certificate
            in the specified key vault. This operation requires the certificates/list
            permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetCertificatePolicyWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the policy for a certificate.
            </summary>
            <remarks>
            The GetCertificatePolicy operation returns the specified certificate policy
            resources in the specified key vault. This operation requires the
            certificates/get permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate in a given key vault.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.UpdateCertificatePolicyWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the policy for a certificate.
            </summary>
            <remarks>
            Set specified members in the certificate policy. Leave others as null. This
            operation requires the certificates/update permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate in the given vault.
            </param>
            <param name='certificatePolicy'>
            The policy for the certificate.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.UpdateCertificateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the specified attributes associated with the given certificate.
            </summary>
            <remarks>
            The UpdateCertificate operation applies the specified update on the given
            certificate; the only elements updated are the certificate's attributes.
            This operation requires the certificates/update permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate in the given key vault.
            </param>
            <param name='certificateVersion'>
            The version of the certificate.
            </param>
            <param name='certificatePolicy'>
            The management policy for the certificate.
            </param>
            <param name='certificateAttributes'>
            The attributes of the certificate (optional).
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetCertificateWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about a certificate.
            </summary>
            <remarks>
            Gets information about a specific certificate. This operation requires the
            certificates/get permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate in the given vault.
            </param>
            <param name='certificateVersion'>
            The version of the certificate.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.UpdateCertificateOperationWithHttpMessagesAsync(System.String,System.String,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates a certificate operation.
            </summary>
            <remarks>
            Updates a certificate creation operation that is already in progress. This
            operation requires the certificates/update permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate.
            </param>
            <param name='cancellationRequested'>
            Indicates if cancellation was requested on the certificate operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetCertificateOperationWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the creation operation of a certificate.
            </summary>
            <remarks>
            Gets the creation operation associated with a specified certificate. This
            operation requires the certificates/get permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.DeleteCertificateOperationWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the creation operation for a specific certificate.
            </summary>
            <remarks>
            Deletes the creation operation for a specified certificate that is in the
            process of being created. The certificate is no longer created. This
            operation requires the certificates/update permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.MergeCertificateWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.IList{System.Byte[]},Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Merges a certificate or a certificate chain with a key pair existing on the
            server.
            </summary>
            <remarks>
            The MergeCertificate operation performs the merging of a certificate or
            certificate chain with a key pair currently available in the service. This
            operation requires the certificates/create permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate.
            </param>
            <param name='x509Certificates'>
            The certificate or the certificate chain to merge.
            </param>
            <param name='certificateAttributes'>
            The attributes of the certificate (optional).
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.BackupCertificateWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Backs up the specified certificate.
            </summary>
            <remarks>
            Requests that a backup of the specified certificate be downloaded to the
            client. All versions of the certificate will be downloaded. This operation
            requires the certificates/backup permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.RestoreCertificateWithHttpMessagesAsync(System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Restores a backed up certificate to a vault.
            </summary>
            <remarks>
            Restores a backed up certificate, and all its versions, to a vault. This
            operation requires the certificates/restore permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateBundleBackup'>
            The backup blob associated with a certificate bundle.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetDeletedCertificatesWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the deleted certificates in the specified vault currently available
            for recovery.
            </summary>
            <remarks>
            The GetDeletedCertificates operation retrieves the certificates in the
            current vault which are in a deleted state and ready for recovery or
            purging. This operation includes deletion-specific information. This
            operation requires the certificates/get/list permission. This operation can
            only be enabled on soft-delete enabled vaults.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
            <param name='includePending'>
            Specifies whether to include certificates which are not completely
            provisioned.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetDeletedCertificateWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves information about the specified deleted certificate.
            </summary>
            <remarks>
            The GetDeletedCertificate operation retrieves the deleted certificate
            information plus its attributes, such as retention interval, scheduled
            permanent deletion and the current deletion recovery level. This operation
            requires the certificates/get permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.PurgeDeletedCertificateWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Permanently deletes the specified deleted certificate.
            </summary>
            <remarks>
            The PurgeDeletedCertificate operation performs an irreversible deletion of
            the specified certificate, without possibility for recovery. The operation
            is not available if the recovery level does not specify 'Purgeable'. This
            operation requires the certificate/purge permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.RecoverDeletedCertificateWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Recovers the deleted certificate back to its current version under
            /certificates.
            </summary>
            <remarks>
            The RecoverDeletedCertificate operation performs the reversal of the Delete
            operation. The operation is applicable in vaults enabled for soft-delete,
            and must be issued during the retention interval (available in the deleted
            certificate's attributes). This operation requires the certificates/recover
            permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the deleted certificate
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetStorageAccountsWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List storage accounts managed by the specified key vault. This operation
            requires the storage/list permission.
            </summary>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetDeletedStorageAccountsWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists deleted storage accounts for the specified vault.
            </summary>
            <remarks>
            The Get Deleted Storage Accounts operation returns the storage accounts
            that have been deleted for a vault enabled for soft-delete. This operation
            requires the storage/list permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetDeletedStorageAccountWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the specified deleted storage account.
            </summary>
            <remarks>
            The Get Deleted Storage Account operation returns the specified deleted
            storage account along with its attributes. This operation requires the
            storage/get permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.PurgeDeletedStorageAccountWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Permanently deletes the specified storage account.
            </summary>
            <remarks>
            The purge deleted storage account operation removes the secret permanently,
            without the possibility of recovery. This operation can only be performed
            on a soft-delete enabled vault. This operation requires the storage/purge
            permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.RecoverDeletedStorageAccountWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Recovers the deleted storage account.
            </summary>
            <remarks>
            Recovers the deleted storage account in the specified vault. This operation
            can only be performed on a soft-delete enabled vault. This operation
            requires the storage/recover permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.BackupStorageAccountWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Backs up the specified storage account.
            </summary>
            <remarks>
            Requests that a backup of the specified storage account be downloaded to
            the client. This operation requires the storage/backup permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.RestoreStorageAccountWithHttpMessagesAsync(System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Restores a backed up storage account to a vault.
            </summary>
            <remarks>
            Restores a backed up storage account to a vault. This operation requires
            the storage/restore permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageBundleBackup'>
            The backup blob associated with a storage account.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.DeleteStorageAccountWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a storage account. This operation requires the storage/delete
            permission.
            </summary>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetStorageAccountWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about a specified storage account. This operation requires
            the storage/get permission.
            </summary>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.SetStorageAccountWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Boolean,System.String,Microsoft.Azure.KeyVault.Models.StorageAccountAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a new storage account. This operation requires the
            storage/set permission.
            </summary>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='resourceId'>
            Storage account resource id.
            </param>
            <param name='activeKeyName'>
            Current active storage account key name.
            </param>
            <param name='autoRegenerateKey'>
            whether keyvault should manage the storage account for the user.
            </param>
            <param name='regenerationPeriod'>
            The key regeneration time duration specified in ISO-8601 format.
            </param>
            <param name='storageAccountAttributes'>
            The attributes of the storage account.
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.UpdateStorageAccountWithHttpMessagesAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,Microsoft.Azure.KeyVault.Models.StorageAccountAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the specified attributes associated with the given storage account.
            This operation requires the storage/set/update permission.
            </summary>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='activeKeyName'>
            The current active storage account key name.
            </param>
            <param name='autoRegenerateKey'>
            whether keyvault should manage the storage account for the user.
            </param>
            <param name='regenerationPeriod'>
            The key regeneration time duration specified in ISO-8601 format.
            </param>
            <param name='storageAccountAttributes'>
            The attributes of the storage account.
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.RegenerateStorageAccountKeyWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Regenerates the specified key value for the given storage account. This
            operation requires the storage/regeneratekey permission.
            </summary>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='keyName'>
            The storage account key name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetSasDefinitionsWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List storage SAS definitions for the given storage account. This operation
            requires the storage/listsas permission.
            </summary>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetDeletedSasDefinitionsWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists deleted SAS definitions for the specified vault and storage account.
            </summary>
            <remarks>
            The Get Deleted Sas Definitions operation returns the SAS definitions that
            have been deleted for a vault enabled for soft-delete. This operation
            requires the storage/listsas permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetDeletedSasDefinitionWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the specified deleted sas definition.
            </summary>
            <remarks>
            The Get Deleted SAS Definition operation returns the specified deleted SAS
            definition along with its attributes. This operation requires the
            storage/getsas permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='sasDefinitionName'>
            The name of the SAS definition.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.RecoverDeletedSasDefinitionWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Recovers the deleted SAS definition.
            </summary>
            <remarks>
            Recovers the deleted SAS definition for the specified storage account. This
            operation can only be performed on a soft-delete enabled vault. This
            operation requires the storage/recover permission.
            </remarks>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='sasDefinitionName'>
            The name of the SAS definition.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.DeleteSasDefinitionWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a SAS definition from a specified storage account. This operation
            requires the storage/deletesas permission.
            </summary>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='sasDefinitionName'>
            The name of the SAS definition.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetSasDefinitionWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about a SAS definition for the specified storage account.
            This operation requires the storage/getsas permission.
            </summary>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='sasDefinitionName'>
            The name of the SAS definition.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.SetSasDefinitionWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a new SAS definition for the specified storage account.
            This operation requires the storage/setsas permission.
            </summary>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='sasDefinitionName'>
            The name of the SAS definition.
            </param>
            <param name='templateUri'>
            The SAS definition token template signed with an arbitrary key.  Tokens
            created according to the SAS definition will have the same properties as
            the template.
            </param>
            <param name='sasType'>
            The type of SAS token the SAS definition will create. Possible values
            include: 'account', 'service'
            </param>
            <param name='validityPeriod'>
            The validity period of SAS tokens created according to the SAS definition.
            </param>
            <param name='sasDefinitionAttributes'>
            The attributes of the SAS definition.
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.UpdateSasDefinitionWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the specified attributes associated with the given SAS definition.
            This operation requires the storage/setsas permission.
            </summary>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='sasDefinitionName'>
            The name of the SAS definition.
            </param>
            <param name='templateUri'>
            The SAS definition token template signed with an arbitrary key.  Tokens
            created according to the SAS definition will have the same properties as
            the template.
            </param>
            <param name='sasType'>
            The type of SAS token the SAS definition will create. Possible values
            include: 'account', 'service'
            </param>
            <param name='validityPeriod'>
            The validity period of SAS tokens created according to the SAS definition.
            </param>
            <param name='sasDefinitionAttributes'>
            The attributes of the SAS definition.
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetKeyVersionsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of individual key versions with the same key name.
            </summary>
            <remarks>
            The full key identifier, attributes, and tags are provided in the response.
            This operation requires the keys/list permission.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetKeysNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List keys in the specified vault.
            </summary>
            <remarks>
            Retrieves a list of the keys in the Key Vault as JSON Web Key structures
            that contain the public part of a stored key. The LIST operation is
            applicable to all key types, however only the base key identifier,
            attributes, and tags are provided in the response. Individual versions of a
            key are not listed in the response. This operation requires the keys/list
            permission.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetDeletedKeysNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the deleted keys in the specified vault.
            </summary>
            <remarks>
            Retrieves a list of the keys in the Key Vault as JSON Web Key structures
            that contain the public part of a deleted key. This operation includes
            deletion-specific information. The Get Deleted Keys operation is applicable
            for vaults enabled for soft-delete. While the operation can be invoked on
            any vault, it will return an error if invoked on a non soft-delete enabled
            vault. This operation requires the keys/list permission.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List secrets in a specified key vault.
            </summary>
            <remarks>
            The Get Secrets operation is applicable to the entire vault. However, only
            the base secret identifier and its attributes are provided in the response.
            Individual secret versions are not listed in the response. This operation
            requires the secrets/list permission.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetSecretVersionsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List all versions of the specified secret.
            </summary>
            <remarks>
            The full secret identifier and attributes are provided in the response. No
            values are returned for the secrets. This operations requires the
            secrets/list permission.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetDeletedSecretsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists deleted secrets for the specified vault.
            </summary>
            <remarks>
            The Get Deleted Secrets operation returns the secrets that have been
            deleted for a vault enabled for soft-delete. This operation requires the
            secrets/list permission.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetCertificatesNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List certificates in a specified key vault
            </summary>
            <remarks>
            The GetCertificates operation returns the set of certificates resources in
            the specified key vault. This operation requires the certificates/list
            permission.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetCertificateIssuersNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List certificate issuers for a specified key vault.
            </summary>
            <remarks>
            The GetCertificateIssuers operation returns the set of certificate issuer
            resources in the specified key vault. This operation requires the
            certificates/manageissuers/getissuers permission.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetCertificateVersionsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List the versions of a certificate.
            </summary>
            <remarks>
            The GetCertificateVersions operation returns the versions of a certificate
            in the specified key vault. This operation requires the certificates/list
            permission.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetDeletedCertificatesNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the deleted certificates in the specified vault currently available
            for recovery.
            </summary>
            <remarks>
            The GetDeletedCertificates operation retrieves the certificates in the
            current vault which are in a deleted state and ready for recovery or
            purging. This operation includes deletion-specific information. This
            operation requires the certificates/get/list permission. This operation can
            only be enabled on soft-delete enabled vaults.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetStorageAccountsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List storage accounts managed by the specified key vault. This operation
            requires the storage/list permission.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetDeletedStorageAccountsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists deleted storage accounts for the specified vault.
            </summary>
            <remarks>
            The Get Deleted Storage Accounts operation returns the storage accounts
            that have been deleted for a vault enabled for soft-delete. This operation
            requires the storage/list permission.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetSasDefinitionsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List storage SAS definitions for the given storage account. This operation
            requires the storage/listsas permission.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClient.GetDeletedSasDefinitionsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists deleted SAS definitions for the specified vault and storage account.
            </summary>
            <remarks>
            The Get Deleted Sas Definitions operation returns the SAS definitions that
            have been deleted for a vault enabled for soft-delete. This operation
            requires the storage/listsas permission.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.KeyVault.Models.KeyVaultErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.KeyVaultClientExtensions">
            <summary>
            Extension methods for KeyVaultClient.
            </summary>
            <summary>
            Extension methods for KeyVaultClient.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Encrypts a single block of data. The amount of data that may be encrypted is determined
            by the target key type and the encryption algorithm.
            </summary>        
            <param name="keyIdentifier">The full key identifier</param>
            <param name="algorithm">The algorithm. For more information on possible algorithm types, see JsonWebKeyEncryptionAlgorithm.</param>
            <param name="plainText">The plain text</param>
            <param name="cancellationToken">Optional cancellation token</param>
            <returns>The encrypted text</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Decrypts a single block of encrypted data
            </summary>
            <param name="keyIdentifier">The full key identifier</param>
            <param name="algorithm">The algorithm. For more information on possible algorithm types, see JsonWebKeyEncryptionAlgorithm.</param>
            <param name="cipherText">The cipher text</param>
            <param name="cancellationToken">Optional cancellation token</param>
            <returns>The decryption result</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Creates a signature from a digest using the specified key in the vault
            </summary>
            <param name="keyIdentifier"> The global key identifier of the signing key </param>
            <param name="algorithm">The signing algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. </param>
            <param name="digest">The digest value to sign</param>
            <param name="cancellationToken">Optional cancellation token</param>
            <returns>The signature value</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Verifies a signature using the specified key
            </summary>
            <param name="keyIdentifier"> The global key identifier of the key used for signing </param>
            <param name="algorithm"> The signing/verification algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm.</param>
            <param name="digest"> The digest used for signing </param>
            <param name="signature"> The signature to be verified </param>
            <param name="cancellationToken">Optional cancellation token</param>
            <returns> true if the signature is verified, false otherwise. </returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Wraps a symmetric key using the specified key
            </summary>
            <param name="keyIdentifier"> The global key identifier of the key used for wrapping </param>
            <param name="algorithm"> The wrap algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm.</param>
            <param name="key"> The symmetric key </param>
            <param name="cancellationToken">Optional cancellation token</param>
            <returns> The wrapped symmetric key </returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Unwraps a symmetric key using the specified key in the vault
                that has initially been used for wrapping the key.
            </summary>
            <param name="keyIdentifier"> The global key identifier of the wrapping/unwrapping key </param>
            <param name="algorithm">The unwrap algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm.</param>
            <param name="wrappedKey">The wrapped symmetric key</param>
            <param name="cancellationToken">Optional cancellation token</param>
            <returns>The unwrapped symmetric key</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the public portion of a key plus its attributes
            </summary>
            <param name="vaultBaseUrl">The vault name, e.g. https://myvault.vault.azure.net</param>
            <param name="keyName">The key name</param>
            <param name="cancellationToken">Optional cancellation token</param>
            <returns>A KeyBundle of the key and its attributes</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the public portion of a key plus its attributes
            </summary>
            <param name="keyIdentifier">The key identifier</param>
            <param name="cancellationToken">Optional cancellation token</param>
            <returns>A KeyBundle of the key and its attributes</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String[],Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.Dictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Updates the Key Attributes associated with the specified key
            </summary>
            <param name="vaultBaseUrl">The vault name, e.g. https://myvault.vault.azure.net</param>
            <param name="keyName">The key name</param>
            <param name="keyOps">Json web key operations. For more information on possible key operations, see JsonWebKeyOperation.</param>
            <param name="attributes">The new attributes for the key. For more information on key attributes, see KeyAttributes.</param>
            <param name="tags">Application-specific metadata in the form of key-value pairs</param>
            <returns> The updated key </returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String[],Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.Dictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Updates the Key Attributes associated with the specified key
            </summary>        
            <param name="keyIdentifier">The key identifier</param>
            <param name="keyOps">Json web key operations. For more information, see JsonWebKeyOperation.</param>
            <param name="attributes">The new attributes for the key. For more information on key attributes, see KeyAttributes.</param>
            <param name="tags">Application-specific metadata in the form of key-value pairs</param>
            <param name="cancellationToken">Optional cancellation token</param>
            <returns> The updated key </returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.KeyBundle,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Imports a key into the specified vault
            </summary>
            <param name="vaultBaseUrl">The vault name, e.g. https://myvault.vault.azure.net</param>
            <param name="keyName">The key name</param>
            <param name="keyBundle"> Key bundle </param>
            <param name="importToHardware">Whether to import as a hardware key (HSM) or software key </param>
            <param name="cancellationToken">Optional cancellation token</param>
            <returns> Imported key bundle to the vault </returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a secret.
            </summary>
            <param name="vaultBaseUrl">The URL for the vault containing the secrets.</param>
            <param name="secretName">The name the secret in the given vault.</param>
            <param name="cancellationToken">Optional cancellation token</param>
            <returns>A response message containing the secret</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a secret.
            </summary>
            <param name="secretIdentifier">The URL for the secret.</param>
            <param name="cancellationToken">Optional cancellation token</param>
            <returns>A response message containing the secret</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Collections.Generic.Dictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Updates the attributes associated with the specified secret
            </summary>        
            <param name="secretIdentifier">The URL of the secret</param>
            <param name="contentType">Type of the secret value such as password.</param>
            <param name="tags">Application-specific metadata in the form of key-value pairs</param>
            <param name="secretAttributes">Attributes for the secret. For more information on possible attributes, see SecretAttributes.</param>      
            <param name="cancellationToken">Optional cancellation token</param>  
            <returns>A response message containing the updated secret</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Recovers the deleted secret.
            </summary>        
            <param name="recoveryId">The recoveryId of the deleted secret, returned from deletion.</param>
            <param name="cancellationToken">Optional cancellation token</param>  
            <returns>A response message containing the recovered secret</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Recovers the deleted key.
            </summary>        
            <param name="recoveryId">The recoveryId of the deleted key, returned from deletion.</param>
            <param name="cancellationToken">Optional cancellation token</param>  
            <returns>A response message containing the recovered key</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Recovers the deleted certificate.
            </summary>        
            <param name="recoveryId">The recoveryId of the deleted certificate, returned from deletion.</param>
            <param name="cancellationToken">Optional cancellation token</param>  
            <returns>A response message containing the recovered certificate</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Purges the deleted secret immediately.
            </summary>        
            <param name="recoveryId">The recoveryId of the deleted secret, returned from deletion.</param>
            <param name="cancellationToken">Optional cancellation token</param>  
            <returns>Task representing the asynchronous execution of this request.</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Purges the deleted key immediately.
            </summary>        
            <param name="recoveryId">The recoveryId of the deleted key, returned from deletion.</param>
            <param name="cancellationToken">Optional cancellation token</param>  
            <returns>Task representing the asynchronous execution of this request.</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Purges the deleted certificate with immediate effect.
            </summary>        
            <param name="recoveryId">The recoveryId of the deleted certificate, returned from deletion.</param>
            <param name="cancellationToken">Optional cancellation token</param>  
            <returns>Task representing the asynchronous execution of this request.</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a certificate.
            </summary>
            <param name="vaultBaseUrl">The URL for the vault containing the certificate.</param>
            <param name="certificateName">The name of the certificate in the given vault.</param>
            <param name="cancellationToken">Optional cancellation token</param>
            <returns>The retrieved certificate</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a certificate.
            </summary>
            <param name="certificateIdentifier">The URL for the certificate.</param>
            <param name="cancellationToken">Optional cancellation token</param>
            <returns>The retrieved certificate</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Updates a certificate version.
            </summary>
            <param name="certificateIdentifier">The URL for the certificate.</param>      
            <param name='certificatePolicy'>The management policy for the certificate.</param>       
            <param name="certificateAttributes">The attributes of the certificate (optional)</param>
            <param name="tags">Application-specific metadata in the form of key-value pairs</param>
            <param name="cancellationToken">Optional cancellation token</param>
            <returns>The updated certificate.</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2Collection,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Imports a new certificate version. If this is the first version, the certificate resource is created.
            </summary>
            <param name="vaultBaseUrl">The URL for the vault containing the certificate</param>
            <param name="certificateName">The name of the certificate</param>
            <param name="certificateCollection">The certificate collection with the private key</param>
            <param name="certificatePolicy">The management policy for the certificate</param>
            <param name="certificateAttributes">The attributes of the certificate (optional)</param>
            <param name="tags">Application-specific metadata in the form of key-value pairs</param>
            <param name="cancellationToken">Optional cancellation token</param>
            <returns>Imported certificate bundle to the vault.</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.MergeCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2Collection,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Merges a certificate or a certificate chain with a key pair existing on the server.
            </summary>
            <param name="vaultBaseUrl">The URL for the vault containing the certificate</param>
            <param name="certificateName">The name of the certificate</param>
            <param name="x509Certificates">The certificate or the certificte chain to merge</param>
            <param name="certificateAttributes">The attributes of the certificate (optional)</param>
            <param name="tags">Application-specific metadata in the form of key-value pairs</param>
            <param name="cancellationToken">Optional cancellation token</param>
            <returns>A response message containing the merged certificate.</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetPendingCertificateSigningRequestAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the Base64 pending certificate signing request (PKCS-10) 
            </summary>
            <param name="vaultBaseUrl">The URL for the vault containing the certificate</param>
            <param name="certificateName">The name of the certificate</param>
            <param name="cancellationToken">Optional cancellation token</param>
            <returns>The pending certificate signing request as Base64 encoded string.</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.CreateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new key, stores it, then returns key parameters and attributes to
            the client.
            </summary>
            <remarks>
            The create key operation can be used to create any key type in Azure Key
            Vault. If the named key already exists, Azure Key Vault creates a new
            version of the key. It requires the keys/create permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name for the new key. The system will generate the version name for the
            new key.
            </param>
            <param name='kty'>
            The type of key to create. For valid values, see Microsoft.Azure.KeyVault.WebKey.JsonWebKeyType. Possible
            values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct'
            </param>
            <param name='keySize'>
            The key size in bits. For example: 2048, 3072, or 4096 for RSA.
            </param>
            <param name='keyOps'>
            </param>
            <param name='keyAttributes'>
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='curve'>
            Elliptic curve name. For valid values, see Microsoft.Azure.KeyVault.WebKey.JsonWebKeyCurveName. Possible
            values include: 'P-256', 'P-384', 'P-521', 'P-256K'
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Nullable{System.Boolean},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Imports an externally created key, stores it, and returns key parameters
            and attributes to the client.
            </summary>
            <remarks>
            The import key operation may be used to import any key type into an Azure
            Key Vault. If the named key already exists, Azure Key Vault creates a new
            version of the key. This operation requires the keys/import permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            Name for the imported key.
            </param>
            <param name='key'>
            The Json web key
            </param>
            <param name='hsm'>
            Whether to import as a hardware key (HSM) or software key.
            </param>
            <param name='keyAttributes'>
            The key management attributes.
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a key of any type from storage in Azure Key Vault.
            </summary>
            <remarks>
            The delete key operation cannot be used to remove individual versions of a
            key. This operation removes the cryptographic material associated with the
            key, which means the key is not usable for Sign/Verify, Wrap/Unwrap or
            Encrypt/Decrypt operations. This operation requires the keys/delete
            permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key to delete.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            The update key operation changes specified attributes of a stored key and
            can be applied to any key type and key version stored in Azure Key Vault.
            </summary>
            <remarks>
            In order to perform this operation, the key must already exist in the Key
            Vault. Note: The cryptographic material of a key itself cannot be changed.
            This operation requires the keys/update permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of key to update.
            </param>
            <param name='keyVersion'>
            The version of the key to update.
            </param>
            <param name='keyOps'>
            Json web key operations. For more information on possible key operations,
            see Microsoft.Azure.KeyVault.WebKey.JsonWebKeyOperation.
            </param>
            <param name='keyAttributes'>
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the public part of a stored key.
            </summary>
            <remarks>
            The get key operation is applicable to all key types. If the requested key
            is symmetric, then no key material is released in the response. This
            operation requires the keys/get permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key to get.
            </param>
            <param name='keyVersion'>
            Adding the version parameter retrieves a specific version of a key.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyVersionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of individual key versions with the same key name.
            </summary>
            <remarks>
            The full key identifier, attributes, and tags are provided in the response.
            This operation requires the keys/list permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeysAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            List keys in the specified vault.
            </summary>
            <remarks>
            Retrieves a list of the keys in the Key Vault as JSON Web Key structures
            that contain the public part of a stored key. The LIST operation is
            applicable to all key types, however only the base key identifier,
            attributes, and tags are provided in the response. Individual versions of a
            key are not listed in the response. This operation requires the keys/list
            permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.BackupKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Requests that a backup of the specified key be downloaded to the client.
            </summary>
            <remarks>
            The Key Backup operation exports a key from Azure Key Vault in a protected
            form. Note that this operation does NOT return key material in a form that
            can be used outside the Azure Key Vault system, the returned key material
            is either protected to a Azure Key Vault HSM or to Azure Key Vault itself.
            The intent of this operation is to allow a client to GENERATE a key in one
            Azure Key Vault instance, BACKUP the key, and then RESTORE it into another
            Azure Key Vault instance. The BACKUP operation may be used to export, in
            protected form, any key type from Azure Key Vault. Individual versions of a
            key cannot be backed up. BACKUP / RESTORE can be performed within
            geographical boundaries only; meaning that a BACKUP from one geographical
            area cannot be restored to another geographical area. For example, a backup
            from the US geographical area cannot be restored in an EU geographical
            area. This operation requires the key/backup permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RestoreKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Restores a backed up key to a vault.
            </summary>
            <remarks>
            Imports a previously backed up key into Azure Key Vault, restoring the key,
            its key identifier, attributes and access control policies. The RESTORE
            operation may be used to import a previously backed up key. Individual
            versions of a key cannot be restored. The key is restored in its entirety
            with the same key name as it had when it was backed up. If the key name is
            not available in the target Key Vault, the RESTORE operation will be
            rejected. While the key name is retained during restore, the final key
            identifier will change if the key is restored to a different vault. Restore
            will restore all versions and preserve version identifiers. The RESTORE
            operation is subject to security constraints: The target Key Vault must be
            owned by the same Microsoft Azure Subscription as the source Key Vault The
            user must have RESTORE permission in the target Key Vault. This operation
            requires the keys/restore permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyBundleBackup'>
            The backup blob associated with a key bundle.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Encrypts an arbitrary sequence of bytes using an encryption key that is
            stored in a key vault.
            </summary>
            <remarks>
            The ENCRYPT operation encrypts an arbitrary sequence of bytes using an
            encryption key that is stored in Azure Key Vault. Note that the ENCRYPT
            operation only supports a single block of data, the size of which is
            dependent on the target key and the encryption algorithm to be used. The
            ENCRYPT operation is only strictly necessary for symmetric keys stored in
            Azure Key Vault since protection with an asymmetric key can be performed
            using public portion of the key. This operation is supported for asymmetric
            keys as a convenience for callers that have a key-reference but do not have
            access to the public key material. This operation requires the keys/encypt
            permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key.
            </param>
            <param name='keyVersion'>
            The version of the key.
            </param>
            <param name='algorithm'>
            algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256',
            'RSA1_5'
            </param>
            <param name='value'>
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Decrypts a single block of encrypted data.
            </summary>
            <remarks>
            The DECRYPT operation decrypts a well-formed block of ciphertext using the
            target encryption key and specified algorithm. This operation is the
            reverse of the ENCRYPT operation; only a single block of data may be
            decrypted, the size of this block is dependent on the target key and the
            algorithm to be used. The DECRYPT operation applies to asymmetric and
            symmetric keys stored in Azure Key Vault since it uses the private portion
            of the key. This operation requires the keys/decrypt permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key.
            </param>
            <param name='keyVersion'>
            The version of the key.
            </param>
            <param name='algorithm'>
            algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256',
            'RSA1_5'
            </param>
            <param name='value'>
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Creates a signature from a digest using the specified key.
            </summary>
            <remarks>
            The SIGN operation is applicable to asymmetric and symmetric keys stored in
            Azure Key Vault since this operation uses the private portion of the key.
            This operation requires the keys/sign permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key.
            </param>
            <param name='keyVersion'>
            The version of the key.
            </param>
            <param name='algorithm'>
            The signing/verification algorithm identifier. For more information on
            possible algorithm types, see Microsoft.Azure.KeyVault.WebKey.JsonWebKeySignatureAlgorithm. Possible values
            include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL',
            'ES256', 'ES384', 'ES512', 'ES256K'
            </param>
            <param name='value'>
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Verifies a signature using a specified key.
            </summary>
            <remarks>
            The VERIFY operation is applicable to symmetric keys stored in Azure Key
            Vault. VERIFY is not strictly necessary for asymmetric keys stored in Azure
            Key Vault since signature verification can be performed using the public
            portion of the key but this operation is supported as a convenience for
            callers that only have a key-reference and not the public portion of the
            key. This operation requires the keys/verify permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key.
            </param>
            <param name='keyVersion'>
            The version of the key.
            </param>
            <param name='algorithm'>
            The signing/verification algorithm. For more information on possible
            algorithm types, see Microsoft.Azure.KeyVault.WebKey.JsonWebKeySignatureAlgorithm. Possible values include:
            'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256',
            'ES384', 'ES512', 'ES256K'
            </param>
            <param name='digest'>
            The digest used for signing.
            </param>
            <param name='signature'>
            The signature to be verified.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Wraps a symmetric key using a specified key.
            </summary>
            <remarks>
            The WRAP operation supports encryption of a symmetric key using a key
            encryption key that has previously been stored in an Azure Key Vault. The
            WRAP operation is only strictly necessary for symmetric keys stored in
            Azure Key Vault since protection with an asymmetric key can be performed
            using the public portion of the key. This operation is supported for
            asymmetric keys as a convenience for callers that have a key-reference but
            do not have access to the public key material. This operation requires the
            keys/wrapKey permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key.
            </param>
            <param name='keyVersion'>
            The version of the key.
            </param>
            <param name='algorithm'>
            algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256',
            'RSA1_5'
            </param>
            <param name='value'>
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Unwraps a symmetric key using the specified key that was initially used for
            wrapping that key.
            </summary>
            <remarks>
            The UNWRAP operation supports decryption of a symmetric key using the
            target key encryption key. This operation is the reverse of the WRAP
            operation. The UNWRAP operation applies to asymmetric and symmetric keys
            stored in Azure Key Vault since it uses the private portion of the key.
            This operation requires the keys/unwrapKey permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key.
            </param>
            <param name='keyVersion'>
            The version of the key.
            </param>
            <param name='algorithm'>
            algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256',
            'RSA1_5'
            </param>
            <param name='value'>
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedKeysAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Lists the deleted keys in the specified vault.
            </summary>
            <remarks>
            Retrieves a list of the keys in the Key Vault as JSON Web Key structures
            that contain the public part of a deleted key. This operation includes
            deletion-specific information. The Get Deleted Keys operation is applicable
            for vaults enabled for soft-delete. While the operation can be invoked on
            any vault, it will return an error if invoked on a non soft-delete enabled
            vault. This operation requires the keys/list permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the public part of a deleted key.
            </summary>
            <remarks>
            The Get Deleted Key operation is applicable for soft-delete enabled vaults.
            While the operation can be invoked on any vault, it will return an error if
            invoked on a non soft-delete enabled vault. This operation requires the
            keys/get permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Permanently deletes the specified key.
            </summary>
            <remarks>
            The Purge Deleted Key operation is applicable for soft-delete enabled
            vaults. While the operation can be invoked on any vault, it will return an
            error if invoked on a non soft-delete enabled vault. This operation
            requires the keys/purge permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the key
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Recovers the deleted key to its latest version.
            </summary>
            <remarks>
            The Recover Deleted Key operation is applicable for deleted keys in
            soft-delete enabled vaults. It recovers the deleted key back to its latest
            version under /keys. An attempt to recover an non-deleted key will return
            an error. Consider this the inverse of the delete operation on soft-delete
            enabled vaults. This operation requires the keys/recover permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='keyName'>
            The name of the deleted key.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Threading.CancellationToken)">
            <summary>
            Sets a secret in a specified key vault.
            </summary>
            <remarks>
            The SET operation adds a secret to the Azure Key Vault. If the named secret
            already exists, Azure Key Vault creates a new version of that secret. This
            operation requires the secrets/set permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='secretName'>
            The name of the secret.
            </param>
            <param name='value'>
            The value of the secret.
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='contentType'>
            Type of the secret value such as a password.
            </param>
            <param name='secretAttributes'>
            The secret management attributes.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a secret from a specified key vault.
            </summary>
            <remarks>
            The DELETE operation applies to any secret stored in Azure Key Vault.
            DELETE cannot be applied to an individual version of a secret. This
            operation requires the secrets/delete permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='secretName'>
            The name of the secret.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Updates the attributes associated with a specified secret in a given key
            vault.
            </summary>
            <remarks>
            The UPDATE operation changes specified attributes of an existing stored
            secret. Attributes that are not specified in the request are left
            unchanged. The value of a secret itself cannot be changed. This operation
            requires the secrets/set permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='secretName'>
            The name of the secret.
            </param>
            <param name='secretVersion'>
            The version of the secret.
            </param>
            <param name='contentType'>
            Type of the secret value such as a password.
            </param>
            <param name='secretAttributes'>
            The secret management attributes.
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a specified secret from a given key vault.
            </summary>
            <remarks>
            The GET operation is applicable to any secret stored in Azure Key Vault.
            This operation requires the secrets/get permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='secretName'>
            The name of the secret.
            </param>
            <param name='secretVersion'>
            The version of the secret.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            List secrets in a specified key vault.
            </summary>
            <remarks>
            The Get Secrets operation is applicable to the entire vault. However, only
            the base secret identifier and its attributes are provided in the response.
            Individual secret versions are not listed in the response. This operation
            requires the secrets/list permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified, the
            service will return up to 25 results.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretVersionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            List all versions of the specified secret.
            </summary>
            <remarks>
            The full secret identifier and attributes are provided in the response. No
            values are returned for the secrets. This operations requires the
            secrets/list permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='secretName'>
            The name of the secret.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified, the
            service will return up to 25 results.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedSecretsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Lists deleted secrets for the specified vault.
            </summary>
            <remarks>
            The Get Deleted Secrets operation returns the secrets that have been
            deleted for a vault enabled for soft-delete. This operation requires the
            secrets/list permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified deleted secret.
            </summary>
            <remarks>
            The Get Deleted Secret operation returns the specified deleted secret along
            with its attributes. This operation requires the secrets/get permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='secretName'>
            The name of the secret.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Permanently deletes the specified secret.
            </summary>
            <remarks>
            The purge deleted secret operation removes the secret permanently, without
            the possibility of recovery. This operation can only be enabled on a
            soft-delete enabled vault. This operation requires the secrets/purge
            permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='secretName'>
            The name of the secret.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Recovers the deleted secret to the latest version.
            </summary>
            <remarks>
            Recovers the deleted secret in the specified vault. This operation can only
            be performed on a soft-delete enabled vault. This operation requires the
            secrets/recover permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='secretName'>
            The name of the deleted secret.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.BackupSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Backs up the specified secret.
            </summary>
            <remarks>
            Requests that a backup of the specified secret be downloaded to the client.
            All versions of the secret will be downloaded. This operation requires the
            secrets/backup permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='secretName'>
            The name of the secret.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RestoreSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Restores a backed up secret to a vault.
            </summary>
            <remarks>
            Restores a backed up secret, and all its versions, to a vault. This
            operation requires the secrets/restore permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='secretBundleBackup'>
            The backup blob associated with a secret bundle.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatesAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            List certificates in a specified key vault
            </summary>
            <remarks>
            The GetCertificates operation returns the set of certificates resources in
            the specified key vault. This operation requires the certificates/list
            permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
            <param name='includePending'>
            Specifies whether to include certificates which are not completely
            provisioned.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a certificate from a specified key vault.
            </summary>
            <remarks>
            Deletes all versions of a certificate object along with its associated
            policy. Delete certificate cannot be used to remove individual versions of
            a certificate object. This operation requires the certificates/delete
            permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetCertificateContactsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,Microsoft.Azure.KeyVault.Models.Contacts,System.Threading.CancellationToken)">
            <summary>
            Sets the certificate contacts for the specified key vault.
            </summary>
            <remarks>
            Sets the certificate contacts for the specified key vault. This operation
            requires the certificates/managecontacts permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='contacts'>
            The contacts for the key vault certificate.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateContactsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists the certificate contacts for a specified key vault.
            </summary>
            <remarks>
            The GetCertificateContacts operation returns the set of certificate contact
            resources in the specified key vault. This operation requires the
            certificates/managecontacts permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateContactsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the certificate contacts for a specified key vault.
            </summary>
            <remarks>
            Deletes the certificate contacts for a specified key vault certificate.
            This operation requires the certificates/managecontacts permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuersAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            List certificate issuers for a specified key vault.
            </summary>
            <remarks>
            The GetCertificateIssuers operation returns the set of certificate issuer
            resources in the specified key vault. This operation requires the
            certificates/manageissuers/getissuers permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.IssuerCredentials,Microsoft.Azure.KeyVault.Models.OrganizationDetails,Microsoft.Azure.KeyVault.Models.IssuerAttributes,System.Threading.CancellationToken)">
            <summary>
            Sets the specified certificate issuer.
            </summary>
            <remarks>
            The SetCertificateIssuer operation adds or updates the specified
            certificate issuer. This operation requires the certificates/setissuers
            permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='issuerName'>
            The name of the issuer.
            </param>
            <param name='provider'>
            The issuer provider.
            </param>
            <param name='credentials'>
            The credentials to be used for the issuer.
            </param>
            <param name='organizationDetails'>
            Details of the organization as provided to the issuer.
            </param>
            <param name='attributes'>
            Attributes of the issuer object.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.IssuerCredentials,Microsoft.Azure.KeyVault.Models.OrganizationDetails,Microsoft.Azure.KeyVault.Models.IssuerAttributes,System.Threading.CancellationToken)">
            <summary>
            Updates the specified certificate issuer.
            </summary>
            <remarks>
            The UpdateCertificateIssuer operation performs an update on the specified
            certificate issuer entity. This operation requires the
            certificates/setissuers permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='issuerName'>
            The name of the issuer.
            </param>
            <param name='provider'>
            The issuer provider.
            </param>
            <param name='credentials'>
            The credentials to be used for the issuer.
            </param>
            <param name='organizationDetails'>
            Details of the organization as provided to the issuer.
            </param>
            <param name='attributes'>
            Attributes of the issuer object.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists the specified certificate issuer.
            </summary>
            <remarks>
            The GetCertificateIssuer operation returns the specified certificate issuer
            resources in the specified key vault. This operation requires the
            certificates/manageissuers/getissuers permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='issuerName'>
            The name of the issuer.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified certificate issuer.
            </summary>
            <remarks>
            The DeleteCertificateIssuer operation permanently removes the specified
            certificate issuer from the vault. This operation requires the
            certificates/manageissuers/deleteissuers permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='issuerName'>
            The name of the issuer.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.CreateCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Creates a new certificate.
            </summary>
            <remarks>
            If this is the first version, the certificate resource is created. This
            operation requires the certificates/create permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate.
            </param>
            <param name='certificatePolicy'>
            The management policy for the certificate.
            </param>
            <param name='certificateAttributes'>
            The attributes of the certificate (optional).
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Imports a certificate into a specified key vault.
            </summary>
            <remarks>
            Imports an existing valid certificate, containing a private key, into Azure
            Key Vault. The certificate to be imported can be in either PFX or PEM
            format. If the certificate is in PEM format the PEM file must contain the
            key as well as x509 certificates. This operation requires the
            certificates/import permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate.
            </param>
            <param name='base64EncodedCertificate'>
            Base64 encoded representation of the certificate object to import. This
            certificate needs to contain the private key.
            </param>
            <param name='password'>
            If the private key in base64EncodedCertificate is encrypted, the password
            used for encryption.
            </param>
            <param name='certificatePolicy'>
            The management policy for the certificate.
            </param>
            <param name='certificateAttributes'>
            The attributes of the certificate (optional).
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateVersionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            List the versions of a certificate.
            </summary>
            <remarks>
            The GetCertificateVersions operation returns the versions of a certificate
            in the specified key vault. This operation requires the certificates/list
            permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatePolicyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists the policy for a certificate.
            </summary>
            <remarks>
            The GetCertificatePolicy operation returns the specified certificate policy
            resources in the specified key vault. This operation requires the
            certificates/get permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate in a given key vault.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificatePolicyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,System.Threading.CancellationToken)">
            <summary>
            Updates the policy for a certificate.
            </summary>
            <remarks>
            Set specified members in the certificate policy. Leave others as null. This
            operation requires the certificates/update permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate in the given vault.
            </param>
            <param name='certificatePolicy'>
            The policy for the certificate.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Updates the specified attributes associated with the given certificate.
            </summary>
            <remarks>
            The UpdateCertificate operation applies the specified update on the given
            certificate; the only elements updated are the certificate's attributes.
            This operation requires the certificates/update permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate in the given key vault.
            </param>
            <param name='certificateVersion'>
            The version of the certificate.
            </param>
            <param name='certificatePolicy'>
            The management policy for the certificate.
            </param>
            <param name='certificateAttributes'>
            The attributes of the certificate (optional).
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a certificate.
            </summary>
            <remarks>
            Gets information about a specific certificate. This operation requires the
            certificates/get permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate in the given vault.
            </param>
            <param name='certificateVersion'>
            The version of the certificate.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateOperationAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Updates a certificate operation.
            </summary>
            <remarks>
            Updates a certificate creation operation that is already in progress. This
            operation requires the certificates/update permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate.
            </param>
            <param name='cancellationRequested'>
            Indicates if cancellation was requested on the certificate operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateOperationAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the creation operation of a certificate.
            </summary>
            <remarks>
            Gets the creation operation associated with a specified certificate. This
            operation requires the certificates/get permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateOperationAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the creation operation for a specific certificate.
            </summary>
            <remarks>
            Deletes the creation operation for a specified certificate that is in the
            process of being created. The certificate is no longer created. This
            operation requires the certificates/update permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.MergeCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Collections.Generic.IList{System.Byte[]},Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Merges a certificate or a certificate chain with a key pair existing on the
            server.
            </summary>
            <remarks>
            The MergeCertificate operation performs the merging of a certificate or
            certificate chain with a key pair currently available in the service. This
            operation requires the certificates/create permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate.
            </param>
            <param name='x509Certificates'>
            The certificate or the certificate chain to merge.
            </param>
            <param name='certificateAttributes'>
            The attributes of the certificate (optional).
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.BackupCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Backs up the specified certificate.
            </summary>
            <remarks>
            Requests that a backup of the specified certificate be downloaded to the
            client. All versions of the certificate will be downloaded. This operation
            requires the certificates/backup permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RestoreCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Restores a backed up certificate to a vault.
            </summary>
            <remarks>
            Restores a backed up certificate, and all its versions, to a vault. This
            operation requires the certificates/restore permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateBundleBackup'>
            The backup blob associated with a certificate bundle.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedCertificatesAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Lists the deleted certificates in the specified vault currently available
            for recovery.
            </summary>
            <remarks>
            The GetDeletedCertificates operation retrieves the certificates in the
            current vault which are in a deleted state and ready for recovery or
            purging. This operation includes deletion-specific information. This
            operation requires the certificates/get/list permission. This operation can
            only be enabled on soft-delete enabled vaults.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
            <param name='includePending'>
            Specifies whether to include certificates which are not completely
            provisioned.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves information about the specified deleted certificate.
            </summary>
            <remarks>
            The GetDeletedCertificate operation retrieves the deleted certificate
            information plus its attributes, such as retention interval, scheduled
            permanent deletion and the current deletion recovery level. This operation
            requires the certificates/get permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Permanently deletes the specified deleted certificate.
            </summary>
            <remarks>
            The PurgeDeletedCertificate operation performs an irreversible deletion of
            the specified certificate, without possibility for recovery. The operation
            is not available if the recovery level does not specify 'Purgeable'. This
            operation requires the certificate/purge permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the certificate
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Recovers the deleted certificate back to its current version under
            /certificates.
            </summary>
            <remarks>
            The RecoverDeletedCertificate operation performs the reversal of the Delete
            operation. The operation is applicable in vaults enabled for soft-delete,
            and must be issued during the retention interval (available in the deleted
            certificate's attributes). This operation requires the certificates/recover
            permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='certificateName'>
            The name of the deleted certificate
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetStorageAccountsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            List storage accounts managed by the specified key vault. This operation
            requires the storage/list permission.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedStorageAccountsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Lists deleted storage accounts for the specified vault.
            </summary>
            <remarks>
            The Get Deleted Storage Accounts operation returns the storage accounts
            that have been deleted for a vault enabled for soft-delete. This operation
            requires the storage/list permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified deleted storage account.
            </summary>
            <remarks>
            The Get Deleted Storage Account operation returns the specified deleted
            storage account along with its attributes. This operation requires the
            storage/get permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Permanently deletes the specified storage account.
            </summary>
            <remarks>
            The purge deleted storage account operation removes the secret permanently,
            without the possibility of recovery. This operation can only be performed
            on a soft-delete enabled vault. This operation requires the storage/purge
            permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Recovers the deleted storage account.
            </summary>
            <remarks>
            Recovers the deleted storage account in the specified vault. This operation
            can only be performed on a soft-delete enabled vault. This operation
            requires the storage/recover permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.BackupStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Backs up the specified storage account.
            </summary>
            <remarks>
            Requests that a backup of the specified storage account be downloaded to
            the client. This operation requires the storage/backup permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RestoreStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Restores a backed up storage account to a vault.
            </summary>
            <remarks>
            Restores a backed up storage account to a vault. This operation requires
            the storage/restore permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageBundleBackup'>
            The backup blob associated with a storage account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a storage account. This operation requires the storage/delete
            permission.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a specified storage account. This operation requires
            the storage/get permission.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Boolean,System.String,Microsoft.Azure.KeyVault.Models.StorageAccountAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a new storage account. This operation requires the
            storage/set permission.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='resourceId'>
            Storage account resource id.
            </param>
            <param name='activeKeyName'>
            Current active storage account key name.
            </param>
            <param name='autoRegenerateKey'>
            whether keyvault should manage the storage account for the user.
            </param>
            <param name='regenerationPeriod'>
            The key regeneration time duration specified in ISO-8601 format.
            </param>
            <param name='storageAccountAttributes'>
            The attributes of the storage account.
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,Microsoft.Azure.KeyVault.Models.StorageAccountAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Updates the specified attributes associated with the given storage account.
            This operation requires the storage/set/update permission.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='activeKeyName'>
            The current active storage account key name.
            </param>
            <param name='autoRegenerateKey'>
            whether keyvault should manage the storage account for the user.
            </param>
            <param name='regenerationPeriod'>
            The key regeneration time duration specified in ISO-8601 format.
            </param>
            <param name='storageAccountAttributes'>
            The attributes of the storage account.
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RegenerateStorageAccountKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Regenerates the specified key value for the given storage account. This
            operation requires the storage/regeneratekey permission.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='keyName'>
            The storage account key name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSasDefinitionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            List storage SAS definitions for the given storage account. This operation
            requires the storage/listsas permission.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedSasDefinitionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Lists deleted SAS definitions for the specified vault and storage account.
            </summary>
            <remarks>
            The Get Deleted Sas Definitions operation returns the SAS definitions that
            have been deleted for a vault enabled for soft-delete. This operation
            requires the storage/listsas permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='maxresults'>
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedSasDefinitionAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified deleted sas definition.
            </summary>
            <remarks>
            The Get Deleted SAS Definition operation returns the specified deleted SAS
            definition along with its attributes. This operation requires the
            storage/getsas permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='sasDefinitionName'>
            The name of the SAS definition.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedSasDefinitionAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Recovers the deleted SAS definition.
            </summary>
            <remarks>
            Recovers the deleted SAS definition for the specified storage account. This
            operation can only be performed on a soft-delete enabled vault. This
            operation requires the storage/recover permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='sasDefinitionName'>
            The name of the SAS definition.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteSasDefinitionAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a SAS definition from a specified storage account. This operation
            requires the storage/deletesas permission.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='sasDefinitionName'>
            The name of the SAS definition.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSasDefinitionAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about a SAS definition for the specified storage account.
            This operation requires the storage/getsas permission.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='sasDefinitionName'>
            The name of the SAS definition.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetSasDefinitionAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a new SAS definition for the specified storage account.
            This operation requires the storage/setsas permission.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='sasDefinitionName'>
            The name of the SAS definition.
            </param>
            <param name='templateUri'>
            The SAS definition token template signed with an arbitrary key.  Tokens
            created according to the SAS definition will have the same properties as
            the template.
            </param>
            <param name='sasType'>
            The type of SAS token the SAS definition will create. Possible values
            include: 'account', 'service'
            </param>
            <param name='validityPeriod'>
            The validity period of SAS tokens created according to the SAS definition.
            </param>
            <param name='sasDefinitionAttributes'>
            The attributes of the SAS definition.
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateSasDefinitionAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Updates the specified attributes associated with the given SAS definition.
            This operation requires the storage/setsas permission.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='vaultBaseUrl'>
            The vault name, for example https://myvault.vault.azure.net.
            </param>
            <param name='storageAccountName'>
            The name of the storage account.
            </param>
            <param name='sasDefinitionName'>
            The name of the SAS definition.
            </param>
            <param name='templateUri'>
            The SAS definition token template signed with an arbitrary key.  Tokens
            created according to the SAS definition will have the same properties as
            the template.
            </param>
            <param name='sasType'>
            The type of SAS token the SAS definition will create. Possible values
            include: 'account', 'service'
            </param>
            <param name='validityPeriod'>
            The validity period of SAS tokens created according to the SAS definition.
            </param>
            <param name='sasDefinitionAttributes'>
            The attributes of the SAS definition.
            </param>
            <param name='tags'>
            Application specific metadata in the form of key-value pairs.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyVersionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of individual key versions with the same key name.
            </summary>
            <remarks>
            The full key identifier, attributes, and tags are provided in the response.
            This operation requires the keys/list permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeysNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)">
            <summary>
            List keys in the specified vault.
            </summary>
            <remarks>
            Retrieves a list of the keys in the Key Vault as JSON Web Key structures
            that contain the public part of a stored key. The LIST operation is
            applicable to all key types, however only the base key identifier,
            attributes, and tags are provided in the response. Individual versions of a
            key are not listed in the response. This operation requires the keys/list
            permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedKeysNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists the deleted keys in the specified vault.
            </summary>
            <remarks>
            Retrieves a list of the keys in the Key Vault as JSON Web Key structures
            that contain the public part of a deleted key. This operation includes
            deletion-specific information. The Get Deleted Keys operation is applicable
            for vaults enabled for soft-delete. While the operation can be invoked on
            any vault, it will return an error if invoked on a non soft-delete enabled
            vault. This operation requires the keys/list permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)">
            <summary>
            List secrets in a specified key vault.
            </summary>
            <remarks>
            The Get Secrets operation is applicable to the entire vault. However, only
            the base secret identifier and its attributes are provided in the response.
            Individual secret versions are not listed in the response. This operation
            requires the secrets/list permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretVersionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)">
            <summary>
            List all versions of the specified secret.
            </summary>
            <remarks>
            The full secret identifier and attributes are provided in the response. No
            values are returned for the secrets. This operations requires the
            secrets/list permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedSecretsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists deleted secrets for the specified vault.
            </summary>
            <remarks>
            The Get Deleted Secrets operation returns the secrets that have been
            deleted for a vault enabled for soft-delete. This operation requires the
            secrets/list permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatesNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)">
            <summary>
            List certificates in a specified key vault
            </summary>
            <remarks>
            The GetCertificates operation returns the set of certificates resources in
            the specified key vault. This operation requires the certificates/list
            permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuersNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)">
            <summary>
            List certificate issuers for a specified key vault.
            </summary>
            <remarks>
            The GetCertificateIssuers operation returns the set of certificate issuer
            resources in the specified key vault. This operation requires the
            certificates/manageissuers/getissuers permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateVersionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)">
            <summary>
            List the versions of a certificate.
            </summary>
            <remarks>
            The GetCertificateVersions operation returns the versions of a certificate
            in the specified key vault. This operation requires the certificates/list
            permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedCertificatesNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists the deleted certificates in the specified vault currently available
            for recovery.
            </summary>
            <remarks>
            The GetDeletedCertificates operation retrieves the certificates in the
            current vault which are in a deleted state and ready for recovery or
            purging. This operation includes deletion-specific information. This
            operation requires the certificates/get/list permission. This operation can
            only be enabled on soft-delete enabled vaults.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetStorageAccountsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)">
            <summary>
            List storage accounts managed by the specified key vault. This operation
            requires the storage/list permission.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedStorageAccountsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists deleted storage accounts for the specified vault.
            </summary>
            <remarks>
            The Get Deleted Storage Accounts operation returns the storage accounts
            that have been deleted for a vault enabled for soft-delete. This operation
            requires the storage/list permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSasDefinitionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)">
            <summary>
            List storage SAS definitions for the given storage account. This operation
            requires the storage/listsas permission.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedSasDefinitionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists deleted SAS definitions for the specified vault and storage account.
            </summary>
            <remarks>
            The Get Deleted Sas Definitions operation returns the SAS definitions that
            have been deleted for a vault enabled for soft-delete. This operation
            requires the storage/listsas permission.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.ObjectIdentifier">
            <summary>
            The Key Vault object identifier.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.ObjectIdentifier.IsObjectIdentifier(System.String,System.String)">
            <summary>
            Verifies whether the identifier belongs to a key vault object.
            </summary>
            <param name="collection">The object collection e.g. 'keys', 'secrets' and 'certificates'.</param>
            <param name="identifier">The key vault object identifier.</param>
            <returns>True if the identifier belongs to a key vault object. False otherwise.</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.ObjectIdentifier.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.ObjectIdentifier.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="vaultBaseUrl"> The vault base URL</param>
            <param name="collection">The object collection e.g. 'keys', 'secrets' and 'certificates'.</param>
            <param name="name">The object name.</param>
            <param name="version"> the version of the object.</param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.ObjectIdentifier.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="collection">The object collection e.g. 'keys', 'secrets' and 'certificates'.</param>
            <param name="identifier">The key vault object identifier.</param>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.ObjectIdentifier.BaseIdentifier">
            <summary>
            The base identifier for an object, does not include the object version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.ObjectIdentifier.Identifier">
            <summary>
            The identifier for an object, includes the objects version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.ObjectIdentifier.Name">
            <summary>
            The name of the object.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.ObjectIdentifier.Vault">
            <summary>
            The vault containing the object
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.ObjectIdentifier.VaultWithoutScheme">
            <summary>
            The scheme-less vault URL
            </summary>
        </member>
        <member name="P:Microsoft.Azure.KeyVault.ObjectIdentifier.Version">
            <summary>
            The version of the object.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.KeyIdentifier">
            <summary>
            The Key Vault key identifier.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyIdentifier.IsKeyIdentifier(System.String)">
            <summary>
            Verifies whether the identifier belongs to a key vault key.
            </summary>
            <param name="identifier">The key vault key identifier.</param>
            <returns>True if the identifier belongs to a key vault key. False otherwise.</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyIdentifier.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="vaultBaseUrl"> The vault base URL</param>
            <param name="name"> the name of the key. </param>
            <param name="version"> the version of the key.</param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.KeyIdentifier.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="identifier">The identifier for key object</param>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.SecretIdentifier">
            <summary>
            The Key Vault secret identifier.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.SecretIdentifier.IsSecretIdentifier(System.String)">
            <summary>
            Verifies whether the identifier belongs to a key vault secret.
            </summary>
            <param name="identifier">The key vault secret identifier.</param>
            <returns>True if the identifier belongs to a key vault secret. False otherwise.</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.SecretIdentifier.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="vaultBaseUrl"> the vault base URL</param>
            <param name="name">the name of the secret </param>
            <param name="version">the version of the secret.</param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.SecretIdentifier.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="identifier">The identifier for secret.</param>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.DeletedKeyIdentifier">
            <summary>
            The Key Vault deleted key identifier. Aka the recoveryId.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.DeletedKeyIdentifier.IsDeletedKeyIdentifier(System.String)">
            <summary>
            Verifies whether the identifier belongs to a key vault deleted key.
            </summary>
            <param name="identifier">The key vault deleted key identifier.</param>
            <returns>True if the identifier belongs to a key vault deleted key. False otherwise.</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.DeletedKeyIdentifier.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="vaultBaseUrl"> the vault base URL</param>
            <param name="name">the name of the deleted key </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.DeletedKeyIdentifier.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="identifier">The identifier for the deleted key. Aka the recoveryId return from deletion.</param>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.DeletedSecretIdentifier">
            <summary>
            The Key Vault deleted secret identifier. Aka the recoveryId.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.DeletedSecretIdentifier.IsDeletedSecretIdentifier(System.String)">
            <summary>
            Verifies whether the identifier belongs to a key vault deleted secret.
            </summary>
            <param name="identifier">The key vault secret identifier.</param>
            <returns>True if the identifier belongs to a key vault deleted secret. False otherwise.</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.DeletedSecretIdentifier.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="vaultBaseUrl"> the vault base URL</param>
            <param name="name">the name of the deleted secret </param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.DeletedSecretIdentifier.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="identifier">The identifier for the deleted secret. Aka the recoveryId return from deletion.</param>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.CertificateIdentifier">
            <summary>
            The Key Vault certificate identifier.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.CertificateIdentifier.IsCertificateIdentifier(System.String)">
            <summary>
            Verifies whether the identifier belongs to a key vault certificate.
            </summary>
            <param name="identifier">The key vault certificate identifier.</param>
            <returns>True if the identifier belongs to a key vault certificate. False otherwise.</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.CertificateIdentifier.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="vaultBaseUrl"> the vault base URL</param>
            <param name="name">the name of the certificate.</param>
            <param name="version">the version of the certificate.</param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.CertificateIdentifier.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="identifier">The identifier for certificate.</param>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.DeletedCertificateIdentifier">
            <summary>
            The Key Vault deleted certificate identifier. Aka the recoveryId.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.DeletedCertificateIdentifier.IsDeletedCertificateIdentifier(System.String)">
            <summary>
            Verifies whether the identifier is a valid KeyVault deleted certificate identifier.
            </summary>
            <param name="identifier">The key vault certificate identifier.</param>
            <returns>True if the identifier is a valid KeyVault deleted certificate. False otherwise.</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.DeletedCertificateIdentifier.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="vaultBaseUrl"> the vault base URL</param>
            <param name="name">the name of the deleted certificate</param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.DeletedCertificateIdentifier.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="identifier">The identifier for the deleted certificate. Aka the recoveryId return from deletion.</param>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.CertificateOperationIdentifier">
            <summary>
            The Key Vault certificate operation identifier.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.CertificateOperationIdentifier.IsCertificateOperationIdentifier(System.String)">
            <summary>
            Verifies whether the identifier belongs to a key vault certificate operation.
            </summary>
            <param name="identifier">The key vault certificate operation identifier.</param>
            <returns>True if the identifier belongs to a key vault certificate operation. False otherwise.</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.CertificateOperationIdentifier.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="vaultBaseUrl"> the vault base url. </param>
            <param name="name">the name of the certificate.</param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.CertificateOperationIdentifier.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="identifier">The identifier for certificate operation identifier. </param>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.CertificateIssuerIdentifier">
            <summary>
            The Key Vault issuer identifier.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.CertificateIssuerIdentifier.IsIssuerIdentifier(System.String)">
            <summary>
            Verifies whether the identifier belongs to a key vault issuer.
            </summary>
            <param name="identifier">The key vault issuer identifier.</param>
            <returns>True if the identifier belongs to a key vault issuer. False otherwise.</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.CertificateIssuerIdentifier.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="vaultBaseUrl">The vault base URL.</param>
            <param name="name">The name of the issuer.</param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.CertificateIssuerIdentifier.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="identifier">The key vault issuer identifier.</param>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.StorageAccountIdentifier">
            <summary>
            The Key Vault storage account identifier.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.StorageAccountIdentifier.IsStorageAccountIdentifier(System.String)">
            <summary>
            Verifies whether the identifier belongs to a key vault storage account.
            </summary>
            <param name="identifier">The key vault storage account identifier.</param>
            <returns>True if the identifier belongs to a key vault storage account. False otherwise.</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.StorageAccountIdentifier.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="vaultBaseUrl">The vault base URL.</param>
            <param name="name">The name of the storage account.</param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.StorageAccountIdentifier.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="identifier">The Key Vault storage account identifier.</param>
        </member>
        <member name="T:Microsoft.Azure.KeyVault.SasDefinitionIdentifier">
            <summary>
            The Key Vault storage SAS definition identifier.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.SasDefinitionIdentifier.IsSasDefinitionIdentifier(System.String)">
            <summary>
            Verifies whether the identifier belongs to a key vault storage SAS definition.
            </summary>
            <param name="identifier">The key vault storage SAS definition identifier.</param>
            <returns>True if the identifier belongs to a key vault storage SAS definition. False otherwise.</returns>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.SasDefinitionIdentifier.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="vaultBaseUrl">The vault base URL.</param>
            <param name="storageAccountName">The name of the storage account.</param>
            <param name="sasDefinitionName">The name of the storage SAS definition.</param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.SasDefinitionIdentifier.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="identifier">The key vault storage SAS definition identifier.</param>
        </member>
        <member name="M:Microsoft.Azure.KeyVault.UriExtensions.FullAuthority(System.Uri)">
            <summary>
            Returns an authority string for URI that is guaranteed to contain
            a port number.
            </summary>
            <param name="uri">The Uri from which to compute the authority</param>
            <returns>The complete authority for the Uri</returns>
        </member>
    </members>
</doc>
