<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Azure.Management.Storage.Fluent</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.AccountStatuses">
             <summary>
             An instance of this class stores the availability of a storage account.
             </summary>
            GENTHASH:Y29tLm1pY3Jvc29mdC5henVyZS5tYW5hZ2VtZW50LnN0b3JhZ2UuaW1wbGVtZW50YXRpb24uQWNjb3VudFN0YXR1c2Vz
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.AccountStatuses.#ctor(System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.AccountStatus},System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.AccountStatus})">
             <summary>
             Creates an instance of AccountStatuses class.
             </summary>
             <param name="primary">The status of the primary location.</param>
             <param name="secondary">The status of the secondary location.</param>
            GENMHASH:CEF8F82F6532A191697319055FF17B8E:FBABC45968C8A933D855C5B42E5ADB6A
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.AccountStatuses.Primary">
             <return>
             The status indicating whether the primary location of the storage
             account is available or unavailable.
             </return>
            GENMHASH:46645B73135AFEDAC926BE820EB4AFF7:265F211524466E40558AB295CFC0387C
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.AccountStatuses.Secondary">
             <return>
             The status indicating whether the secondary location of the
             storage account is available or unavailable. Only available if the
             accountType is StandardGRS or StandardRAGRS.
             </return>
            GENMHASH:BD8D51006FA39E65AA03B613332E3B24:A45A0B1AE68B70996082DCB7AD988E63
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainer#Etag">
            <summary>
            Gets the etag value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainer#HasImmutabilityPolicy">
            <summary>
            Gets the hasImmutabilityPolicy value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainer#HasLegalHold">
            <summary>
            Gets the hasLegalHold value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainer#Id">
            <summary>
            Gets the id value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainer#ImmutabilityPolicy">
            <summary>
            Gets the immutabilityPolicy value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainer#LastModifiedTime">
            <summary>
            Gets the lastModifiedTime value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainer#LeaseDuration">
            <summary>
            Gets the leaseDuration value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainer#LeaseState">
            <summary>
            Gets the leaseState value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainer#LeaseStatus">
            <summary>
            Gets the leaseStatus value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainer#LegalHold">
            <summary>
            Gets the legalHold value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainer#Metadata">
            <summary>
            Gets the metadata value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainer#Name">
            <summary>
            Gets the name value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainer#PublicAccess">
            <summary>
            Gets the publicAccess value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainer#Type">
            <summary>
            Gets the type value.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#BlobContainer#Definition#IWithBlobService#WithExistingBlobService(System.String,System.String)">
            <summary>
            Specifies resourceGroupName, accountName.
            </summary>
            <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
            <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
            <return>The next definition stage.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#BlobContainer#Update#IWithMetadata#WithMetadata(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Specifies metadata.
            </summary>
            <param name="metadata">A name-value pair to associate with the container as metadata.</param>
            <return>The next update stage.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#BlobContainer#Update#IWithMetadata#WithMetadata(System.String,System.String)">
            <summary>
            Specifies a singluar instance of metadata.
            </summary>
            <param name="name">A name to associate with the container as metadata.</param>
            <param name="value">A value to associate with the container as metadata.</param>
            <return>The next definition stage.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#BlobContainer#Definition#IWithMetadata#WithMetadata(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Specifies metadata.
            </summary>
            <param name="metadata">A name-value pair to associate with the container as metadata.</param>
            <return>The next definition stage.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#BlobContainer#Definition#IWithMetadata#WithMetadata(System.String,System.String)">
            <summary>
            Specifies a singluar instance of metadata.
            </summary>
            <param name="name">A name to associate with the container as metadata.</param>
            <param name="value">A value to associate with the container as metadata.</param>
            <return>The next definition stage.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#BlobContainer#Update#IWithPublicAccess#WithPublicAccess(Microsoft.Azure.Management.Storage.Fluent.Models.PublicAccess)">
            <summary>
            Specifies publicAccess.
            </summary>
            <param name="publicAccess">Specifies whether data in the container may be accessed publicly and the level of access. Possible values include: 'Container', 'Blob', 'None'.</param>
            <return>The next update stage.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#BlobContainer#Definition#IWithPublicAccess#WithPublicAccess(Microsoft.Azure.Management.Storage.Fluent.Models.PublicAccess)">
            <summary>
            Specifies publicAccess.
            </summary>
            <param name="publicAccess">Specifies whether data in the container may be accessed publicly and the level of access. Possible values include: 'Container', 'Blob', 'None'.</param>
            <return>The next definition stage.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainers#ClearLegalHoldAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)">
            <summary>
            Clears legal hold tags. Clearing the same or non-existent tag results in an idempotent operation. ClearLegalHold clears out only the specified tags in the request.
            </summary>
            <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
            <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
            <param name="containerName">The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.</param>
            <param name="tags">Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP.</param>
            <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
            <return>The observable for the request.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainers#DefineContainer(System.String)">
            <summary>
            Begins definition for a new Container resource.
            </summary>
            <param name="name">Resource name.</param>
            <return>The first stage of the new Container definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainers#DefineImmutabilityPolicy(System.String)">
            <summary>
            Begins definition for a new ImmutabilityPolicy resource.
            </summary>
            <param name="name">Resource name.</param>
            <return>The first stage of the new ImmutabilityPolicy definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainers#DeleteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes specified container under its account.
            </summary>
            <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
            <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
            <param name="containerName">The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.</param>
            <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
            <return>The observable for the request.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainers#DeleteImmutabilityPolicyAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Aborts an unlocked immutability policy. The response of delete has immutabilityPeriodSinceCreationInDays set to 0. ETag in If-Match is required for this operation. Deleting a locked immutability policy is not allowed, only way is to delete the container after deleting all blobs inside the container.
            </summary>
            <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
            <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
            <param name="containerName">The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.</param>
            <param name="ifMatch">The entity state (ETag) version of the immutability policy to update. A value of "" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied.</param>
            <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
            <return>The observable for the request.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainers#ExtendImmutabilityPolicyAsync(System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Extends the immutabilityPeriodSinceCreationInDays of a locked immutabilityPolicy. The only action allowed on a Locked policy will be this action. ETag in If-Match is required for this operation.
            </summary>
            <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
            <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
            <param name="containerName">The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.</param>
            <param name="ifMatch">The entity state (ETag) version of the immutability policy to update. A value of "" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied.</param>
            <param name="immutabilityPeriodSinceCreationInDays">The immutability period for the blobs in the container since the policy creation, in days.</param>
            <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
            <return>The observable for the request.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainers#GetAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets properties of a specified container.
            </summary>
            <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
            <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
            <param name="containerName">The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.</param>
            <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
            <return>The observable for the request.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainers#GetImmutabilityPolicyAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the existing immutability policy along with the corresponding ETag in response headers and body.
            </summary>
            <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
            <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
            <param name="containerName">The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.</param>
            <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
            <return>The observable for the request.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainers#ListAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all containers and does not support a prefix like data plane. Also SRP today does not return continuation token.
            </summary>
            <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
            <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
            <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
            <return>The observable for the request.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainers#LockImmutabilityPolicyAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the ImmutabilityPolicy to Locked state. The only action allowed on a Locked policy is ExtendImmutabilityPolicy action. ETag in If-Match is required for this operation.
            </summary>
            <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
            <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
            <param name="containerName">The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.</param>
            <param name="ifMatch">The entity state (ETag) version of the immutability policy to update. A value of "" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied.</param>
            <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
            <return>The observable for the request.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainers#SetLegalHoldAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)">
            <summary>
            Sets legal hold tags. Setting the same tag results in an idempotent operation. SetLegalHold follows an append pattern and does not clear out the existing tags that are not specified in the request.
            </summary>
            <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
            <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
            <param name="containerName">The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.</param>
            <param name="tags">Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP.</param>
            <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
            <return>The observable for the request.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.BlobServiceEncryptionStatusImpl">
             <summary>
             Implementation of StorageAccountEncryptionStatus for Blob service.
             </summary>
            GENTHASH:Y29tLm1pY3Jvc29mdC5henVyZS5tYW5hZ2VtZW50LnN0b3JhZ2UuaW1wbGVtZW50YXRpb24uQmxvYlNlcnZpY2VFbmNyeXB0aW9uU3RhdHVzSW1wbA==
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobServiceEncryptionStatusImpl.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionServices)">
            GENMHASH:DAB5602D433411FC81DD4AE9FB169399:8A39EA79F0EAA32E3B9637298A785CD9
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobServiceEncryptionStatusImpl.EncryptionService">
            GENMHASH:D97A6A22274011CC9F2DE9E7287AE1CE:5F296BBF9823F08BDC308F9A5164B5BE
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.BlobServiceEncryptionStatusImpl.StorageService">
            GENMHASH:37A0EE464EE2C3F32288E8C35E06F1EA:A33D634F8782BF7783613105DEEC75A4
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobServiceProperties#Cors">
            <summary>
            Gets the cors value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobServiceProperties#DefaultServiceVersion">
            <summary>
            Gets the defaultServiceVersion value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobServiceProperties#DeleteRetentionPolicy">
            <summary>
            Gets the deleteRetentionPolicy value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobServiceProperties#Id">
            <summary>
            Gets the id value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobServiceProperties#Name">
            <summary>
            Gets the name value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobServiceProperties#Type">
            <summary>
            Gets the type value.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#BlobServiceProperties#Definition#IWithCors#WithCORSRule(Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule)">
            <summary>
            Specifies a single CORS rule.
            </summary>
            <param name="corsRule">A single CORS rule.</param>
            <return>The next definition stage.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#BlobServiceProperties#Update#IWithCors#WithCORSRule(Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule)">
            <summary>
            Specifies a single CORS rule.
            </summary>
            <param name="corsRule">A single CORS rule.</param>
            <return>The next update stage.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#BlobServiceProperties#Definition#IWithCors#WithCORSRules(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule})">
            <summary>
            Specifies all of the CORS rules.
            </summary>
            <param name="corsRules">Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service.</param>
            <return>The next definition stage.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#BlobServiceProperties#Update#IWithCors#WithCORSRules(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule})">
            <summary>
            Specifies all of the CORS rules.
            </summary>
            <param name="corsRules">Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service.</param>
            <return>The next update stage.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#BlobServiceProperties#Definition#IWithDefaultServiceVersion#WithDefaultServiceVersion(System.String)">
            <summary>
            Specifies defaultServiceVersion.
            </summary>
            <param name="defaultServiceVersion">DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version is not specified. Possible values include version 2008-10-27 and all more recent versions.</param>
            <return>The next definition stage.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#BlobServiceProperties#Update#IWithDefaultServiceVersion#WithDefaultServiceVersion(System.String)">
            <summary>
            Specifies defaultServiceVersion.
            </summary>
            <param name="defaultServiceVersion">DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version is not specified. Possible values include version 2008-10-27 and all more recent versions.</param>
            <return>The next update stage.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#BlobServiceProperties#Definition#IWithDeleteRetentionPolicy#WithDeleteRetentionPolicy(Microsoft.Azure.Management.Storage.Fluent.Models.DeleteRetentionPolicy)">
            <summary>
            Specifies deleteRetentionPolicy.
            </summary>
            <param name="deleteRetentionPolicy">The blob service properties for soft delete.</param>
            <return>The next definition stage.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#BlobServiceProperties#Update#IWithDeleteRetentionPolicy#WithDeleteRetentionPolicy(Microsoft.Azure.Management.Storage.Fluent.Models.DeleteRetentionPolicy)">
            <summary>
            Specifies deleteRetentionPolicy.
            </summary>
            <param name="deleteRetentionPolicy">The blob service properties for soft delete.</param>
            <return>The next update stage.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#BlobServiceProperties#Definition#IWithDeleteRetentionPolicy#WithDeleteRetentionPolicyDisabled">
            <summary>
            Specifies that the delete retention policy is disabled.
            </summary>
            <return>The next definition stage.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#BlobServiceProperties#Update#IWithDeleteRetentionPolicy#WithDeleteRetentionPolicyDisabled">
            <summary>
            Specifies that the delete retention policy is disabled.
            </summary>
            <return>The next update stage.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#BlobServiceProperties#Definition#IWithDeleteRetentionPolicy#WithDeleteRetentionPolicyEnabled(System.Int32)">
            <summary>
            Specifies that the delete retention policy is enabled for soft delete.
            </summary>
            <param name="numDaysEnabled">Number of days after soft delete that the blob service properties will actually be deleted.</param>
            <return>The next definition stage.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#BlobServiceProperties#Update#IWithDeleteRetentionPolicy#WithDeleteRetentionPolicyEnabled(System.Int32)">
            <summary>
            Specifies that the delete retention policy is enabled for soft delete.
            </summary>
            <param name="numDaysEnabled">Number of days after soft delete that the blob service properties will actually be deleted.</param>
            <return>The next update stage.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#BlobServiceProperties#Definition#IWithStorageAccount#WithExistingStorageAccount(System.String,System.String)">
            <summary>
            Specifies resourceGroupName, accountName.
            </summary>
            <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
            <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
            <return>The next definition stage.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicesImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobServices#GetServicePropertiesAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the properties of a storage account’s Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
            </summary>
            <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
            <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
            <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
            <return>The observable for the request.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.BlobTypes">
            <summary>
            Defines values for JavaVersion.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.CheckNameAvailabilityResult">
             <summary>
             The  com.microsoft.azure.management.storage.StorageAccounts.checkNameAvailability action result.
             </summary>
            GENTHASH:Y29tLm1pY3Jvc29mdC5henVyZS5tYW5hZ2VtZW50LnN0b3JhZ2UuQ2hlY2tOYW1lQXZhaWxhYmlsaXR5UmVzdWx0
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.CheckNameAvailabilityResult.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.CheckNameAvailabilityResultInner)">
             <summary>
             Creates an instance of the check name availability result object.
             </summary>
             <param name="inner">The inner object.</param>
            GENMHASH:FB9080CE19E6D0BBB260F491A92C9EFF:BC4B1282CA708DC220050F834F17A184
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.CheckNameAvailabilityResult.IsAvailalbe">
             <return>
             A boolean value that indicates whether the name is available for
             you to use. If true, the name is available. If false, the name has
             already been taken or invalid and cannot be used.
             </return>
            GENMHASH:ECE9AA3B22E6D72ED037B235766E650D:4F919944D8D2F904C2402C730D63DA07
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.CheckNameAvailabilityResult.IsAvailable">
             <return>
             A boolean value that indicates whether the name is available for
             you to use. If true, the name is available. If false, the name has
             already been taken or invalid and cannot be used.
             </return>
            GENMHASH:ECE9AA3B22E6D72ED037B235766E650D:4F919944D8D2F904C2402C730D63DA07
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.CheckNameAvailabilityResult.Reason">
             <return>
             The reason that a storage account name could not be used. The
             Reason element is only returned if NameAvailable is false. Possible
             values include: 'AccountNameInvalid', 'AlreadyExists'.
             </return>
            GENMHASH:5D3E8FC383AE40AAD3262C598E63D4A1:BD5DB7E717551C6018CC88BC94827E00
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.CheckNameAvailabilityResult.Message">
             <return>An error message explaining the Reason value in more detail.</return>
            GENMHASH:E703019D95A4EEA3549CBD7305C71A96:340D0580E29C483CD3A1D98F49B79FD7
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Definition.IWithCreate">
            <summary>
            The stage of the definition which contains all the minimum required inputs for
            the resource to be created (via  WithCreate.create()), but also allows
            for any other optional settings to be specified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Definition.IDefinition">
            <summary>
            The entirety of the BlobContainer definition.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Definition.IBlank">
            <summary>
            The first stage of a BlobContainer definition.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Definition.IWithMetadata">
            <summary>
            The stage of the blobcontainer definition allowing to specify Metadata.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Definition.IWithMetadata.WithMetadata(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Specifies metadata.
            </summary>
            <param name="metadata">A name-value pair to associate with the container as metadata.</param>
            <return>The next definition stage.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Definition.IWithMetadata.WithMetadata(System.String,System.String)">
            <summary>
            Specifies a singluar instance of metadata.
            </summary>
            <param name="name">A name to associate with the container as metadata.</param>
            <param name="value">A value to associate with the container as metadata.</param>
            <return>The next definition stage.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Definition.IWithBlobService">
            <summary>
            The stage of the blobcontainer definition allowing to specify BlobService.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Definition.IWithBlobService.WithExistingBlobService(System.String,System.String)">
            <summary>
            Specifies resourceGroupName, accountName.
            </summary>
            <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
            <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
            <return>The next definition stage.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Definition.IWithPublicAccess">
            <summary>
            The stage of the blobcontainer definition allowing to specify PublicAccess.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Definition.IWithPublicAccess.WithPublicAccess(Microsoft.Azure.Management.Storage.Fluent.Models.PublicAccess)">
            <summary>
            Specifies publicAccess.
            </summary>
            <param name="publicAccess">Specifies whether data in the container may be accessed publicly and the level of access. Possible values include: 'Container', 'Blob', 'None'.</param>
            <return>The next definition stage.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Update.IWithPublicAccess">
            <summary>
            The stage of the blobcontainer update allowing to specify PublicAccess.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Update.IWithPublicAccess.WithPublicAccess(Microsoft.Azure.Management.Storage.Fluent.Models.PublicAccess)">
            <summary>
            Specifies publicAccess.
            </summary>
            <param name="publicAccess">Specifies whether data in the container may be accessed publicly and the level of access. Possible values include: 'Container', 'Blob', 'None'.</param>
            <return>The next update stage.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Update.IWithMetadata">
            <summary>
            The stage of the blobcontainer update allowing to specify Metadata.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Update.IWithMetadata.WithMetadata(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Specifies metadata.
            </summary>
            <param name="metadata">A name-value pair to associate with the container as metadata.</param>
            <return>The next update stage.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Update.IWithMetadata.WithMetadata(System.String,System.String)">
            <summary>
            Specifies a singluar instance of metadata.
            </summary>
            <param name="name">A name to associate with the container as metadata.</param>
            <param name="value">A value to associate with the container as metadata.</param>
            <return>The next definition stage.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Update.IUpdate">
            <summary>
            The template for a BlobContainer update operation, containing all the settings that can be modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IBlank">
            <summary>
            The first stage of a BlobServiceProperties definition.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IWithDeleteRetentionPolicy">
            <summary>
            The stage of the blobserviceproperties definition allowing to specify DeleteRetentionPolicy.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IWithDeleteRetentionPolicy.WithDeleteRetentionPolicy(Microsoft.Azure.Management.Storage.Fluent.Models.DeleteRetentionPolicy)">
            <summary>
            Specifies deleteRetentionPolicy.
            </summary>
            <param name="deleteRetentionPolicy">The blob service properties for soft delete.</param>
            <return>The next definition stage.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IWithDeleteRetentionPolicy.WithDeleteRetentionPolicyDisabled">
            <summary>
            Specifies that the delete retention policy is disabled.
            </summary>
            <return>The next definition stage.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IWithDeleteRetentionPolicy.WithDeleteRetentionPolicyEnabled(System.Int32)">
            <summary>
            Specifies that the delete retention policy is enabled for soft delete.
            </summary>
            <param name="numDaysEnabled">Number of days after soft delete that the blob service properties will actually be deleted.</param>
            <return>The next definition stage.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IDefinition">
            <summary>
            The entirety of the BlobServiceProperties definition.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IWithCreate">
            <summary>
            The stage of the definition which contains all the minimum required inputs for
            the resource to be created (via  WithCreate.create()), but also allows
            for any other optional settings to be specified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IWithCors">
            <summary>
            The stage of the blobserviceproperties definition allowing to specify Cors.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IWithCors.WithCORSRule(Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule)">
            <summary>
            Specifies a single CORS rule.
            </summary>
            <param name="corsRule">A single CORS rule.</param>
            <return>The next definition stage.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IWithCors.WithCORSRules(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule})">
            <summary>
            Specifies all of the CORS rules.
            </summary>
            <param name="corsRules">Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service.</param>
            <return>The next definition stage.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IWithDefaultServiceVersion">
            <summary>
            The stage of the blobserviceproperties definition allowing to specify DefaultServiceVersion.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IWithDefaultServiceVersion.WithDefaultServiceVersion(System.String)">
            <summary>
            Specifies defaultServiceVersion.
            </summary>
            <param name="defaultServiceVersion">DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version is not specified. Possible values include version 2008-10-27 and all more recent versions.</param>
            <return>The next definition stage.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IWithStorageAccount">
            <summary>
            The stage of the blobserviceproperties definition allowing to specify StorageAccount.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IWithStorageAccount.WithExistingStorageAccount(System.String,System.String)">
            <summary>
            Specifies resourceGroupName, accountName.
            </summary>
            <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
            <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
            <return>The next definition stage.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Update.IWithCors">
            <summary>
            The stage of the blobserviceproperties update allowing to specify Cors.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Update.IWithCors.WithCORSRule(Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule)">
            <summary>
            Specifies a single CORS rule.
            </summary>
            <param name="corsRule">A single CORS rule.</param>
            <return>The next update stage.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Update.IWithCors.WithCORSRules(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule})">
            <summary>
            Specifies all of the CORS rules.
            </summary>
            <param name="corsRules">Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service.</param>
            <return>The next update stage.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Update.IUpdate">
            <summary>
            The template for a BlobServiceProperties update operation, containing all the settings that can be modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Update.IWithDeleteRetentionPolicy">
            <summary>
            The stage of the blobserviceproperties update allowing to specify DeleteRetentionPolicy.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Update.IWithDeleteRetentionPolicy.WithDeleteRetentionPolicy(Microsoft.Azure.Management.Storage.Fluent.Models.DeleteRetentionPolicy)">
            <summary>
            Specifies deleteRetentionPolicy.
            </summary>
            <param name="deleteRetentionPolicy">The blob service properties for soft delete.</param>
            <return>The next update stage.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Update.IWithDeleteRetentionPolicy.WithDeleteRetentionPolicyDisabled">
            <summary>
            Specifies that the delete retention policy is disabled.
            </summary>
            <return>The next update stage.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Update.IWithDeleteRetentionPolicy.WithDeleteRetentionPolicyEnabled(System.Int32)">
            <summary>
            Specifies that the delete retention policy is enabled for soft delete.
            </summary>
            <param name="numDaysEnabled">Number of days after soft delete that the blob service properties will actually be deleted.</param>
            <return>The next update stage.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Update.IWithDefaultServiceVersion">
            <summary>
            The stage of the blobserviceproperties update allowing to specify DefaultServiceVersion.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Update.IWithDefaultServiceVersion.WithDefaultServiceVersion(System.String)">
            <summary>
            Specifies defaultServiceVersion.
            </summary>
            <param name="defaultServiceVersion">DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version is not specified. Possible values include version 2008-10-27 and all more recent versions.</param>
            <return>The next update stage.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.IBlobContainer">
            <summary>
            Type representing BlobContainer.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IBlobContainer.Etag">
            <summary>
            Gets the etag value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IBlobContainer.HasImmutabilityPolicy">
            <summary>
            Gets the hasImmutabilityPolicy value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IBlobContainer.HasLegalHold">
            <summary>
            Gets the hasLegalHold value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IBlobContainer.Id">
            <summary>
            Gets the id value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IBlobContainer.ImmutabilityPolicy">
            <summary>
            Gets the immutabilityPolicy value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IBlobContainer.LastModifiedTime">
            <summary>
            Gets the lastModifiedTime value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IBlobContainer.LeaseDuration">
            <summary>
            Gets the leaseDuration value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IBlobContainer.LeaseState">
            <summary>
            Gets the leaseState value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IBlobContainer.LeaseStatus">
            <summary>
            Gets the leaseStatus value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IBlobContainer.LegalHold">
            <summary>
            Gets the legalHold value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IBlobContainer.Metadata">
            <summary>
            Gets the metadata value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IBlobContainer.Name">
            <summary>
            Gets the name value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IBlobContainer.PublicAccess">
            <summary>
            Gets the publicAccess value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IBlobContainer.Type">
            <summary>
            Gets the type value.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers">
            <summary>
            Type representing BlobContainers.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.ClearLegalHoldAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)">
            <summary>
            Clears legal hold tags. Clearing the same or non-existent tag results in an idempotent operation. ClearLegalHold clears out only the specified tags in the request.
            </summary>
            <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
            <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
            <param name="containerName">The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.</param>
            <param name="tags">Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP.</param>
            <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
            <return>The observable for the request.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.DefineContainer(System.String)">
            <summary>
            Begins definition for a new Container resource.
            </summary>
            <param name="name">Resource name.</param>
            <return>The first stage of the new Container definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.DefineImmutabilityPolicy(System.String)">
            <summary>
            Begins definition for a new ImmutabilityPolicy resource.
            </summary>
            <param name="name">Resource name.</param>
            <return>The first stage of the new ImmutabilityPolicy definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.DeleteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes specified container under its account.
            </summary>
            <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
            <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
            <param name="containerName">The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.</param>
            <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
            <return>The observable for the request.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.DeleteImmutabilityPolicyAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Aborts an unlocked immutability policy. The response of delete has immutabilityPeriodSinceCreationInDays set to 0. ETag in If-Match is required for this operation. Deleting a locked immutability policy is not allowed, only way is to delete the container after deleting all blobs inside the container.
            </summary>
            <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
            <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
            <param name="containerName">The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.</param>
            <param name="ifMatch">The entity state (ETag) version of the immutability policy to update. A value of "" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied.</param>
            <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
            <return>The observable for the request.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.ExtendImmutabilityPolicyAsync(System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Extends the immutabilityPeriodSinceCreationInDays of a locked immutabilityPolicy. The only action allowed on a Locked policy will be this action. ETag in If-Match is required for this operation.
            </summary>
            <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
            <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
            <param name="containerName">The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.</param>
            <param name="ifMatch">The entity state (ETag) version of the immutability policy to update. A value of "" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied.</param>
            <param name="immutabilityPeriodSinceCreationInDays">The immutability period for the blobs in the container since the policy creation, in days.</param>
            <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
            <return>The observable for the request.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.GetAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets properties of a specified container.
            </summary>
            <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
            <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
            <param name="containerName">The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.</param>
            <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
            <return>The observable for the request.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.GetImmutabilityPolicyAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the existing immutability policy along with the corresponding ETag in response headers and body.
            </summary>
            <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
            <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
            <param name="containerName">The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.</param>
            <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
            <return>The observable for the request.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.ListAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all containers and does not support a prefix like data plane. Also SRP today does not return continuation token.
            </summary>
            <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
            <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
            <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
            <return>The observable for the request.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.LockImmutabilityPolicyAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the ImmutabilityPolicy to Locked state. The only action allowed on a Locked policy is ExtendImmutabilityPolicy action. ETag in If-Match is required for this operation.
            </summary>
            <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
            <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
            <param name="containerName">The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.</param>
            <param name="ifMatch">The entity state (ETag) version of the immutability policy to update. A value of "" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied.</param>
            <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
            <return>The observable for the request.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.SetLegalHoldAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)">
            <summary>
            Sets legal hold tags. Setting the same tag results in an idempotent operation. SetLegalHold follows an append pattern and does not clear out the existing tags that are not specified in the request.
            </summary>
            <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
            <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
            <param name="containerName">The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.</param>
            <param name="tags">Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP.</param>
            <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
            <return>The observable for the request.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.IBlobServiceProperties">
            <summary>
            Type representing BlobServiceProperties.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IBlobServiceProperties.Cors">
            <summary>
            Gets the cors value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IBlobServiceProperties.DefaultServiceVersion">
            <summary>
            Gets the defaultServiceVersion value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IBlobServiceProperties.DeleteRetentionPolicy">
            <summary>
            Gets the deleteRetentionPolicy value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IBlobServiceProperties.Id">
            <summary>
            Gets the id value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IBlobServiceProperties.Name">
            <summary>
            Gets the name value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IBlobServiceProperties.Type">
            <summary>
            Gets the type value.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.IBlobServices">
            <summary>
            Type representing BlobServices.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IBlobServices.GetServicePropertiesAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the properties of a storage account’s Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
            </summary>
            <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
            <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
            <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
            <return>The observable for the request.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy">
            <summary>
            Type representing ImmutabilityPolicy.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy.Etag">
            <summary>
            Gets the etag value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy.Id">
            <summary>
            Gets the id value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy.ImmutabilityPeriodSinceCreationInDays">
            <summary>
            Gets the immutabilityPeriodSinceCreationInDays value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy.Name">
            <summary>
            Gets the name value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy.State">
            <summary>
            Gets the state value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy.Type">
            <summary>
            Gets the type value.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.ILegalHold">
            <summary>
            Type representing LegalHold.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.ILegalHold.HasLegalHold">
            <summary>
            Gets the hasLegalHold value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.ILegalHold.Tags">
            <summary>
            Gets the tags value.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.IListContainerItems">
            <summary>
            Type representing ListContainerItems.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IListContainerItems.Value">
            <summary>
            Gets the value value.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.IManagementPolicies">
            <summary>
            Type representing ManagementPolicies.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IManagementPolicies.DeleteAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the managementpolicy associated with the specified storage account.
            </summary>
            <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
            <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
            <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
            <return>The observable for the request.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IManagementPolicies.GetAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the managementpolicy associated with the specified storage account.
            </summary>
            <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
            <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
            <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
            <return>The observable for the request.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.IManagementPolicy">
            <summary>
            Type representing ManagementPolicy.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IManagementPolicy.Id">
            <summary>
            Gets the id value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IManagementPolicy.LastModifiedTime">
            <summary>
            Gets the lastModifiedTime value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IManagementPolicy.Name">
            <summary>
            Gets the name value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IManagementPolicy.Policy">
            <summary>
            Gets the policy value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IManagementPolicy.Rules">
            <summary>
            Gets the list of rules for this policy.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IManagementPolicy.Type">
            <summary>
            Gets the type value.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Definition.IWithImmutabilityPeriodSinceCreationInDays">
            <summary>
            The stage of the immutabilitypolicy definition allowing to specify ImmutabilityPeriodSinceCreationInDays.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Definition.IWithImmutabilityPeriodSinceCreationInDays.WithImmutabilityPeriodSinceCreationInDays(System.Int32)">
            <summary>
            Specifies immutabilityPeriodSinceCreationInDays.
            </summary>
            <param name="immutabilityPeriodSinceCreationInDays">The immutability period for the blobs in the container since the policy creation, in days.</param>
            <return>The next definition stage.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Definition.IDefinition">
            <summary>
            The entirety of the ImmutabilityPolicy definition.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Definition.IBlank">
            <summary>
            The first stage of a ImmutabilityPolicy definition.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Definition.IWithCreate">
            <summary>
            The stage of the definition which contains all the minimum required inputs for
            the resource to be created (via  WithCreate.create()), but also allows
            for any other optional settings to be specified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Definition.IWithContainer">
            <summary>
            The stage of the immutabilitypolicy definition allowing to specify Container.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Definition.IWithContainer.WithExistingContainer(System.String,System.String,System.String)">
            <summary>
            Specifies resourceGroupName, accountName, containerName.
            </summary>
            <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
            <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
            <param name="containerName">The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.</param>
            <return>The next definition stage.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Definition.IWithIfMatch">
            <summary>
            The stage of the immutabilitypolicy definition allowing to specify IfMatch.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Definition.IWithIfMatch.WithIfMatch(System.String)">
            <summary>
            Specifies ifMatch.
            </summary>
            <param name="ifMatch">The entity state (ETag) version of the immutability policy to update. A value of "" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied.</param>
            <return>The next definition stage.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Update.IWithIfMatch">
            <summary>
            The stage of the immutabilitypolicy update allowing to specify IfMatch.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Update.IWithIfMatch.WithIfMatch(System.String)">
            <summary>
            Specifies ifMatch.
            </summary>
            <param name="ifMatch">The entity state (ETag) version of the immutability policy to update. A value of "" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied.</param>
            <return>The next update stage.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Update.IWithImmutabilityPeriodSinceCreationInDays">
            <summary>
            The stage of the immutabilitypolicy update allowing to specify ImmutabilityPeriodSinceCreationInDays.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Update.IWithImmutabilityPeriodSinceCreationInDays.WithImmutabilityPeriodSinceCreationInDays(System.Int32)">
            <summary>
            Specifies immutabilityPeriodSinceCreationInDays.
            </summary>
            <param name="immutabilityPeriodSinceCreationInDays">The immutability period for the blobs in the container since the policy creation, in days.</param>
            <return>The next update stage.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Update.IUpdate">
            <summary>
            The template for a ImmutabilityPolicy update operation, containing all the settings that can be modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.FileServiceEncryptionStatusImpl">
             <summary>
             Implementation of StorageAccountEncryptionStatus for File service.
             </summary>
            GENTHASH:Y29tLm1pY3Jvc29mdC5henVyZS5tYW5hZ2VtZW50LnN0b3JhZ2UuaW1wbGVtZW50YXRpb24uRmlsZVNlcnZpY2VFbmNyeXB0aW9uU3RhdHVzSW1wbA==
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.FileServiceEncryptionStatusImpl.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionServices)">
            GENMHASH:3BF269643D6DD700597D4C8FA71BE0FE:8A39EA79F0EAA32E3B9637298A785CD9
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.FileServiceEncryptionStatusImpl.EncryptionService">
            GENMHASH:D97A6A22274011CC9F2DE9E7287AE1CE:7EB9967F82AB29847D3BDF37F05B3DEB
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.FileServiceEncryptionStatusImpl.StorageService">
            GENMHASH:37A0EE464EE2C3F32288E8C35E06F1EA:5D5EFBFE420966F3B6BAC9791861AF84
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#IImmutabilityPolicy#Etag">
            <summary>
            Gets the etag value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#IImmutabilityPolicy#Id">
            <summary>
            Gets the id value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#IImmutabilityPolicy#ImmutabilityPeriodSinceCreationInDays">
            <summary>
            Gets the immutabilityPeriodSinceCreationInDays value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#IImmutabilityPolicy#Name">
            <summary>
            Gets the name value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#IImmutabilityPolicy#State">
            <summary>
            Gets the state value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#IImmutabilityPolicy#Type">
            <summary>
            Gets the type value.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#ImmutabilityPolicy#Definition#IWithContainer#WithExistingContainer(System.String,System.String,System.String)">
            <summary>
            Specifies resourceGroupName, accountName, containerName.
            </summary>
            <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
            <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
            <param name="containerName">The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.</param>
            <return>The next definition stage.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#ImmutabilityPolicy#Definition#IWithIfMatch#WithIfMatch(System.String)">
            <summary>
            Specifies ifMatch.
            </summary>
            <param name="ifMatch">The entity state (ETag) version of the immutability policy to update. A value of "" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied.</param>
            <return>The next definition stage.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#ImmutabilityPolicy#Update#IWithIfMatch#WithIfMatch(System.String)">
            <summary>
            Specifies ifMatch.
            </summary>
            <param name="ifMatch">The entity state (ETag) version of the immutability policy to update. A value of "" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied.</param>
            <return>The next update stage.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#ImmutabilityPolicy#Definition#IWithImmutabilityPeriodSinceCreationInDays#WithImmutabilityPeriodSinceCreationInDays(System.Int32)">
            <summary>
            Specifies immutabilityPeriodSinceCreationInDays.
            </summary>
            <param name="immutabilityPeriodSinceCreationInDays">The immutability period for the blobs in the container since the policy creation, in days.</param>
            <return>The next definition stage.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#ImmutabilityPolicy#Update#IWithImmutabilityPeriodSinceCreationInDays#WithImmutabilityPeriodSinceCreationInDays(System.Int32)">
            <summary>
            Specifies immutabilityPeriodSinceCreationInDays.
            </summary>
            <param name="immutabilityPeriodSinceCreationInDays">The immutability period for the blobs in the container since the policy creation, in days.</param>
            <return>The next update stage.</return>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.LegalHoldImpl.Microsoft#Azure#Management#Storage#Fluent#ILegalHold#HasLegalHold">
            <summary>
            Gets the hasLegalHold value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.LegalHoldImpl.Microsoft#Azure#Management#Storage#Fluent#ILegalHold#Tags">
            <summary>
            Gets the tags value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.ListContainerItemsImpl.Microsoft#Azure#Management#Storage#Fluent#IListContainerItems#Value">
            <summary>
            Gets the value value.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPoliciesImpl.Microsoft#Azure#Management#Storage#Fluent#IManagementPolicies#DeleteAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the managementpolicy associated with the specified storage account.
            </summary>
            <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
            <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
            <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
            <return>The observable for the request.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPoliciesImpl.Microsoft#Azure#Management#Storage#Fluent#IManagementPolicies#GetAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the managementpolicy associated with the specified storage account.
            </summary>
            <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
            <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
            <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
            <return>The observable for the request.</return>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#IManagementPolicy#Id">
            <summary>
            Gets the id value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#IManagementPolicy#LastModifiedTime">
            <summary>
            Gets the lastModifiedTime value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#IManagementPolicy#Name">
            <summary>
            Gets the name value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#IManagementPolicy#Policy">
            <summary>
            Gets the policy value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#IManagementPolicy#Rules">
            <summary>
            Gets the list of rules for this policy.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#IManagementPolicy#Type">
            <summary>
            Gets the type value.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#ManagementPolicy#Definition#IWithRule#DefineRule(System.String)">
            <summary>
            The function that defines a rule to attach to this policy.
            </summary>
            <param name="name">The name of the rule we are going to define.</param>
            <return>The next definition stage.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#ManagementPolicy#Update#IRule#UpdateRule(System.String)">
            <summary>
            The function that updates a rule whose name is the inputted parameter name.
            </summary>
            <param name="name">The name of the rule to be updated.</param>
            <return>The next stage of the management policy rule update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#ManagementPolicy#Definition#IWithStorageAccount#WithExistingStorageAccount(System.String,System.String)">
            <summary>
            Specifies resourceGroupName, accountName.
            </summary>
            <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
            <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
            <return>The next definition stage.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#ManagementPolicy#Update#IRule#WithoutRule(System.String)">
            <summary>
            The function that removes a rule whose name is the inputted parameter name.
            </summary>
            <param name="name">The name of the rule to be removed.</param>
            <return>The next stage of the management policy update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#ManagementPolicy#Update#IWithPolicy#WithPolicy(Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySchema)">
            <summary>
            Specifies policy.
            </summary>
            <param name="policy">The Storage Account ManagementPolicy, in JSON format. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.</param>
            <return>The next update stage.</return>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#IPolicyRule#ActionsOnBaseBlob">
            <summary>
            Gets an object describing the actions to take on the filtered base blobs in this rule.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#ChildResourceActions#IAttachable{Microsoft#Azure#Management#Storage#Fluent#ManagementPolicy#Definition#IWithCreate}#Attach">
            <summary>
            Attaches this child object's definition to its parent's definition.
            </summary>
            <return>The next stage of the parent object's definition.</return>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#IPolicyRule#ActionsOnSnapShot">
            <summary>
            Gets an object describing the actions to take on the filtered snapshot in this rule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#IPolicyRule#BlobTypesToFilterFor">
            <summary>
            Gets an unmodifiable list of the blob types this rule will apply for.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#IPolicyRule#DaysAfterBaseBlobModificationUntilArchiving">
            <summary>
            Gets the number of days after a filtered base blob is last modified when the tier to archive action is enacted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#IPolicyRule#DaysAfterBaseBlobModificationUntilCooling">
            <summary>
            Gets the number of days after a filtered base blob is last modified when the tier to cool action is enacted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#IPolicyRule#DaysAfterBaseBlobModificationUntilDeleting">
            <summary>
            Gets the number of days after a filtered base blob is last modified when the delete action is enacted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#IPolicyRule#DaysAfterSnapShotCreationUntilDeleting">
            <summary>
            Gets the number of days after a filtered snapshot is created when the delete action is enacted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#IPolicyRule#DeleteActionOnBaseBlobEnabled">
            <summary>
            Gets whether there is a delete action specified for the filtered base blobs in this rule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#IPolicyRule#DeleteActionOnSnapShotEnabled">
            <summary>
            Gets whether there is a delete action specified for the filtered snapshots in this rule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#IPolicyRule#Name">
            <summary>
            Gets the name of the rule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#IPolicyRule#PrefixesToFilterFor">
            <summary>
            Gets an unmodifiable list of the prefixes of the blob types this rule will apply for.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#IPolicyRule#TierToArchiveActionOnBaseBlobEnabled">
            <summary>
            Gets whether there is a tier to archive action specified for the filtered base blobs in this rule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#IPolicyRule#TierToCoolActionOnBaseBlobEnabled">
            <summary>
            Gets whether there is a tier to cool action specified for the filtered base blobs in this rule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#IPolicyRule#Type">
            <summary>
            Gets the type of the rule.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Update#IWithActions#UpdateActionsOnBaseBlob(Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyBaseBlob)">
            <summary>
            The function that specifies all of the actions to apply to selected base blobs.
            </summary>
            <param name="baseBlobActions">An object including all of the actions to apply to selected base blobs.</param>
            <return>The next stage of the management policy rule update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Update#IWithActions#UpdateActionsOnSnapShot(Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySnapShot)">
            <summary>
            The function that specifies all of the actions to apply to selected snapshots.
            </summary>
            <param name="snapShotActions">An object including all of the actions to apply to selected snapshots.</param>
            <return>The next stage of the management policy rule update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Definition#IWithRuleActions#WithActionsOnBaseBlob(Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyBaseBlob)">
            <summary>
            The function that specifies all of the actions to apply to selected base blobs.
            </summary>
            <param name="baseBlobActions">An object including all of the actions to apply to selected base blobs.</param>
            <return>The next stage of the management policy rule definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Definition#IWithRuleActions#WithActionsOnSnapShot(Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySnapShot)">
            <summary>
            The function that specifies all of the actions to apply to selected snapshots.
            </summary>
            <param name="snapShotActions">An object including all of the actions to apply to selected snapshots.</param>
            <return>The next stage of the management policy rule definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Update#IWithBlobTypesToFilterFor#WithBlobTypesToFilterFor(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.BlobTypes})">
            <summary>
            The function that specifies the list of blob types that the rule will apply to.
            </summary>
            <param name="blobTypes">A list of the types of blob the rule will apply to.</param>
            <return>The next stage of the management policy rule update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Definition#IWithBlobTypesToFilterFor#WithBlobTypesToFilterFor(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.BlobTypes})">
            <summary>
            The function that specifies the list of blob types that the rule will apply to.
            </summary>
            <param name="blobTypes">A list of the types of blob the rule will apply to.</param>
            <return>The next stage of the management policy rule definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Update#IWithBlobTypesToFilterFor#WithBlobTypeToFilterFor(Microsoft.Azure.Management.Storage.Fluent.BlobTypes)">
            <summary>
            The function that specifies a blob type that the rule will apply to.
            </summary>
            <param name="blobType">A blob type that the rule will apply to.</param>
            <return>The next stage of the management policy rule update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Definition#IWithBlobTypesToFilterFor#WithBlobTypeToFilterFor(Microsoft.Azure.Management.Storage.Fluent.BlobTypes)">
            <summary>
            The function that specifies a blob type that the rule will apply to.
            </summary>
            <param name="blobType">A blob type that the rule will apply to.</param>
            <return>The next stage of the management policy rule definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Update#IWithBlobTypesToFilterFor#WithBlobTypeToFilterForRemoved(Microsoft.Azure.Management.Storage.Fluent.BlobTypes)">
            <summary>
            The function that specifies to remove a blob type that the rule will apply to.
            </summary>
            <param name="blobType">The blob type that you wish the rule to no longer apply to.</param>
            <return>The next stage of the management policy rule update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Definition#IWithRuleActions#WithDeleteActionOnBaseBlob(System.Int32)">
            <summary>
            The function that specifies a delete action on the selected base blobs.
            </summary>
            <param name="daysAfterBaseBlobModificationUntilDeleting">The number of days after a base blob is last modified until it is deleted.</param>
            <return>The next stage of the management policy rule definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Update#IWithActions#WithDeleteActionOnBaseBlob(System.Int32)">
            <summary>
            The function that specifies a delete action on the selected base blobs.
            </summary>
            <param name="daysAfterBaseBlobModificationUntilDeleting">The number of days after a base blob is last modified until it is deleted.</param>
            <return>The next stage of the management policy rule update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Definition#IWithRuleActions#WithDeleteActionOnSnapShot(System.Int32)">
            <summary>
            The function that specifies a delete action on the selected snapshots.
            </summary>
            <param name="daysAfterSnapShotCreationUntilDeleting">The number of days after a snapshot is created until it is deleted.</param>
            <return>The next stage of the management policy rule definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Update#IWithActions#WithDeleteActionOnSnapShot(System.Int32)">
            <summary>
            The function that specifies a delete action on the selected snapshots.
            </summary>
            <param name="daysAfterSnapShotCreationUntilDeleting">The number of days after a snapshot is created until it is deleted.</param>
            <return>The next stage of the management policy rule update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Definition#IWithPolicyRuleType#WithLifecycleRuleType">
            <summary>
            The function that specifies Lifecycle as the type of the management policy rule.
            </summary>
            <return>The next stage of the management policy rule definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Update#IWithPrefixesToFilterFor#WithoutPrefixesToFilterFor">
            <summary>
            The function that clears all blob prefixes so the rule will apply to blobs regardless of prefixes.
            </summary>
            <return>The next stage of the management policy rule update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Update#IWithPrefixesToFilterFor#WithPrefixesToFilterFor(System.Collections.Generic.IList{System.String})">
            <summary>
            The function that specifies the list of prefixes for the blobs that the rule will apply to.
            </summary>
            <param name="prefixes">A list of the prefixes for the blobs that the rule will apply to.</param>
            <return>The next stage of the management policy rule update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Definition#IWithPrefixesToFilterFor#WithPrefixesToFilterFor(System.Collections.Generic.IList{System.String})">
            <summary>
            The function that specifies the list of prefixes for the blobs that the rule will apply to.
            </summary>
            <param name="prefixes">A list of the prefixes for the blobs that the rule will apply to.</param>
            <return>The next stage of the management policy rule definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Update#IWithPrefixesToFilterFor#WithPrefixToFilterFor(System.String)">
            <summary>
            The function that specifies a prefix for the blobs that the rule will apply to.
            </summary>
            <param name="prefix">A prefix for the blobs that the rule will apply to.</param>
            <return>The next stage of the management policy rule update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Definition#IWithPrefixesToFilterFor#WithPrefixToFilterFor(System.String)">
            <summary>
            The function that specifies a prefix for the blobs that the rule will apply to.
            </summary>
            <param name="prefix">A prefix for the blobs that the rule will apply to.</param>
            <return>The next stage of the management policy rule definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Definition#IWithRuleActions#WithTierToArchiveActionOnBaseBlob(System.Int32)">
            <summary>
            The function that specifies a tier to archive action on the selected base blobs.
            </summary>
            <param name="daysAfterBaseBlobModificationUntilArchiving">The number of days after a base blob is last modified until it is archived.</param>
            <return>The next stage of the management policy rule definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Update#IWithActions#WithTierToArchiveActionOnBaseBlob(System.Int32)">
            <summary>
            The function that specifies a tier to archive action on the selected base blobs.
            </summary>
            <param name="daysAfterBaseBlobModificationUntilArchiving">The number of days after a base blob is last modified until it is archived.</param>
            <return>The next stage of the management policy rule update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Definition#IWithRuleActions#WithTierToCoolActionOnBaseBlob(System.Int32)">
            <summary>
            The function that specifies a tier to cool action on the selected base blobs.
            </summary>
            <param name="daysAfterBaseBlobModificationUntilCooling">The number of days after a base blob is last modified until it is cooled.</param>
            <return>The next stage of the management policy rule definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Update#IWithActions#WithTierToCoolActionOnBaseBlob(System.Int32)">
            <summary>
            The function that specifies a tier to cool action on the selected base blobs.
            </summary>
            <param name="daysAfterBaseBlobModificationUntilCooling">The number of days after a base blob is last modified until it is cooled.</param>
            <return>The next stage of the management policy rule update.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.QueueServiceEncryptionStatusImpl">
             <summary>
             Implementation of StorageAccountEncryptionStatus for Queue service.
             </summary>
            GENTHASH:Y29tLm1pY3Jvc29mdC5henVyZS5tYW5hZ2VtZW50LnN0b3JhZ2UuaW1wbGVtZW50YXRpb24uUXVldWVTZXJ2aWNlRW5jcnlwdGlvblN0YXR1c0ltcGw=
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.QueueServiceEncryptionStatusImpl.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionServices)">
            GENMHASH:504CA456A019C5BF50BE787895363D30:8A39EA79F0EAA32E3B9637298A785CD9
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.QueueServiceEncryptionStatusImpl.EncryptionService">
            GENMHASH:D97A6A22274011CC9F2DE9E7287AE1CE:9D276E63DDD38842055BC0961B867140
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.QueueServiceEncryptionStatusImpl.StorageService">
            GENMHASH:37A0EE464EE2C3F32288E8C35E06F1EA:84CE79FE2E30C84E4127AE3232C3EFD2
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccountEncryptionStatusImpl">
             <summary>
             Shared implementation of StorageAccountEncryptionStatus.
             </summary>
            GENTHASH:Y29tLm1pY3Jvc29mdC5henVyZS5tYW5hZ2VtZW50LnN0b3JhZ2UuaW1wbGVtZW50YXRpb24uU3RvcmFnZUFjY291bnRFbmNyeXB0aW9uU3RhdHVzSW1wbA==
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageAccountEncryptionStatusImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageAccountEncryptionStatus#IsEnabled">
            <summary>
            Gets true if the encryption is enabled for the service false otherwise.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageAccountEncryptionStatusImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageAccountEncryptionStatus#LastEnabledTime">
            <summary>
            Gets rough estimate of the date/time when the encryption was last enabled, null if
            the encryption is disabled.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountEncryptionStatusImpl.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionServices)">
            GENMHASH:AFBF75B8C2F05405FEC5D79F56277FBD:1AACE820D8910F7BD0F84AAA4D78CCA7
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountEncryptionStatusImpl.LastEnabledTime">
            GENMHASH:383E4E95C2764D4EF94A2DE388852F09:53DCC067101B13A21EE567A072307B56
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountEncryptionStatusImpl.IsEnabled">
            GENMHASH:3F2076D33F84FDFAB700A1F0C8C41647:4BA9FCF5109851CAEE354BC80FD6F4D9
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountEncryptionStatusImpl.EncryptionService">
            GENMHASH:D97A6A22274011CC9F2DE9E7287AE1CE:27E486AB74A10242FF421C0798DDC450
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl">
             <summary>
             Implementation for IStorageAccount.
             </summary>
            GENTHASH:Y29tLm1pY3Jvc29mdC5henVyZS5tYW5hZ2VtZW50LnN0b3JhZ2UuaW1wbGVtZW50YXRpb24uU3RvcmFnZUFjY291bnRJbXBs
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageAccount#AccountStatuses">
            <summary>
            Gets the status indicating whether the primary and secondary location of
            the storage account is available or unavailable. Possible values include:
            'Available', 'Unavailable'.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageAccount#GetKeys">
            <summary>
            Fetch the up-to-date access keys from Azure for this storage account.
            </summary>
            <return>The access keys for this storage account.</return>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageAccount#CustomDomain">
            <summary>
            Gets the user assigned custom domain assigned to this storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageAccount#EncryptionKeySource">
            <summary>
            Gets the source of the key used for encryption.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageAccount#Kind">
            <summary>
            Gets the kind of the storage account. Possible values are 'Storage',
            'BlobStorage'.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageAccount#RegenerateKey(System.String)">
            <summary>
            Regenerates the access keys for this storage account.
            </summary>
            <param name="keyName">If the key name.</param>
            <return>The generated access keys for this storage account.</return>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageAccount#ProvisioningState">
            <summary>
            Gets the status of the storage account at the time the operation was
            called. Possible values include: 'Creating', 'ResolvingDNS',
            'Succeeded'.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageAccount#CreationTime">
            <summary>
            Gets the creation date and time of the storage account in UTC.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageAccount#Encryption">
            <return>Gets the encryption settings on the account.</return>
            <summary>
            Use  StorageAccount.encryptionKeySource(),  StorageAccount.encryptionStatuses() instead.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageAccount#EndPoints">
            <summary>
            Gets the URLs that are used to perform a retrieval of a public blob,
            queue or table object. Note that StandardZRS and PremiumLRS accounts
            only return the blob endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageAccount#EncryptionStatuses">
            <summary>
            Gets the encryption statuses indexed by storage service type.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageAccount#AccessTier">
            <summary>
            Gets access tier used for billing. Access tier cannot be changed more
            than once every 7 days (168 hours). Access tier cannot be set for
            StandardLRS, StandardGRS, StandardRAGRS, or PremiumLRS account types.
            Possible values include: 'Hot', 'Cool'.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageAccount#LastGeoFailoverTime">
            <summary>
            Gets the timestamp of the most recent instance of a failover to the
            secondary location. Only the most recent timestamp is retained. This
            element is not returned if there has never been a failover instance.
            Only available if the accountType is StandardGRS or StandardRAGRS.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageAccount#RegenerateKeyAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Regenerates the access keys for this storage account asynchronously.
            </summary>
            <param name="keyName">If the key name.</param>
            <return>A representation of the deferred computation of this call, returning the regenerated access key.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageAccount#GetKeysAsync(System.Threading.CancellationToken)">
            <summary>
            Fetch the up-to-date access keys from Azure for this storage account asynchronously.
            </summary>
            <return>A representation of the deferred computation of this call, returning the access keys.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Update#IWithEncryption#WithEncryption">
            <summary>
            Enables encryption for blob service.
            </summary>
            <deprecated>Use  WithEncryption.WithBlobEncryption() instead.</deprecated>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Update#IWithEncryption#WithoutEncryption">
            <summary>
            Disables encryption for blob service.
            </summary>
            <deprecated>Use  WithEncryption.withoutBlobEncryption() instead.</deprecated>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Definition#IWithEncryption#WithEncryption">
            <summary>
            Specifies that encryption needs be enabled for blob service.
            </summary>
            <deprecated>Use  WithEncryption.withBlobEncryption() instead.</deprecated>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Definition#IWithBlobStorageAccountKind#WithBlobStorageAccountKind">
            <summary>
            Specifies the storage account kind to be "BlobStorage". The access
            tier is defaulted to be "Hot".
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Definition#IWithFileStorageAccountKind#WithFileStorageAccountKind">
            <summary>
            Specifies the storage account kind to be "FileStorage".
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Definition#IWithBlockBlobStorageAccountKind#WithBlockBlobStorageAccountKind">
            <summary>
            Specifies the storage account kind to be "BlockBlobStorage".
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Update#IWithAccessTier#WithAccessTier(Microsoft.Azure.Management.Storage.Fluent.Models.AccessTier)">
            <summary>
            Specifies the access tier used for billing.
            Access tier cannot be changed more than once every 7 days (168 hours).
            Access tier cannot be set for StandardLRS, StandardGRS, StandardRAGRS,
            or PremiumLRS account types.
            </summary>
            <param name="accessTier">The access tier value.</param>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Definition#IWithGeneralPurposeAccountKind#WithGeneralPurposeAccountKind">
            <summary>
            Specifies the storage account kind to be "Storage", the kind for
            general purposes.
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#ResourceActions#IUpdatable{Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Update#IUpdate}#Update">
            <summary>
            Begins an update for a new resource.
            This is the beginning of the builder pattern used to update top level resources
            in Azure. The final method completing the definition and starting the actual resource creation
            process in Azure is  Appliable.apply().
            </summary>
            <return>The stage of new resource update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Update#IWithSku#WithSku(Microsoft.Azure.Management.Storage.Fluent.Models.SkuName)">
            <summary>
            Specifies the sku of the storage account.
            </summary>
            <deprecated>Use  WithSku.withSku(StorageAccountSkuType) instead.</deprecated>
            <param name="skuName">The sku.</param>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Update#IWithSkuBeta#WithSku(Microsoft.Azure.Management.Storage.Fluent.StorageAccountSkuType)">
            <summary>
            Specifies the sku of the storage account.
            </summary>
            <param name="sku">The sku.</param>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Definition#IWithSku#WithSku(Microsoft.Azure.Management.Storage.Fluent.Models.SkuName)">
            <summary>
            Specifies the sku of the storage account.
            </summary>
            <deprecated>Use  WithSku.withSku(StorageAccountSkuType) instead.</deprecated>
            <param name="skuName">The sku.</param>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageAccountBeta#CanAccessFromAzureServices">
            <summary>
            Gets Checks storage account can be accessed from applications running on azure.
            </summary>
            <summary>
            Gets true if storage can be accessed from application running on azure, false otherwise.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageAccountBeta#SkuType">
            <summary>
            Gets the sku of this storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageAccountBeta#IPAddressRangesWithAccess">
            <summary>
            Gets the list of ip address ranges having access to the storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageAccountBeta#CanReadMetricsFromAnyNetwork">
            <summary>
            Gets Checks storage metrics can be read from any network.
            </summary>
            <summary>
            Gets true if storage metrics can be read from any network, false otherwise.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageAccountBeta#IPAddressesWithAccess">
            <summary>
            Gets the list of ip addresses having access to the storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageAccountBeta#IsAccessAllowedFromAllNetworks">
            <summary>
            Gets true if authenticated application from any network is allowed to access the
            storage account, false if only application from whitelisted network (subnet, ip address,
            ip address range) can access the storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageAccountBeta#CanReadLogEntriesFromAnyNetwork">
            <summary>
            Gets Checks storage log entries can be read from any network.
            </summary>
            <summary>
            Gets true if storage log entries can be read from any network, false otherwise.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageAccountBeta#SystemAssignedManagedServiceIdentityPrincipalId">
            <summary>
            Gets the Managed Service Identity specific Active Directory service principal ID assigned
            to the storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageAccountBeta#NetworkSubnetsWithAccess">
            <summary>
            Gets the list of resource id of virtual network subnet having access to the storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageAccountBeta#SystemAssignedManagedServiceIdentityTenantId">
            <summary>
            Gets the Managed Service Identity specific Active Directory tenant ID assigned to the
            storage account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Update#IWithNetworkAccess#WithoutIpAddressAccess(System.String)">
            <summary>
            Specifies that previously allowed access from specific ip address should be removed.
            </summary>
            <param name="ipAddress">The ip address.</param>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Update#IWithNetworkAccess#WithoutReadAccessToMetricsFromAnyNetwork">
            <summary>
            Specifies that previously added read access exception to the storage metrics from any network
            should be removed.
            </summary>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Update#IWithNetworkAccess#WithAccessFromIpAddressRange(System.String)">
            <summary>
            Specifies that access to the storage account from a specific ip range should be allowed.
            </summary>
            <param name="ipAddressCidr">The ip address range expressed in cidr format.</param>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Update#IWithNetworkAccess#WithAccessFromSelectedNetworks">
            <summary>
            Specifies that by default access to storage account should be denied from
            all networks except from those networks specified via
            WithNetworkAccess.withAccessFromNetworkSubnet(String),
            WithNetworkAccess.withAccessFromIpAddress(String) and
            WithNetworkAccess.withAccessFromIpAddressRange(String).
            </summary>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Update#IWithNetworkAccess#WithoutReadAccessToLoggingFromAnyNetwork">
            <summary>
            Specifies that previously added read access exception to the storage logging from any network
            should be removed.
            </summary>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Update#IWithNetworkAccess#WithReadAccessToMetricsFromAnyNetwork">
            <summary>
            Specifies that read access to the storage metrics should be allowed from any network.
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Update#IWithNetworkAccess#WithAccessFromIpAddress(System.String)">
            <summary>
            Specifies that access to the storage account from a specific ip address should be allowed.
            </summary>
            <param name="ipAddress">The ip address.</param>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Update#IWithNetworkAccess#WithAccessFromAzureServices">
            <summary>
            Specifies that access to the storage account should be allowed from applications running on
            Microsoft Azure services.
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Update#IWithNetworkAccess#WithoutNetworkSubnetAccess(System.String)">
            <summary>
            Specifies that previously allowed access from specific virtual network subnet should be removed.
            </summary>
            <param name="subnetId">The virtual network subnet id.</param>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Update#IWithNetworkAccess#WithoutIpAddressRangeAccess(System.String)">
            <summary>
            Specifies that previously allowed access from specific ip range should be removed.
            </summary>
            <param name="ipAddressCidr">The ip address range expressed in cidr format.</param>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Update#IWithNetworkAccess#WithReadAccessToLogEntriesFromAnyNetwork">
            <summary>
            Specifies that read access to the storage logging should be allowed from any network.
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Update#IWithNetworkAccess#WithAccessFromNetworkSubnet(System.String)">
            <summary>
            Specifies that access to the storage account from a specific virtual network
            subnet should be allowed.
            </summary>
            <param name="subnetId">The virtual network subnet id.</param>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Update#IWithNetworkAccess#WithoutAccessFromAzureServices">
            <summary>
            Specifies that previously added access exception to the storage account from application
            running on azure should be removed.
            </summary>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Update#IWithNetworkAccess#WithAccessFromAllNetworks">
            <summary>
            Specifies that by default access to storage account should be allowed from
            all networks.
            </summary>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Definition#IWithNetworkAccess#WithAccessFromIpAddressRange(System.String)">
            <summary>
            Specifies that access to the storage account from the specific ip range should be allowed.
            </summary>
            <param name="ipAddressCidr">The ip address range expressed in cidr format.</param>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Definition#IWithNetworkAccess#WithAccessFromSelectedNetworks">
            <summary>
            Specifies that by default access to storage account should be denied from
            all networks except from those networks specified via
            WithNetworkAccess.withAccessFromNetworkSubnet(String)
            WithNetworkAccess.withAccessFromIpAddress(String) and
            WithNetworkAccess.withAccessFromIpAddressRange(String).
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Definition#IWithNetworkAccess#WithReadAccessToMetricsFromAnyNetwork">
            <summary>
            Specifies that read access to the storage metrics should be allowed from any network.
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Definition#IWithNetworkAccess#WithAccessFromIpAddress(System.String)">
            <summary>
            Specifies that access to the storage account from the specific ip address should be allowed.
            </summary>
            <param name="ipAddress">The ip address.</param>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Definition#IWithNetworkAccess#WithAccessFromAzureServices">
            <summary>
            Specifies that access to the storage account should be allowed from applications running
            on Microsoft Azure services.
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Definition#IWithNetworkAccess#WithReadAccessToLogEntriesFromAnyNetwork">
            <summary>
            Specifies that read access to the storage logging should be allowed from any network.
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Definition#IWithNetworkAccess#WithAccessFromNetworkSubnet(System.String)">
            <summary>
            Specifies that access to the storage account from the specific virtual network subnet should be allowed.
            </summary>
            <param name="subnetId">The virtual network subnet id.</param>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Definition#IWithNetworkAccess#WithAccessFromAllNetworks">
            <summary>
            Specifies that by default access to storage account should be allowed from all networks.
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Definition#IWithHns#WithHnsEnabled(System.Boolean)">
            <summary>
            Specifies whether Hns is enabled for this storage account.
            </summary>
            <param name="enabled">Whether Hns will be enabled or not</param>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Definition#IWithAzureFilesAadIntegration#WithAzureFilesAadIntegrationEnabled(System.Boolean)">
            <summary>
            Specifies whether Azure files aad integration is enabled for this storage account.
            </summary>
            <param name="enabled">Whether Azure files aad integration will be enabled or not</param>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Update#IWithUpgrade#UpgradeToGeneralPurposeAccountKindV2">
            <summary>
            Gets Specifies that the storage account should be upgraded to V2 kind.
            </summary>
            <summary>
            Gets the next stage of storage account update.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Update#IWithEncryptionBeta#WithFileEncryption">
            <summary>
            Enables encryption for file service.
            </summary>
            <return>He next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Update#IWithEncryptionBeta#WithoutFileEncryption">
            <summary>
            Disables encryption for file service.
            </summary>
            <return>He next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Update#IWithEncryptionBeta#WithBlobEncryption">
            <summary>
            Enables encryption for blob service.
            </summary>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Update#IWithEncryptionBeta#WithoutBlobEncryption">
            <summary>
            Disables encryption for blob service.
            </summary>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Update#IWithEncryptionBeta#WithEncryptionKeyFromKeyVault(System.String,System.String,System.String)">
            <summary>
            Specifies the KeyVault key to be used as key for encryption.
            </summary>
            <param name="keyVaultUri">The uri to KeyVault.</param>
            <param name="keyName">The KeyVault key name.</param>
            <param name="keyVersion">The KeyVault key version.</param>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Definition#IWithEncryptionBeta#WithFileEncryption">
            <summary>
            Specifies that encryption needs be enabled for file service.
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Definition#IWithEncryptionBeta#WithoutFileEncryption">
            <summary>
            Disables encryption for file service.
            </summary>
            <return>He next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Definition#IWithEncryptionBeta#WithBlobEncryption">
            <summary>
            Specifies that encryption needs be enabled for blob service.
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Definition#IWithEncryptionBeta#WithoutBlobEncryption">
            <summary>
            Disables encryption for blob service.
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Definition#IWithEncryptionBeta#WithEncryptionKeyFromKeyVault(System.String,System.String,System.String)">
            <summary>
            Specifies the KeyVault key to be used as encryption key.
            </summary>
            <param name="keyVaultUri">The uri to KeyVault.</param>
            <param name="keyName">The KeyVault key name.</param>
            <param name="keyVersion">The KeyVault key version.</param>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Definition#IWithGeneralPurposeAccountKind#WithGeneralPurposeAccountKindV2">
            <summary>
            Specifies the storage account kind to be "StorageV2", the kind for
            general purposes.
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Update#IWithManagedServiceIdentityBeta#WithSystemAssignedManagedServiceIdentity">
            <summary>
            Specifies that implicit managed service identity (MSI) needs to be enabled.
            </summary>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Definition#IWithManagedServiceIdentityBeta#WithSystemAssignedManagedServiceIdentity">
            <summary>
            Specifies that implicit managed service identity (MSI) needs to be enabled.
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Update#IWithAccessTraffic#WithHttpAndHttpsTraffic">
            <summary>
            Specifies that both http and https traffic should be allowed to storage account.
            </summary>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Update#IWithAccessTraffic#WithOnlyHttpsTraffic">
            <summary>
            Specifies that only https traffic should be allowed to storage account.
            </summary>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Definition#IWithAccessTraffic#WithOnlyHttpsTraffic">
            <summary>
            Specifies that only https traffic should be allowed to storage account.
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Definition#IWithSkuBeta#WithSku(Microsoft.Azure.Management.Storage.Fluent.StorageAccountSkuType)">
            <summary>
            Specifies the sku of the storage account.
            </summary>
            <param name="sku">The sku.</param>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Update#IWithCustomDomain#WithCustomDomain(Microsoft.Azure.Management.Storage.Fluent.Models.CustomDomain)">
            <summary>
            Specifies the user domain assigned to the storage account.
            </summary>
            <param name="customDomain">The user domain assigned to the storage account.</param>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Update#IWithCustomDomain#WithCustomDomain(System.String)">
            <summary>
            Specifies the user domain assigned to the storage account.
            </summary>
            <param name="name">The custom domain name, which is the CNAME source.</param>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Update#IWithCustomDomain#WithCustomDomain(System.String,System.Boolean)">
            <summary>
            Specifies the user domain assigned to the storage account.
            </summary>
            <param name="name">The custom domain name, which is the CNAME source.</param>
            <param name="useSubDomain">Whether indirect CName validation is enabled.</param>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Definition#IWithCustomDomain#WithCustomDomain(Microsoft.Azure.Management.Storage.Fluent.Models.CustomDomain)">
            <summary>
            Specifies the user domain assigned to the storage account.
            </summary>
            <param name="customDomain">The user domain assigned to the storage account.</param>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Definition#IWithCustomDomain#WithCustomDomain(System.String)">
            <summary>
            Specifies the user domain assigned to the storage account.
            </summary>
            <param name="name">The custom domain name, which is the CNAME source.</param>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Definition#IWithCustomDomain#WithCustomDomain(System.String,System.Boolean)">
            <summary>
            Specifies the user domain assigned to the storage account.
            </summary>
            <param name="name">The custom domain name, which is the CNAME source.</param>
            <param name="useSubDomain">Whether indirect CName validation is enabled.</param>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#ResourceActions#IRefreshable{Microsoft#Azure#Management#Storage#Fluent#IStorageAccount}#RefreshAsync(System.Threading.CancellationToken)">
            <summary>
            Refreshes the resource to sync with Azure.
            </summary>
            <return>The Observable to refreshed resource.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Definition#IWithCreateAndAccessTier#WithAccessTier(Microsoft.Azure.Management.Storage.Fluent.Models.AccessTier)">
            <summary>
            Specifies the access tier used for billing.
            Access tier cannot be changed more than once every 7 days (168 hours).
            Access tier cannot be set for StandardLRS, StandardGRS, StandardRAGRS,
            or PremiumLRS account types.
            </summary>
            <param name="accessTier">The access tier value.</param>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.#ctor(System.String,Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner,Microsoft.Azure.Management.Storage.Fluent.IStorageManager)">
            GENMHASH:9EC86FDAF9C3238B45EB0EE4355F4919:01A8E19E4477D51C1F8BB7C63F151C69
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.AccountStatuses">
            GENMHASH:314904A5E85B219428D83117662B69FD:F7D362F18E06781D864DECF6CC7D3C61
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Kind">
            GENMHASH:C4C0D4751CA4E1904C31CE6DF0B02AC3:B5986EB96489F714DC052E1136F06A45
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.CreationTime">
            GENMHASH:BCE4AA46C905DCE36E6D5BDD93BA93B0:1B56C35879CE652985BD4F328B841261
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.CustomDomain">
            GENMHASH:13C190C95339C5E47A33E6FC4C200B03:5E23174652AE3CE52750F1DC01FB1134
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.LastGeoFailoverTime">
            GENMHASH:D0AE63FDB5966BAADB801257491052D1:E5706C7734A0BD35091288A8B0D51407
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.ProvisioningState">
            GENMHASH:99D5BF64EA8AA0E287C9B6F77AAD6FC4:220D4662AAC7DF3BEFAF2B253278E85C
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.EndPoints">
            GENMHASH:55B42F94DE82BCEA956E2090896DCEA5:93EB9B10265EA252D67B32BBB824A1F6
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Encryption">
            GENMHASH:C7B3D3963622074C2FD00EB9A2E0FE72:11DD8AD22561ECD1652BDB11C9699DD1
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.EncryptionKeySource">
            GENMHASH:E3CB6E557BDC02538C5A6963772F3FEF:15D05D69CDC082DB89A322578DD08FE1
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.EncryptionStatuses">
            GENMHASH:26FB96D5CAED2DAC6A25B7684BA6EA62:EA8D98221847758B674F32A5F6BA8D4E
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.AccessTier">
            GENMHASH:F740873A801629829EA1C3C98F4FDDC4:ACAFFE3955CCFBD0C2BC6D268AECA2BA
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.GetKeys">
            GENMHASH:E4DFA7EA15F8324FB60C810D0C96D2FF:1BCD5CF569F11AB6F798D4F3A5BFC786
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.GetKeysAsync(System.Threading.CancellationToken)">
            GENMHASH:2751D8683222AD34691166D915065302:626481EC1E21C06AD0B6BDD35321AA29
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.RegenerateKey(System.String)">
            GENMHASH:FE5C90217FF36474FA8DE7E91403E40F:8A9D1B7CB45D0ABAC76D65E99FADA580
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.RegenerateKeyAsync(System.String,System.Threading.CancellationToken)">
            GENMHASH:AC9981EE195A3F3ECFFF4F080A6FEAAD:0AE932BB7FDBF07328B9F81662B43B8C
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.RefreshAsync(System.Threading.CancellationToken)">
            GENMHASH:5A2D79502EDA81E37A36694062AEDC65:F43E8F467DCA84E8666ED727725A26A8
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.GetInnerAsync(System.Threading.CancellationToken)">
            GENMHASH:5AD91481A0966B059A478CD4E9DD9466:59D34F73D07BE052EC4D175FC76C75FF
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.WithSku(Microsoft.Azure.Management.Storage.Fluent.Models.SkuName)">
            GENMHASH:B5E3D903BDA1F2A62441339A3042D8F4:39725B0498CCC3701985F13AE17C0DB9
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.WithBlobStorageAccountKind">
            GENMHASH:04DD7C0A29E2A433420E3CC1BCC83642:AE8E0FE7D34A8D01F4AED46E07861F2F
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.WithGeneralPurposeAccountKind">
            GENMHASH:A3DE4AE524C4F886153A43EE5DD7157A:ECF5D7B6B3EF47B86D11FDF931EFFD89
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.WithEncryption">
            GENMHASH:56847EFF91F827802715E0B549682639:A52F88293839228BBEBEEC9EB4D0DB68
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.WithoutEncryption">
            GENMHASH:7A1BAFE758BD50E4AF6B50ADFDAD2EF5:F90635EB7EEC5820E29B2722F77122F8
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.Update">
            GENMHASH:6BCE517E09457FF033728269C8936E64:D26CBA1CFC05445E2A90F41690FC5CB3
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.WithCustomDomain(Microsoft.Azure.Management.Storage.Fluent.Models.CustomDomain)">
            GENMHASH:C6CC40946571810DF92A3D04D369CBCD:391ADF63D3B3B254E14435035F093D3D
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.WithCustomDomain(System.String)">
            GENMHASH:870B1F6CF318C295B15B16948090E5A0:8CB56B0910716CE2C6BEC9D228235089
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.WithCustomDomain(System.String,System.Boolean)">
            GENMHASH:FFCBE36D39C79DC1A7BAEB75300E5C0B:7D6B565DFE17585F8E3B4BB3D13BDD7A
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.WithAccessTier(Microsoft.Azure.Management.Storage.Fluent.Models.AccessTier)">
            GENMHASH:F3C7D5F595E480B52B33BC7ACD704928:6B5BD9106155829D3669430155DCDD3B
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.UpdateResourceAsync(System.Threading.CancellationToken)">
            GENMHASH:507A92D4DCD93CE9595A78198DEBDFCF:173D84E645D15368413A8D483FE286BF
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.CreateResourceAsync(System.Threading.CancellationToken)">
            GENMHASH:0202A00A1DCF248D2647DBDBEF2CA865:8F7656658E1EF4B6E2C2F36AD013828C
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.WithGeneralPurposeAccountKindV2">
            GENMHASH:0782D0F11E3B424FF95354F9773F8768:4EB94A70A7472288B3D1E6FA290874EE
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.WithoutBlobEncryption">
            GENMHASH:A4FFE5B248CECEBCF1538195316501A2:CCC3BA394841F19A499657C5B54F4608
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.WithAccessFromSelectedNetworks">
            GENMHASH:E91671491194D4DE7AC3C8A56BE01F87:6D6C0D46C27765D3AFDB60319534D072
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.WithBlobEncryption">
            GENMHASH:01ACF44C50C59F86A43DC2A9B3977F04:322E944F4F0257EED0811C662A4BB65E
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.WithAccessFromNetworkSubnet(System.String)">
            GENMHASH:A27EB73264D76B7A45B1F3A10FBC3C71:0AE67E88364675BC0080FB2F1D73B90B
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.CanAccessFromAzureServices">
            GENMHASH:3872F883CE34060251486AD613265A9D:7B252648094C237C0CA4453C8160BA08
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.CanReadMetricsFromAnyNetwork">
            GENMHASH:030DDE9E1AA399E4B7C25223B1F99C60:A0B4F30C967C27CD76D06C595A744C61
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.NetworkSubnetsWithAccess">
            GENMHASH:5D8E21CABBF7FA1B05E1DE0F97141AE5:F784E29F8F04582462AB57328371214C
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.WithEncryptionKeyFromKeyVault(System.String,System.String,System.String)">
            GENMHASH:49CBC3AEB9561B9FB0DC7A1948E99A1E:00E82B7EFF5F157EE219904861FE2344
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.IPAddressRangesWithAccess">
            GENMHASH:4C85CA9C782D47082FD338D5941F42D7:7FA15A669B08B4C8C6C0B8AB021CA488
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.WithoutNetworkSubnetAccess(System.String)">
            GENMHASH:2E99EAA1E93628587B3D73AC7F3EEBC0:153D5C9B12BD32B7BD50116F7562C137
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.IsAccessAllowedFromAllNetworks">
            GENMHASH:0F1094C94F6F0E279562A3D1A380FE42:4CA0CE1947BBD9EDA4A2FDAC76E23057
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.UpgradeToGeneralPurposeAccountKindV2">
            GENMHASH:D1A30C00F76CDDE0348F5944D0EB6344:B49D62AC2A5423D5CC9ABE97ABB2D568
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.WithAccessFromAzureServices">
            GENMHASH:C14D790B4D1B66AF7349EAFCBBEA1C91:022FBB38D6CF761960BA9A37C304D284
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.SystemAssignedManagedServiceIdentityPrincipalId">
            GENMHASH:87673CC4832F4C7743B7F31A22932B78:006EEBF5C60FFF48087E596AA5009028
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.WithSku(Microsoft.Azure.Management.Storage.Fluent.StorageAccountSkuType)">
            GENMHASH:66DAA29A825C045119A8F4AFEB963F9C:770F37FD74925A1180EE8B6AC2112150
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.WithHttpAndHttpsTraffic">
            GENMHASH:EDC6F988FEE2B3931AAAFB28D1C233D0:22984BE7239A6ED410C1A3096E7F5921
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.CanReadLogEntriesFromAnyNetwork">
            GENMHASH:39F9317665E14B578822CE3749ACE22A:CFEA11B8E97856C5DD3E4913EBE449A4
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.WithSystemAssignedManagedServiceIdentity">
            GENMHASH:7F723CF72B72C34A91B63032AF06AECB:4ABE8556FCA26F394CBB1062DEF08544
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.SystemAssignedManagedServiceIdentityTenantId">
            GENMHASH:28F05A97A27982A7F92482B99325EBF3:AE1D120BA1CBBD85816F0BBF8499E8E2
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.WithAccessFromAllNetworks">
            GENMHASH:B9EE029C143C1C09C5669B4A3FBECE62:2C9D16335ED25FB93661206B20DBFA41
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.WithOnlyHttpsTraffic">
            GENMHASH:55BB1382A3EA3FEBBDF95215151F8990:EC2A3550C3FC9D5A9AA0BCF7A70A3716
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.WithAccessFromIpAddress(System.String)">
            GENMHASH:7DB2D011B5CDF195415C6720ACC92AE5:482E38947F67648FBA023601C94F4B47
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.WithAccessFromIpAddressRange(System.String)">
            GENMHASH:0A1DFCA64C9498252BE32BC3BFBE9F4A:4A8B2CAAD11BAA8DA32A64FBF8D1F05C
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.WithoutAccessFromAzureServices">
            GENMHASH:0FB19BD71D35E8BAC2D116947E61A25B:F39C5F9C924B9F87BEBDD6863846F295
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.WithReadAccessToLogEntriesFromAnyNetwork">
            GENMHASH:1DE818A27E19C3570203A965AF1E4473:9CF481E89FC6E9693DDA32E2E66E4780
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.WithoutReadAccessToMetricsFromAnyNetwork">
            GENMHASH:675D6BA74B1BD5A9B8A67B69014F3D7F:77135B4BAB586DE5D2DF55334DB979F4
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.WithFileEncryption">
            GENMHASH:8F0CB7D0D160167569B264A540A0BB4A:E9F85A46428F9258D9FA551AC383C59E
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.WithReadAccessToMetricsFromAnyNetwork">
            GENMHASH:18BC5BF9B6EE1BC9B55B8D4EBCB3B56D:071B91D6CC3A043AF5B0A52BEB68A01C
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.SkuType">
            GENMHASH:9EF4A08D221595621FDCAFD7FD09AFE2:A9B0A04022BFC4614AF74D0C3B8D24B3
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.WithoutReadAccessToLoggingFromAnyNetwork">
            GENMHASH:67CB6A707CF4CE9C04EDC62F0AB0957B:EC6C10E7AC6EAA96BE30D799405C561D
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.WithoutFileEncryption">
            GENMHASH:47814D91B7A8A8F74570591144A25ED7:537F70D4211A4C0BAA4DA9384F300CE7
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.WithoutIpAddressRangeAccess(System.String)">
            GENMHASH:847E4E638739C7FA6EB5C3D39F01D033:439CF90D7EC28B697ACF448240AB7FEE
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.WithoutIpAddressAccess(System.String)">
            GENMHASH:F75CDC99E2E9A344C379CC08F9D4ACBA:1B57F0CF078BDC2FBB69009DCAA738BF
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountImpl.IPAddressesWithAccess">
            GENMHASH:C2F133AE0FC89EEF547B4FFB5C0D4A9A:D697721F4651F53E38F6D4FCD3641956
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsImpl">
             <summary>
             The implementation of StorageAccounts and its parent interfaces.
             </summary>
            GENTHASH:Y29tLm1pY3Jvc29mdC5henVyZS5tYW5hZ2VtZW50LnN0b3JhZ2UuaW1wbGVtZW50YXRpb24uU3RvcmFnZUFjY291bnRzSW1wbA==
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#CollectionActions#ISupportsCreating{Microsoft#Azure#Management#Storage#Fluent#StorageAccount#Definition#IBlank}#Define(System.String)">
            <summary>
            Begins a definition for a new resource.
            This is the beginning of the builder pattern used to create top level resources
            in Azure. The final method completing the definition and starting the actual resource creation
            process in Azure is  Creatable.create().
            Note that the  Creatable.create() method is
            only available at the stage of the resource definition that has the minimum set of input
            parameters specified. If you do not see  Creatable.create() among the available methods, it
            means you have not yet specified all the required input settings. Input settings generally begin
            with the word "with", for example: <code>.withNewResourceGroup()</code> and return the next stage
            of the resource definition, as an interface in the "fluent interface" style.
            </summary>
            <param name="name">The name of the new resource.</param>
            <return>The first stage of the new resource definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageAccounts#CheckNameAvailabilityAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks that account name is valid and is not in use asynchronously.
            </summary>
            <param name="name">The account name to check.</param>
            <return>A representation of the deferred computation of this call, returning whether the name is available and other info if not.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageAccounts#CheckNameAvailability(System.String)">
            <summary>
            Checks that account name is valid and is not in use.
            </summary>
            <param name="name">The account name to check.</param>
            <return>Whether the name is available and other info if not.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsImpl.#ctor(Microsoft.Azure.Management.Storage.Fluent.IStorageManager)">
            GENMHASH:CAF9C60CDF20574430EA950EFF44BAD7:203896CB3A94364B5BCBEC519D7570FE
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsImpl.CheckNameAvailabilityAsync(System.String,System.Threading.CancellationToken)">
            GENMHASH:42E0B61F5AA4A1130D7B90CCBAAE3A5D:818AFE85371661E9A54D33FFEE903112
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsImpl.CheckNameAvailability(System.String)">
            GENMHASH:C4C74C5CA23BE3B4CAFEFD0EF23149A0:B6DE3F3ADD30CF80937F7E47989E73C7
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsImpl.Define(System.String)">
            GENMHASH:8ACFB0E23F5F24AD384313679B65F404:AE7618DEFA52BF6B178D880C65E79670
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsImpl.WrapModel(System.String)">
            GENMHASH:2FE8C4C2D5EAD7E37787838DE0B47D92:2A8077054DAAE50898DF5E1B9FCC9EE9
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsImpl.WrapModel(Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner)">
            GENMHASH:14BC53657DA284C1E6DC963C78A02447:55673621A81743078EBE1EB3331FB9AE
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageSkuImpl">
             <summary>
             The implementation for  StorageSku.
             </summary>
            GENTHASH:Y29tLm1pY3Jvc29mdC5henVyZS5tYW5hZ2VtZW50LnN0b3JhZ2UuaW1wbGVtZW50YXRpb24uU3RvcmFnZVNrdUltcGw=
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageSkuImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageSku#StorageAccountSku">
            <summary>
            Gets the storage account sku type if the sku describes a storage account resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageSkuImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageSku#Name">
            <summary>
            Gets the sku name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageSkuImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageSku#Capabilities">
            <summary>
            Gets the capability information in the specified sku.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageSkuImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageSku#ResourceType">
            <summary>
            Gets the storage resource type that the sku describes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageSkuImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageSku#Restrictions">
            <summary>
            Gets restrictions because of which sku cannot be used.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageSkuImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageSku#Regions">
            <summary>
            Gets the regions that the sku is available.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageSkuImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageSku#Tier">
            <summary>
            Gets the sku tier.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageSkuImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageSku#StorageAccountKind">
            <summary>
            Gets the storage account kind if the sku describes a storage account resource.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageSkuImpl.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.SkuInner)">
            GENMHASH:2DA3D402EF2F4EF1A5D6599913EC4354:65E408C71959AFC55032CE444A61E039
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageSkuImpl.Name">
            GENMHASH:3E38805ED0E7BA3CAEE31311D032A21C:8CC68A07507378BC8AFC6AE910E81D29
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageSkuImpl.Tier">
            GENMHASH:F756CBB3F13EF6198269C107AED6F9A2:9283ED24F5985AB5BC32623F8CD41709
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageSkuImpl.ResourceType">
            GENMHASH:EC2A5EE0E9C0A186CA88677B91632991:77A70E2E33FFD6C176C2F31375AF3701
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageSkuImpl.Regions">
            GENMHASH:59C1E25F0E77F718395079384661872B:B562BFB1C5ECFEB2DC2005E876CE0263
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageSkuImpl.Capabilities">
            GENMHASH:35EB1A31F5F9EE9C1A764577CD186B0D:6040E8BFBA5231929521B137F79766B4
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageSkuImpl.Restrictions">
            GENMHASH:2AE8A9F45F1B5A337F363BAAC701B2FA:92979B49D69FB5877658254B7583522F
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageSkuImpl.StorageAccountKind">
            GENMHASH:8C1B9B2F559CCE4EE634D1CC6864C337:367E3FD4936A3BAE5AE4EDC28C03E765
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageSkuImpl.StorageAccountSku">
            GENMHASH:2F282EC0DA736D13451891CCE3AD259A:062EF7F3A9AFA7EA30A19B31F8DFF818
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageSkusImpl">
             <summary>
             The implementation for  StorageSkus.
             </summary>
            GENTHASH:Y29tLm1pY3Jvc29mdC5henVyZS5tYW5hZ2VtZW50LnN0b3JhZ2UuaW1wbGVtZW50YXRpb24uU3RvcmFnZVNrdXNJbXBs
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageSkusImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#CollectionActions#ISupportsListing{Microsoft#Azure#Management#Storage#Fluent#IStorageSku}#List">
            <summary>
            Lists all the resources of the specified type in the currently selected subscription.
            </summary>
            <return>List of resources.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageSkusImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#CollectionActions#ISupportsListing{Microsoft#Azure#Management#Storage#Fluent#IStorageSku}#ListAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Lists all the resources of the specified type in the currently selected subscription.
            </summary>
            <return>List of resources.</return>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageSkusImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#IHasManager{Microsoft#Azure#Management#Storage#Fluent#IStorageManager}#Manager">
            <summary>
            Gets the manager client of this resource type.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageSkusImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#IHasInner{Microsoft#Azure#Management#Storage#Fluent#ISkusOperations}#Inner">
            GENMHASH:C852FF1A7022E39B3C33C4B996B5E6D6:226463FFB9926F982826109D59B16399
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageSkusImpl.#ctor(Microsoft.Azure.Management.Storage.Fluent.IStorageManager)">
            GENMHASH:9214F7412070763856E97C3FDAD23FE3:7EAB2D725263FF7A98C969FF3A63C592
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageSkusImpl.Manager">
            GENMHASH:B6961E0C7CB3A9659DE0E1489F44A936:168EFDB95EECDB98D4BDFCCA32101AC1
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageSkusImpl.List">
            GENMHASH:7D6013E8B95E991005ED921F493EFCE4:EFF74B68F06CBC4611C3EEE115E1A032
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageSkusImpl.WrapModel(Microsoft.Azure.Management.Storage.Fluent.Models.SkuInner)">
            GENMHASH:28117D4506FD6B9653E07FBD1120F0F0:003BFC8148CD6CF7CA3D305BF153CAAB
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageSkusImpl.ListAsync(System.Boolean,System.Threading.CancellationToken)">
            GENMHASH:7F5BEBF638B801886F5E13E6CCFF6A4E:11D194372CF16B8AF88A146421D05EAF
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.TableServiceEncryptionStatusImpl">
             <summary>
             Implementation of StorageAccountEncryptionStatus for Table service.
             </summary>
            GENTHASH:Y29tLm1pY3Jvc29mdC5henVyZS5tYW5hZ2VtZW50LnN0b3JhZ2UuaW1wbGVtZW50YXRpb24uVGFibGVTZXJ2aWNlRW5jcnlwdGlvblN0YXR1c0ltcGw=
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.TableServiceEncryptionStatusImpl.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionServices)">
            GENMHASH:1BBD5AA11DE417618F6FD5C9F77A4121:8A39EA79F0EAA32E3B9637298A785CD9
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.TableServiceEncryptionStatusImpl.EncryptionService">
            GENMHASH:D97A6A22274011CC9F2DE9E7287AE1CE:710934CB805D465755C619E1C691E1FE
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.TableServiceEncryptionStatusImpl.StorageService">
            GENMHASH:37A0EE464EE2C3F32288E8C35E06F1EA:55CB18B464239801AAD97F01970B3810
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.UsageImpl">
             <summary>
             The implementation of  UsageInner.
             </summary>
            GENTHASH:Y29tLm1pY3Jvc29mdC5henVyZS5tYW5hZ2VtZW50LnN0b3JhZ2UuaW1wbGVtZW50YXRpb24uVXNhZ2VJbXBs
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.UsageImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageUsage#Limit">
            <summary>
            Gets the maximum count of the resources that can be allocated in the
            subscription.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.UsageImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageUsage#Name">
            <summary>
            Gets the name of the type of usage.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.UsageImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageUsage#CurrentValue">
            <summary>
            Gets the current count of the allocated resources in the subscription.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.UsageImpl.Microsoft#Azure#Management#Storage#Fluent#IStorageUsage#Unit">
            <summary>
            Gets the unit of measurement. Possible values include: 'Count',
            'Bytes', 'Seconds', 'Percent', 'CountsPerSecond', 'BytesPerSecond'.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.UsageImpl.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.UsageInner)">
            GENMHASH:2C82132661E1D40D14D20AEB0584B069:C0C35E00AF4E17F141675A2C05C7067B
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.UsageImpl.Unit">
            GENMHASH:98D67B93923AC46ECFE338C62748BCCB:D1F0AC3814BC079D6D64A1420781A355
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.UsageImpl.Limit">
            GENMHASH:9D196E486CC1E35756FD0BEDAB3F3BE4:A17BF262D4289291AFE4CC9415BA443D
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.UsageImpl.Name">
            GENMHASH:3E38805ED0E7BA3CAEE31311D032A21C:0EDBC6F12844C2F2056BFF916F51853B
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.UsageImpl.CurrentValue">
            GENMHASH:4CC577A7C618816C07F6CE452B96D1E6:B99E952C0969423EA5E48127FF2189C7
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.UsagesImpl">
             <summary>
             The implementation of  Usages.
             </summary>
            GENTHASH:Y29tLm1pY3Jvc29mdC5henVyZS5tYW5hZ2VtZW50LnN0b3JhZ2UuaW1wbGVtZW50YXRpb24uVXNhZ2VzSW1wbA==
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.UsagesImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#CollectionActions#ISupportsListing{Microsoft#Azure#Management#Storage#Fluent#IStorageUsage}#List">
            <summary>
            Lists all the resources of the specified type in the currently selected subscription.
            </summary>
            <return>List of resources.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.UsagesImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#CollectionActions#ISupportsListing{Microsoft#Azure#Management#Storage#Fluent#IStorageUsage}#ListAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Lists all the resources of the specified type in the currently selected subscription.
            </summary>
            <return>List of resources.</return>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.UsagesImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#IHasManager{Microsoft#Azure#Management#Storage#Fluent#IStorageManager}#Manager">
            <summary>
            Gets the manager client of this resource type.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.UsagesImpl.#ctor(Microsoft.Azure.Management.Storage.Fluent.IStorageManager)">
            GENMHASH:35D07311D3F5A0FC20A86A7B024BE1D1:FCBE9313644315745EDD2396965C2FE2
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.UsagesImpl.List">
            GENMHASH:7D6013E8B95E991005ED921F493EFCE4:50D821C2930D637FC2173CD8C27AF5F7
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.UsagesImpl.ListAsync(System.Boolean,System.Threading.CancellationToken)">
            GENMHASH:7F5BEBF638B801886F5E13E6CCFF6A4E:FF27DF14BEE91BED69598A874F25301A
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.UsagesImpl.WrapModel(Microsoft.Azure.Management.Storage.Fluent.Models.UsageInner)">
            GENMHASH:438AA0AEE9E5AB3F7FB0CB3404AB0062:36C68AF6A66967842C933E2D8D22EACE
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.IPolicyRule">
            <summary>
            An immutable client-side representation of a rule in an Azure Management Policy.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IPolicyRule.ActionsOnBaseBlob">
            <summary>
            Gets an object describing the actions to take on the filtered base blobs in this rule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IPolicyRule.ActionsOnSnapShot">
            <summary>
            Gets an object describing the actions to take on the filtered snapshot in this rule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IPolicyRule.BlobTypesToFilterFor">
            <summary>
            Gets an unmodifiable list of the blob types this rule will apply for.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IPolicyRule.DaysAfterBaseBlobModificationUntilArchiving">
            <summary>
            Gets the number of days after a filtered base blob is last modified when the tier to archive action is enacted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IPolicyRule.DaysAfterBaseBlobModificationUntilCooling">
            <summary>
            Gets the number of days after a filtered base blob is last modified when the tier to cool action is enacted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IPolicyRule.DaysAfterBaseBlobModificationUntilDeleting">
            <summary>
            Gets the number of days after a filtered base blob is last modified when the delete action is enacted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IPolicyRule.DaysAfterSnapShotCreationUntilDeleting">
            <summary>
            Gets the number of days after a filtered snapshot is created when the delete action is enacted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IPolicyRule.DeleteActionOnBaseBlobEnabled">
            <summary>
            Gets whether there is a delete action specified for the filtered base blobs in this rule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IPolicyRule.DeleteActionOnSnapShotEnabled">
            <summary>
            Gets whether there is a delete action specified for the filtered snapshots in this rule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IPolicyRule.Name">
            <summary>
            Gets the name of the rule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IPolicyRule.PrefixesToFilterFor">
            <summary>
            Gets an unmodifiable list of the prefixes of the blob types this rule will apply for.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IPolicyRule.TierToArchiveActionOnBaseBlobEnabled">
            <summary>
            Gets whether there is a tier to archive action specified for the filtered base blobs in this rule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IPolicyRule.TierToCoolActionOnBaseBlobEnabled">
            <summary>
            Gets whether there is a tier to cool action specified for the filtered base blobs in this rule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IPolicyRule.Type">
            <summary>
            Gets the type of the rule.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount">
            <summary>
            An immutable client-side representation of an Azure storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount.CreationTime">
            <summary>
            Gets the creation date and time of the storage account in UTC.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount.GetKeysAsync(System.Threading.CancellationToken)">
            <summary>
            Fetch the up-to-date access keys from Azure for this storage account asynchronously.
            </summary>
            <return>A representation of the deferred computation of this call, returning the access keys.</return>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount.AccountStatuses">
            <summary>
            Gets the status indicating whether the primary and secondary location of
            the storage account is available or unavailable. Possible values include:
            'Available', 'Unavailable'.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount.AccessTier">
            <summary>
            Gets access tier used for billing. Access tier cannot be changed more
            than once every 7 days (168 hours). Access tier cannot be set for
            StandardLRS, StandardGRS, StandardRAGRS, or PremiumLRS account types.
            Possible values include: 'Hot', 'Cool'.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount.EncryptionStatuses">
            <summary>
            Gets the encryption statuses indexed by storage service type.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount.Encryption">
            <return>Gets the encryption settings on the account.</return>
            <summary>
            Deprecated use StorageAccount.EncryptionKeySource, StorageAccount.encryptionStatuses instead.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount.RegenerateKey(System.String)">
            <summary>
            Regenerates the access keys for this storage account.
            </summary>
            <param name="keyName">If the key name.</param>
            <return>The generated access keys for this storage account.</return>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount.EndPoints">
            <summary>
            Gets the URLs that are used to perform a retrieval of a public blob,
            queue or table object. Note that StandardZRS and PremiumLRS accounts
            only return the blob endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount.Kind">
            <summary>
            Gets the kind of the storage account. Possible values are 'Storage',
            'BlobStorage'.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount.LastGeoFailoverTime">
            <summary>
            Gets the timestamp of the most recent instance of a failover to the
            secondary location. Only the most recent timestamp is retained. This
            element is not returned if there has never been a failover instance.
            Only available if the accountType is StandardGRS or StandardRAGRS.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount.ProvisioningState">
            <summary>
            Gets the status of the storage account at the time the operation was
            called. Possible values include: 'Creating', 'ResolvingDNS',
            'Succeeded'.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount.GetKeys">
            <summary>
            Fetch the up-to-date access keys from Azure for this storage account.
            </summary>
            <return>The access keys for this storage account.</return>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount.CustomDomain">
            <summary>
            Gets the user assigned custom domain assigned to this storage account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount.RegenerateKeyAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Regenerates the access keys for this storage account asynchronously.
            </summary>
            <param name="keyName">If the key name.</param>
            <return>A representation of the deferred computation of this call, returning the regenerated access key.</return>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount.EncryptionKeySource">
            <summary>
            Gets the source of the key used for encryption.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount.AzureFilesAadIntegration">
            <summary>
            Gets whether Azure files AAD integration is enabled on the storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount.HnsEnabled">
            <summary>
            Gets whether Hns is enabled on the storage account.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountBeta">
            <summary>
            An immutable client-side representation of an Azure storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountBeta.SystemAssignedManagedServiceIdentityTenantId">
            <summary>
            Gets the Managed Service Identity specific Active Directory tenant ID assigned to the
            storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountBeta.CanAccessFromAzureServices">
            <summary>
            Gets Checks storage account can be accessed from applications running on azure.
            </summary>
            <summary>
            Gets true if storage can be accessed from application running on azure, false otherwise.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountBeta.CanReadMetricsFromAnyNetwork">
            <summary>
            Gets Checks storage metrics can be read from any network.
            </summary>
            <summary>
            Gets true if storage metrics can be read from any network, false otherwise.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountBeta.NetworkSubnetsWithAccess">
            <summary>
            Gets the list of resource id of virtual network subnet having access to the storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountBeta.IPAddressRangesWithAccess">
            <summary>
            Gets the list of ip address ranges having access to the storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountBeta.SkuType">
            <summary>
            Gets the sku of this storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountBeta.IsAccessAllowedFromAllNetworks">
            <summary>
            Gets true if authenticated application from any network is allowed to access the
            storage account, false if only application from whitelisted network (subnet, ip address,
            ip address range) can access the storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountBeta.SystemAssignedManagedServiceIdentityPrincipalId">
            <summary>
            Gets the Managed Service Identity specific Active Directory service principal ID assigned
            to the storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountBeta.CanReadLogEntriesFromAnyNetwork">
            <summary>
            Gets Checks storage log entries can be read from any network.
            </summary>
            <summary>
            Gets true if storage log entries can be read from any network, false otherwise.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountBeta.IPAddressesWithAccess">
            <summary>
            Gets the list of ip addresses having access to the storage account.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountEncryptionStatus">
            <summary>
            Type representing the encryption status of a storage service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountEncryptionStatus.StorageService">
            <summary>
            Gets the storage service type.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountEncryptionStatus.LastEnabledTime">
            <summary>
            Gets rough estimate of the date/time when the encryption was last enabled, null if
            the encryption is disabled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountEncryptionStatus.IsEnabled">
            <summary>
            Gets true if the encryption is enabled for the service false otherwise.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.IStorageAccounts">
            <summary>
            Entry point for storage accounts management API.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccounts.CheckNameAvailabilityAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks that account name is valid and is not in use asynchronously.
            </summary>
            <param name="name">The account name to check.</param>
            <return>A representation of the deferred computation of this call, returning whether the name is available and other info if not.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccounts.CheckNameAvailability(System.String)">
            <summary>
            Checks that account name is valid and is not in use.
            </summary>
            <param name="name">The account name to check.</param>
            <return>Whether the name is available and other info if not.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccounts.createSasTokenAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters)">
            <summary>
            Creates an Sas token for the storage account asynchronously.
            </summary>
            <param name="resourceGroupName">the name of the account's resource group</param>
            <param name="accountName">the account name to check</param>
            <param name="parameters">the parameters to list service SAS credentials of a specific resource</param>
            <returns>the created SAS token</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccounts.createSasToken(System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters)">
            <summary>
            Creates an Sas token for the storage account.
            </summary>
            <param name="resourceGroupName">the name of the account's resource group</param>
            <param name="accountName">the account name to check</param>
            <param name="parameters">the parameters to list service SAS credentials of a specific resource</param>
            <returns>the created SAS token</returns>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.IStorageSku">
            <summary>
            Type representing sku for an Azure storage resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageSku.Regions">
            <summary>
            Gets the regions that the sku is available.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageSku.Capabilities">
            <summary>
            Gets the capability information in the specified sku.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageSku.Tier">
            <summary>
            Gets the sku tier.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageSku.StorageAccountKind">
            <summary>
            Gets the storage account kind if the sku describes a storage account resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageSku.Name">
            <summary>
            Gets the sku name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageSku.Restrictions">
            <summary>
            Gets restrictions because of which sku cannot be used.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageSku.StorageAccountSku">
            <summary>
            Gets the storage account sku type if the sku describes a storage account resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageSku.ResourceType">
            <summary>
            Gets the storage resource type that the sku describes.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.IStorageSkus">
            <summary>
            Entry point to storage service SKUs.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.IStorageUsage">
            <summary>
            An immutable client-side representation of an Azure storage resource usage info object.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageUsage.Unit">
            <summary>
            Gets the unit of measurement. Possible values include: 'Count',
            'Bytes', 'Seconds', 'Percent', 'CountsPerSecond', 'BytesPerSecond'.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageUsage.Limit">
            <summary>
            Gets the maximum count of the resources that can be allocated in the
            subscription.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageUsage.Name">
            <summary>
            Gets the name of the type of usage.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageUsage.CurrentValue">
            <summary>
            Gets the current count of the allocated resources in the subscription.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.IUsages">
            <summary>
            Entry point for storage resource usage management API.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Definition.IWithStorageAccount">
            <summary>
            The stage of the managementpolicy definition allowing to specify StorageAccount.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Definition.IWithStorageAccount.WithExistingStorageAccount(System.String,System.String)">
            <summary>
            Specifies resourceGroupName, accountName.
            </summary>
            <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
            <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
            <return>The next definition stage.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Definition.IWithRule">
            <summary>
            The stage of the management policy definition allowing to specify a rule to add to the management policy.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Definition.IWithRule.DefineRule(System.String)">
            <summary>
            The function that defines a rule to attach to this policy.
            </summary>
            <param name="name">The name of the rule we are going to define.</param>
            <return>The next definition stage.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Definition.IBlank">
            <summary>
            The first stage of a ManagementPolicy definition.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Definition.IDefinition">
            <summary>
            The entirety of the ManagementPolicy definition.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Definition.IWithCreate">
            <summary>
            The stage of the definition which contains all the minimum required inputs for
            the resource to be created (via  WithCreate.create()), but also allows
            for any other optional settings to be specified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Update.IRule">
            <summary>
            The stage of the management policy update allowing to update a rule.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Update.IRule.UpdateRule(System.String)">
            <summary>
            The function that updates a rule whose name is the inputted parameter name.
            </summary>
            <param name="name">The name of the rule to be updated.</param>
            <return>The next stage of the management policy rule update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Update.IRule.WithoutRule(System.String)">
            <summary>
            The function that removes a rule whose name is the inputted parameter name.
            </summary>
            <param name="name">The name of the rule to be removed.</param>
            <return>The next stage of the management policy update.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Update.IUpdate">
            <summary>
            The template for a ManagementPolicy update operation, containing all the settings that can be modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Update.IWithPolicy">
            <summary>
            The stage of the management policy update allowing to specify Policy.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Update.IWithPolicy.WithPolicy(Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySchema)">
            <summary>
            Specifies policy.
            </summary>
            <param name="policy">The Storage Account ManagementPolicy, in JSON format. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.</param>
            <return>The next update stage.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithPolicyRuleType">
            <summary>
            The stage of the management policy rule definition allowing to specify the type of the rule.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithPolicyRuleType.WithLifecycleRuleType">
            <summary>
            The function that specifies Lifecycle as the type of the management policy rule.
            </summary>
            <return>The next stage of the management policy rule definition.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IDefinition">
            <summary>
            Container interface for all of the definitions related to a rule in a management policy.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IPrefixActionFork">
            <summary>
            The stage of the management policy rule definition allowing input an optional blob prefix to filter for before
            specifying the actions.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithPrefixesToFilterFor">
            <summary>
            The stage of the management policy rule definition allowing the specify the prefixes for the blobs that the rule will apply to.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithPrefixesToFilterFor.WithPrefixesToFilterFor(System.Collections.Generic.IList{System.String})">
            <summary>
            The function that specifies the list of prefixes for the blobs that the rule will apply to.
            </summary>
            <param name="prefixes">A list of the prefixes for the blobs that the rule will apply to.</param>
            <return>The next stage of the management policy rule definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithPrefixesToFilterFor.WithPrefixToFilterFor(System.String)">
            <summary>
            The function that specifies a prefix for the blobs that the rule will apply to.
            </summary>
            <param name="prefix">A prefix for the blobs that the rule will apply to.</param>
            <return>The next stage of the management policy rule definition.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithBlobTypesToFilterFor">
            <summary>
            The stage of the management policy rule definition allowing to specify the blob types that the rule will apply to.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithBlobTypesToFilterFor.WithBlobTypesToFilterFor(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.BlobTypes})">
            <summary>
            The function that specifies the list of blob types that the rule will apply to.
            </summary>
            <param name="blobTypes">A list of the types of blob the rule will apply to.</param>
            <return>The next stage of the management policy rule definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithBlobTypesToFilterFor.WithBlobTypeToFilterFor(Microsoft.Azure.Management.Storage.Fluent.BlobTypes)">
            <summary>
            The function that specifies a blob type that the rule will apply to.
            </summary>
            <param name="blobType">A blob type that the rule will apply to.</param>
            <return>The next stage of the management policy rule definition.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithRuleActions">
            <summary>
            The stage of the management policy rule definition allowing to specify the actions to perform on the selected blobs.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithRuleActions.WithActionsOnBaseBlob(Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyBaseBlob)">
            <summary>
            The function that specifies all of the actions to apply to selected base blobs.
            </summary>
            <param name="baseBlobActions">An object including all of the actions to apply to selected base blobs.</param>
            <return>The next stage of the management policy rule definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithRuleActions.WithActionsOnSnapShot(Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySnapShot)">
            <summary>
            The function that specifies all of the actions to apply to selected snapshots.
            </summary>
            <param name="snapShotActions">An object including all of the actions to apply to selected snapshots.</param>
            <return>The next stage of the management policy rule definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithRuleActions.WithDeleteActionOnBaseBlob(System.Int32)">
            <summary>
            The function that specifies a delete action on the selected base blobs.
            </summary>
            <param name="daysAfterBaseBlobModificationUntilDeleting">The number of days after a base blob is last modified until it is deleted.</param>
            <return>The next stage of the management policy rule definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithRuleActions.WithDeleteActionOnSnapShot(System.Int32)">
            <summary>
            The function that specifies a delete action on the selected snapshots.
            </summary>
            <param name="daysAfterSnapShotCreationUntilDeleting">The number of days after a snapshot is created until it is deleted.</param>
            <return>The next stage of the management policy rule definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithRuleActions.WithTierToArchiveActionOnBaseBlob(System.Int32)">
            <summary>
            The function that specifies a tier to archive action on the selected base blobs.
            </summary>
            <param name="daysAfterBaseBlobModificationUntilArchiving">The number of days after a base blob is last modified until it is archived.</param>
            <return>The next stage of the management policy rule definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithRuleActions.WithTierToCoolActionOnBaseBlob(System.Int32)">
            <summary>
            The function that specifies a tier to cool action on the selected base blobs.
            </summary>
            <param name="daysAfterBaseBlobModificationUntilCooling">The number of days after a base blob is last modified until it is cooled.</param>
            <return>The next stage of the management policy rule definition.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithPolicyRuleAttachable">
            <summary>
            The stage of the definition which contains all of the minimum required inputs for the resource to be attached,
            but also allows for any other optional settings to be specified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IBlank">
            <summary>
            The first stage of a management policy rule definition.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IWithPrefixesToFilterFor">
            <summary>
            THe stage of the management policy rule update allowing to specify the prefixes for the blobs that the rule will apply to.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IWithPrefixesToFilterFor.WithoutPrefixesToFilterFor">
            <summary>
            The function that clears all blob prefixes so the rule will apply to blobs regardless of prefixes.
            </summary>
            <return>The next stage of the management policy rule update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IWithPrefixesToFilterFor.WithPrefixesToFilterFor(System.Collections.Generic.IList{System.String})">
            <summary>
            The function that specifies the list of prefixes for the blobs that the rule will apply to.
            </summary>
            <param name="prefixes">A list of the prefixes for the blobs that the rule will apply to.</param>
            <return>The next stage of the management policy rule update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IWithPrefixesToFilterFor.WithPrefixToFilterFor(System.String)">
            <summary>
            The function that specifies a prefix for the blobs that the rule will apply to.
            </summary>
            <param name="prefix">A prefix for the blobs that the rule will apply to.</param>
            <return>The next stage of the management policy rule update.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IUpdate">
            <summary>
            Container interface for all of the updates related to a rule in a management policy.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IWithBlobTypesToFilterFor">
            <summary>
            The stage of the management policy rule update allowing to specify the blob types that the rule will apply to.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IWithBlobTypesToFilterFor.WithBlobTypesToFilterFor(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.BlobTypes})">
            <summary>
            The function that specifies the list of blob types that the rule will apply to.
            </summary>
            <param name="blobTypes">A list of the types of blob the rule will apply to.</param>
            <return>The next stage of the management policy rule update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IWithBlobTypesToFilterFor.WithBlobTypeToFilterFor(Microsoft.Azure.Management.Storage.Fluent.BlobTypes)">
            <summary>
            The function that specifies a blob type that the rule will apply to.
            </summary>
            <param name="blobType">A blob type that the rule will apply to.</param>
            <return>The next stage of the management policy rule update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IWithBlobTypesToFilterFor.WithBlobTypeToFilterForRemoved(Microsoft.Azure.Management.Storage.Fluent.BlobTypes)">
            <summary>
            The function that specifies to remove a blob type that the rule will apply to.
            </summary>
            <param name="blobType">The blob type that you wish the rule to no longer apply to.</param>
            <return>The next stage of the management policy rule update.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IWithActions">
            <summary>
            The stage of the management policy rule update allowing to specify the actions to perform on the selected blobs.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IWithActions.UpdateActionsOnBaseBlob(Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyBaseBlob)">
            <summary>
            The function that specifies all of the actions to apply to selected base blobs.
            </summary>
            <param name="baseBlobActions">An object including all of the actions to apply to selected base blobs.</param>
            <return>The next stage of the management policy rule update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IWithActions.UpdateActionsOnSnapShot(Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySnapShot)">
            <summary>
            The function that specifies all of the actions to apply to selected snapshots.
            </summary>
            <param name="snapShotActions">An object including all of the actions to apply to selected snapshots.</param>
            <return>The next stage of the management policy rule update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IWithActions.WithDeleteActionOnBaseBlob(System.Int32)">
            <summary>
            The function that specifies a delete action on the selected base blobs.
            </summary>
            <param name="daysAfterBaseBlobModificationUntilDeleting">The number of days after a base blob is last modified until it is deleted.</param>
            <return>The next stage of the management policy rule update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IWithActions.WithDeleteActionOnSnapShot(System.Int32)">
            <summary>
            The function that specifies a delete action on the selected snapshots.
            </summary>
            <param name="daysAfterSnapShotCreationUntilDeleting">The number of days after a snapshot is created until it is deleted.</param>
            <return>The next stage of the management policy rule update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IWithActions.WithTierToArchiveActionOnBaseBlob(System.Int32)">
            <summary>
            The function that specifies a tier to archive action on the selected base blobs.
            </summary>
            <param name="daysAfterBaseBlobModificationUntilArchiving">The number of days after a base blob is last modified until it is archived.</param>
            <return>The next stage of the management policy rule update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IWithActions.WithTierToCoolActionOnBaseBlob(System.Int32)">
            <summary>
            The function that specifies a tier to cool action on the selected base blobs.
            </summary>
            <param name="daysAfterBaseBlobModificationUntilCooling">The number of days after a base blob is last modified until it is cooled.</param>
            <return>The next stage of the management policy rule update.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithSku">
            <summary>
            The stage of a storage account definition allowing to specify sku.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithSku.WithSku(Microsoft.Azure.Management.Storage.Fluent.Models.SkuName)">
            <summary>
            Specifies the sku of the storage account.
            </summary>
            <deprecated>Use  IWithSku.WithSku(StorageAccountSkuType) instead.</deprecated>
            <param name="skuName">The sku.</param>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithCreateAndAccessTier">
            <summary>
            The stage of storage account definition allowing to set access tier.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithCreateAndAccessTier.WithAccessTier(Microsoft.Azure.Management.Storage.Fluent.Models.AccessTier)">
            <summary>
            Specifies the access tier used for billing.
            Access tier cannot be changed more than once every 7 days (168 hours).
            Access tier cannot be set for StandardLRS, StandardGRS, StandardRAGRS,
            or PremiumLRS account types.
            </summary>
            <param name="accessTier">The access tier value.</param>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithManagedServiceIdentity">
            <summary>
            The stage of a storage account definition allowing to enable implicit managed service identity (MSI).
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithEncryption">
            <summary>
            The stage of a storage account definition allowing to specify encryption settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithEncryption.WithEncryption">
            <summary>
            Specifies that encryption needs be enabled for blob service.
            </summary>
            <deprecated>Use  WithEncryption.WithBlobEncryption() instead.</deprecated>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithAccessTraffic">
            <summary>
            The stage of storage account definition allowing to restrict access protocol.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithAccessTraffic.WithOnlyHttpsTraffic">
            <summary>
            Specifies that only https traffic should be allowed to storage account.
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithGeneralPurposeAccountKind">
            <summary>
            The stage of a storage account definition allowing to specify account kind as general purpose.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithGeneralPurposeAccountKind.WithGeneralPurposeAccountKindV2">
            <summary>
            Specifies the storage account kind to be "StorageV2", the kind for
            general purposes.
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithGeneralPurposeAccountKind.WithGeneralPurposeAccountKind">
            <summary>
            Specifies the storage account kind to be "Storage", the kind for
            general purposes.
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithCustomDomain">
            <summary>
            The stage of a storage account definition allowing to associate custom domain with the account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithCustomDomain.WithCustomDomain(Microsoft.Azure.Management.Storage.Fluent.Models.CustomDomain)">
            <summary>
            Specifies the user domain assigned to the storage account.
            </summary>
            <param name="customDomain">The user domain assigned to the storage account.</param>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithCustomDomain.WithCustomDomain(System.String)">
            <summary>
            Specifies the user domain assigned to the storage account.
            </summary>
            <param name="name">The custom domain name, which is the CNAME source.</param>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithCustomDomain.WithCustomDomain(System.String,System.Boolean)">
            <summary>
            Specifies the user domain assigned to the storage account.
            </summary>
            <param name="name">The custom domain name, which is the CNAME source.</param>
            <param name="useSubDomain">Whether indirect CName validation is enabled.</param>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithNetworkAccess">
            <summary>
            The stage of storage account definition allowing to configure network access settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithNetworkAccess.WithAccessFromNetworkSubnet(System.String)">
            <summary>
            Specifies that access to the storage account from the specific virtual network subnet should be allowed.
            </summary>
            <param name="subnetId">The virtual network subnet id.</param>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithNetworkAccess.WithAccessFromAzureServices">
            <summary>
            Specifies that access to the storage account should be allowed from applications running
            on Microsoft Azure services.
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithNetworkAccess.WithAccessFromIpAddress(System.String)">
            <summary>
            Specifies that access to the storage account from the specific ip address should be allowed.
            </summary>
            <param name="ipAddress">The ip address.</param>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithNetworkAccess.WithAccessFromIpAddressRange(System.String)">
            <summary>
            Specifies that access to the storage account from the specific ip range should be allowed.
            </summary>
            <param name="ipAddressCidr">The ip address range expressed in cidr format.</param>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithNetworkAccess.WithReadAccessToLogEntriesFromAnyNetwork">
            <summary>
            Specifies that read access to the storage logging should be allowed from any network.
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithNetworkAccess.WithReadAccessToMetricsFromAnyNetwork">
            <summary>
            Specifies that read access to the storage metrics should be allowed from any network.
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithNetworkAccess.WithAccessFromSelectedNetworks">
            <summary>
            Specifies that by default access to storage account should be denied from
            all networks except from those networks specified via
            WithNetworkAccess.withAccessFromNetworkSubnet(String)
            WithNetworkAccess.withAccessFromIpAddress(String) and
            WithNetworkAccess.withAccessFromIpAddressRange(String).
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithNetworkAccess.WithAccessFromAllNetworks">
            <summary>
            Specifies that by default access to storage account should be allowed from all networks.
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithHns">
            <summary>
            The stage of storage account definition allowing to configure whether Hns is enabled or not.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithHns.WithHnsEnabled(System.Boolean)">
            <summary>
            Specifies whether Hns is enabled or not.
            </summary>
            <param name="enabled">whether Hns is enabled for the storage account or not</param>
            <returns>The next stage of the storage account definition.</returns>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithAzureFilesAadIntegration">
            <summary>
            The stage of storage account definition allowing to configure network access settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithAzureFilesAadIntegration.WithAzureFilesAadIntegrationEnabled(System.Boolean)">
            <summary>
            Specifies whether Azure files aad integration is enabled or not.
            </summary>
            <param name="enabled">whether Hns is enabled for the storage account or not</param>
            <returns>The next stage of the storage account definition.</returns>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IBlank">
            <summary>
            The first stage of the storage account definition.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithGroup">
            <summary>
            The stage of a storage account definition allowing to specify the resource group.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithCreate">
            <summary>
            A storage account definition with sufficient inputs to create a new
            storage account in the cloud, but exposing additional optional inputs to
            specify.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IDefinition">
            <summary>
            Container interface for all the definitions that need to be implemented.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithBlobStorageAccountKind">
            <summary>
            The stage of a storage account definition allowing to specify account kind as blob storage.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithBlobStorageAccountKind.WithBlobStorageAccountKind">
            <summary>
            Specifies the storage account kind to be "BlobStorage". The access
            tier is defaulted to be "Hot".
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithBlockBlobStorageAccountKind">
            <summary>
            The stage of a storage account definition allowing to specify account kind as block blob storage.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithBlockBlobStorageAccountKind.WithBlockBlobStorageAccountKind">
            <summary>
            Specifies the storage account kind to be "BlockBlobStorage". 
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithFileStorageAccountKind">
            <summary>
            The stage of a storage account definition allowing to specify account kind as file storage.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithFileStorageAccountKind.WithFileStorageAccountKind">
            <summary>
            Specifies the storage account kind to be "FileStorage". 
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithSkuBeta">
            <summary>
            The stage of a storage account definition allowing to specify sku.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithSkuBeta.WithSku(Microsoft.Azure.Management.Storage.Fluent.StorageAccountSkuType)">
            <summary>
            Specifies the sku of the storage account.
            </summary>
            <param name="sku">The sku.</param>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithManagedServiceIdentityBeta">
            <summary>
            The stage of a storage account definition allowing to enable implicit managed service identity (MSI).
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithManagedServiceIdentityBeta.WithSystemAssignedManagedServiceIdentity">
            <summary>
            Specifies that implicit managed service identity (MSI) needs to be enabled.
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithEncryptionBeta">
            <summary>
            The stage of a storage account definition allowing to specify encryption settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithEncryptionBeta.WithEncryptionKeyFromKeyVault(System.String,System.String,System.String)">
            <summary>
            Specifies the KeyVault key to be used as encryption key.
            </summary>
            <param name="keyVaultUri">The uri to KeyVault.</param>
            <param name="keyName">The KeyVault key name.</param>
            <param name="keyVersion">The KeyVault key version.</param>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithEncryptionBeta.WithoutBlobEncryption">
            <summary>
            Disables encryption for blob service.
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithEncryptionBeta.WithFileEncryption">
            <summary>
            Specifies that encryption needs be enabled for file service.
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithEncryptionBeta.WithBlobEncryption">
            <summary>
            Specifies that encryption needs be enabled for blob service.
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithEncryptionBeta.WithoutFileEncryption">
            <summary>
            Disables encryption for file service.
            </summary>
            <return>He next stage of storage account definition.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithCustomDomain">
            <summary>
            The stage of the storage account update allowing to associate custom domain.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithCustomDomain.WithCustomDomain(Microsoft.Azure.Management.Storage.Fluent.Models.CustomDomain)">
            <summary>
            Specifies the user domain assigned to the storage account.
            </summary>
            <param name="customDomain">The user domain assigned to the storage account.</param>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithCustomDomain.WithCustomDomain(System.String)">
            <summary>
            Specifies the user domain assigned to the storage account.
            </summary>
            <param name="name">The custom domain name, which is the CNAME source.</param>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithCustomDomain.WithCustomDomain(System.String,System.Boolean)">
            <summary>
            Specifies the user domain assigned to the storage account.
            </summary>
            <param name="name">The custom domain name, which is the CNAME source.</param>
            <param name="useSubDomain">Whether indirect CName validation is enabled.</param>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithUpgrade.UpgradeToGeneralPurposeAccountKindV2">
            <summary>
            Gets Specifies that the storage account should be upgraded to V2 kind.
            </summary>
            <summary>
            Gets the next stage of storage account update.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithAzureFilesAadIntegration">
            <summary>
            The stage of the storage account update allowing to set whether Azure files aad integration is enabled.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithAzureFilesAadIntegration.WithAzureFilesAadIntegrationEnabled(System.Boolean)">
            <summary>
            Specifies whether Azure files Aad integration will be enabled or not.
            </summary>
            <param name="enabled">Whether Azure files aad integration is enabled or not</param>
            <returns>The next stage of the storage account update.</returns>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IUpdate">
            <summary>
            The template for a storage account update operation, containing all the settings that can be modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithNetworkAccess">
            <summary>
            The stage of storage account update allowing to configure network access.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithNetworkAccess.WithReadAccessToLogEntriesFromAnyNetwork">
            <summary>
            Specifies that read access to the storage logging should be allowed from any network.
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithNetworkAccess.WithoutReadAccessToMetricsFromAnyNetwork">
            <summary>
            Specifies that previously added read access exception to the storage metrics from any network
            should be removed.
            </summary>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithNetworkAccess.WithReadAccessToMetricsFromAnyNetwork">
            <summary>
            Specifies that read access to the storage metrics should be allowed from any network.
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithNetworkAccess.WithAccessFromSelectedNetworks">
            <summary>
            Specifies that by default access to storage account should be denied from
            all networks except from those networks specified via
            WithNetworkAccess.withAccessFromNetworkSubnet(String),
            WithNetworkAccess.withAccessFromIpAddress(String) and
            WithNetworkAccess.withAccessFromIpAddressRange(String).
            </summary>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithNetworkAccess.WithoutNetworkSubnetAccess(System.String)">
            <summary>
            Specifies that previously allowed access from specific virtual network subnet should be removed.
            </summary>
            <param name="subnetId">The virtual network subnet id.</param>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithNetworkAccess.WithAccessFromAllNetworks">
            <summary>
            Specifies that by default access to storage account should be allowed from
            all networks.
            </summary>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithNetworkAccess.WithoutReadAccessToLoggingFromAnyNetwork">
            <summary>
            Specifies that previously added read access exception to the storage logging from any network
            should be removed.
            </summary>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithNetworkAccess.WithAccessFromNetworkSubnet(System.String)">
            <summary>
            Specifies that access to the storage account from a specific virtual network
            subnet should be allowed.
            </summary>
            <param name="subnetId">The virtual network subnet id.</param>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithNetworkAccess.WithAccessFromAzureServices">
            <summary>
            Specifies that access to the storage account should be allowed from applications running on
            Microsoft Azure services.
            </summary>
            <return>The next stage of storage account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithNetworkAccess.WithAccessFromIpAddress(System.String)">
            <summary>
            Specifies that access to the storage account from a specific ip address should be allowed.
            </summary>
            <param name="ipAddress">The ip address.</param>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithNetworkAccess.WithAccessFromIpAddressRange(System.String)">
            <summary>
            Specifies that access to the storage account from a specific ip range should be allowed.
            </summary>
            <param name="ipAddressCidr">The ip address range expressed in cidr format.</param>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithNetworkAccess.WithoutIpAddressRangeAccess(System.String)">
            <summary>
            Specifies that previously allowed access from specific ip range should be removed.
            </summary>
            <param name="ipAddressCidr">The ip address range expressed in cidr format.</param>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithNetworkAccess.WithoutAccessFromAzureServices">
            <summary>
            Specifies that previously added access exception to the storage account from application
            running on azure should be removed.
            </summary>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithNetworkAccess.WithoutIpAddressAccess(System.String)">
            <summary>
            Specifies that previously allowed access from specific ip address should be removed.
            </summary>
            <param name="ipAddress">The ip address.</param>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithEncryption">
            <summary>
            The stage of the storage account update allowing to configure encryption settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithEncryption.WithoutEncryption">
            <summary>
            Disables encryption for blob service.
            </summary>
            <deprecated>Use IWithEncryption.WithoutBlobEncryption() instead.</deprecated>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithEncryption.WithEncryption">
            <summary>
            Enables encryption for blob service.
            </summary>
            <deprecated>Use  WithEncryption.withBlobEncryption() instead.</deprecated>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithAccessTraffic">
            <summary>
            The stage of the storage account update allowing to specify the protocol to be used to access account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithAccessTraffic.WithOnlyHttpsTraffic">
            <summary>
            Specifies that only https traffic should be allowed to storage account.
            </summary>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithAccessTraffic.WithHttpAndHttpsTraffic">
            <summary>
            Specifies that both http and https traffic should be allowed to storage account.
            </summary>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithSku">
            <summary>
            The stage of the storage account update allowing to change the sku.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithSku.WithSku(Microsoft.Azure.Management.Storage.Fluent.Models.SkuName)">
            <summary>
            Specifies the sku of the storage account.
            </summary>
            <deprecated>Use  WithSku.withSku(StorageAccountSkuType) instead.</deprecated>
            <param name="skuName">The sku.</param>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithManagedServiceIdentity">
            <summary>
            The stage of the storage account update allowing to enable managed service identity (MSI).
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithAccessTier">
            <summary>
            A blob storage account update stage allowing access tier to be specified.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithAccessTier.WithAccessTier(Microsoft.Azure.Management.Storage.Fluent.Models.AccessTier)">
            <summary>
            Specifies the access tier used for billing.
            Access tier cannot be changed more than once every 7 days (168 hours).
            Access tier cannot be set for StandardLRS, StandardGRS, StandardRAGRS,
            or PremiumLRS account types.
            </summary>
            <param name="accessTier">The access tier value.</param>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithEncryptionBeta">
            <summary>
            The stage of the storage account update allowing to configure encryption settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithEncryptionBeta.WithEncryptionKeyFromKeyVault(System.String,System.String,System.String)">
            <summary>
            Specifies the KeyVault key to be used as key for encryption.
            </summary>
            <param name="keyVaultUri">The uri to KeyVault.</param>
            <param name="keyName">The KeyVault key name.</param>
            <param name="keyVersion">The KeyVault key version.</param>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithEncryptionBeta.WithoutBlobEncryption">
            <summary>
            Disables encryption for blob service.
            </summary>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithEncryptionBeta.WithFileEncryption">
            <summary>
            Enables encryption for file service.
            </summary>
            <return>He next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithEncryptionBeta.WithBlobEncryption">
            <summary>
            Enables encryption for blob service.
            </summary>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithEncryptionBeta.WithoutFileEncryption">
            <summary>
            Disables encryption for file service.
            </summary>
            <return>He next stage of storage account update.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithSkuBeta">
            <summary>
            The stage of the storage account update allowing to change the sku.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithSkuBeta.WithSku(Microsoft.Azure.Management.Storage.Fluent.StorageAccountSkuType)">
            <summary>
            Specifies the sku of the storage account.
            </summary>
            <param name="sku">The sku.</param>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithManagedServiceIdentityBeta">
            <summary>
            The stage of the storage account update allowing to enable managed service identity (MSI).
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithManagedServiceIdentityBeta.WithSystemAssignedManagedServiceIdentity">
            <summary>
            Specifies that implicit managed service identity (MSI) needs to be enabled.
            </summary>
            <return>The next stage of storage account update.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperations">
            <summary>
            BlobContainersOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperations.#ctor(Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient)">
            <summary>
            Initializes a new instance of the BlobContainersOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperations.Client">
            <summary>
            Gets a reference to the StorageManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all containers and does not support a prefix like data plane. Also
            SRP today does not return continuation token.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.PublicAccess},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a new container under the specified account as described by request
            body. The container resource includes metadata and properties for that
            container. It does not include a list of the blobs contained by the
            container.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='publicAccess'>
            Specifies whether data in the container may be accessed publicly and the
            level of access. Possible values include: 'Container', 'Blob', 'None'
            </param>
            <param name='metadata'>
            A name-value pair to associate with the container as metadata.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.PublicAccess},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates container properties as specified in request body. Properties not
            mentioned in the request will be unchanged. Update fails if the specified
            container doesn't already exist.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='publicAccess'>
            Specifies whether data in the container may be accessed publicly and the
            level of access. Possible values include: 'Container', 'Blob', 'None'
            </param>
            <param name='metadata'>
            A name-value pair to associate with the container as metadata.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets properties of a specified container.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes specified container under its account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperations.SetLegalHoldWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets legal hold tags. Setting the same tag results in an idempotent
            operation. SetLegalHold follows an append pattern and does not clear out
            the existing tags that are not specified in the request.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='tags'>
            Each tag should be 3 to 23 alphanumeric characters and is normalized to
            lower case at SRP.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperations.ClearLegalHoldWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Clears legal hold tags. Clearing the same or non-existent tag results in an
            idempotent operation. ClearLegalHold clears out only the specified tags in
            the request.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='tags'>
            Each tag should be 3 to 23 alphanumeric characters and is normalized to
            lower case at SRP.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperations.CreateOrUpdateImmutabilityPolicyWithHttpMessagesAsync(System.String,System.String,System.String,System.Int32,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates an unlocked immutability policy. ETag in If-Match is
            honored if given but not required for this operation.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='immutabilityPeriodSinceCreationInDays'>
            The immutability period for the blobs in the container since the policy
            creation, in days.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to update. A
            value of "*" can be used to apply the operation only if the immutability
            policy already exists. If omitted, this operation will always be applied.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperations.GetImmutabilityPolicyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the existing immutability policy along with the corresponding ETag in
            response headers and body.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to update. A
            value of "*" can be used to apply the operation only if the immutability
            policy already exists. If omitted, this operation will always be applied.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperations.DeleteImmutabilityPolicyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Aborts an unlocked immutability policy. The response of delete has
            immutabilityPeriodSinceCreationInDays set to 0. ETag in If-Match is
            required for this operation. Deleting a locked immutability policy is not
            allowed, only way is to delete the container after deleting all blobs
            inside the container.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to update. A
            value of "*" can be used to apply the operation only if the immutability
            policy already exists. If omitted, this operation will always be applied.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperations.LockImmutabilityPolicyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets the ImmutabilityPolicy to Locked state. The only action allowed on a
            Locked policy is ExtendImmutabilityPolicy action. ETag in If-Match is
            required for this operation.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to update. A
            value of "*" can be used to apply the operation only if the immutability
            policy already exists. If omitted, this operation will always be applied.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperations.ExtendImmutabilityPolicyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Extends the immutabilityPeriodSinceCreationInDays of a locked
            immutabilityPolicy. The only action allowed on a Locked policy will be this
            action. ETag in If-Match is required for this operation.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to update. A
            value of "*" can be used to apply the operation only if the immutability
            policy already exists. If omitted, this operation will always be applied.
            </param>
            <param name='immutabilityPeriodSinceCreationInDays'>
            The immutability period for the blobs in the container since the policy
            creation, in days.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperations.LeaseWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerRequest,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            The Lease Container operation establishes and manages a lock on a container
            for delete operations. The lock duration can be 15 to 60 seconds, or can be
            infinite.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='parameters'>
            Lease Container request body.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperationsExtensions">
            <summary>
            Extension methods for BlobContainersOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all containers and does not support a prefix like data plane. Also
            SRP today does not return continuation token.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations,System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.PublicAccess},System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Creates a new container under the specified account as described by request
            body. The container resource includes metadata and properties for that
            container. It does not include a list of the blobs contained by the
            container.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='publicAccess'>
            Specifies whether data in the container may be accessed publicly and the
            level of access. Possible values include: 'Container', 'Blob', 'None'
            </param>
            <param name='metadata'>
            A name-value pair to associate with the container as metadata.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations,System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.PublicAccess},System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Updates container properties as specified in request body. Properties not
            mentioned in the request will be unchanged. Update fails if the specified
            container doesn't already exist.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='publicAccess'>
            Specifies whether data in the container may be accessed publicly and the
            level of access. Possible values include: 'Container', 'Blob', 'None'
            </param>
            <param name='metadata'>
            A name-value pair to associate with the container as metadata.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperationsExtensions.GetAsync(Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets properties of a specified container.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes specified container under its account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperationsExtensions.SetLegalHoldAsync(Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations,System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)">
            <summary>
            Sets legal hold tags. Setting the same tag results in an idempotent
            operation. SetLegalHold follows an append pattern and does not clear out
            the existing tags that are not specified in the request.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='tags'>
            Each tag should be 3 to 23 alphanumeric characters and is normalized to
            lower case at SRP.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperationsExtensions.ClearLegalHoldAsync(Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations,System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)">
            <summary>
            Clears legal hold tags. Clearing the same or non-existent tag results in an
            idempotent operation. ClearLegalHold clears out only the specified tags in
            the request.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='tags'>
            Each tag should be 3 to 23 alphanumeric characters and is normalized to
            lower case at SRP.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperationsExtensions.CreateOrUpdateImmutabilityPolicyAsync(Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations,System.String,System.String,System.String,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates or updates an unlocked immutability policy. ETag in If-Match is
            honored if given but not required for this operation.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='immutabilityPeriodSinceCreationInDays'>
            The immutability period for the blobs in the container since the policy
            creation, in days.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to update. A
            value of "*" can be used to apply the operation only if the immutability
            policy already exists. If omitted, this operation will always be applied.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperationsExtensions.GetImmutabilityPolicyAsync(Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the existing immutability policy along with the corresponding ETag in
            response headers and body.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to update. A
            value of "*" can be used to apply the operation only if the immutability
            policy already exists. If omitted, this operation will always be applied.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperationsExtensions.DeleteImmutabilityPolicyAsync(Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Aborts an unlocked immutability policy. The response of delete has
            immutabilityPeriodSinceCreationInDays set to 0. ETag in If-Match is
            required for this operation. Deleting a locked immutability policy is not
            allowed, only way is to delete the container after deleting all blobs
            inside the container.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to update. A
            value of "*" can be used to apply the operation only if the immutability
            policy already exists. If omitted, this operation will always be applied.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperationsExtensions.LockImmutabilityPolicyAsync(Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the ImmutabilityPolicy to Locked state. The only action allowed on a
            Locked policy is ExtendImmutabilityPolicy action. ETag in If-Match is
            required for this operation.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to update. A
            value of "*" can be used to apply the operation only if the immutability
            policy already exists. If omitted, this operation will always be applied.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperationsExtensions.ExtendImmutabilityPolicyAsync(Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Extends the immutabilityPeriodSinceCreationInDays of a locked
            immutabilityPolicy. The only action allowed on a Locked policy will be this
            action. ETag in If-Match is required for this operation.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to update. A
            value of "*" can be used to apply the operation only if the immutability
            policy already exists. If omitted, this operation will always be applied.
            </param>
            <param name='immutabilityPeriodSinceCreationInDays'>
            The immutability period for the blobs in the container since the policy
            creation, in days.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperationsExtensions.LeaseAsync(Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerRequest,System.Threading.CancellationToken)">
            <summary>
            The Lease Container operation establishes and manages a lock on a container
            for delete operations. The lock duration can be 15 to 60 seconds, or can be
            infinite.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='parameters'>
            Lease Container request body.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.BlobServicesOperations">
            <summary>
            BlobServicesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicesOperations.#ctor(Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient)">
            <summary>
            Initializes a new instance of the BlobServicesOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.BlobServicesOperations.Client">
            <summary>
            Gets a reference to the StorageManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicesOperations.SetServicePropertiesWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.BlobServicePropertiesInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets the properties of a storage account’s Blob service, including
            properties for Storage Analytics and CORS (Cross-Origin Resource Sharing)
            rules.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The properties of a storage account’s Blob service, including properties
            for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicesOperations.GetServicePropertiesWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the properties of a storage account’s Blob service, including
            properties for Storage Analytics and CORS (Cross-Origin Resource Sharing)
            rules.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.BlobServicesOperationsExtensions">
            <summary>
            Extension methods for BlobServicesOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicesOperationsExtensions.SetServicePropertiesAsync(Microsoft.Azure.Management.Storage.Fluent.IBlobServicesOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.BlobServicePropertiesInner,System.Threading.CancellationToken)">
            <summary>
            Sets the properties of a storage account’s Blob service, including
            properties for Storage Analytics and CORS (Cross-Origin Resource Sharing)
            rules.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The properties of a storage account’s Blob service, including properties
            for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicesOperationsExtensions.GetServicePropertiesAsync(Microsoft.Azure.Management.Storage.Fluent.IBlobServicesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the properties of a storage account’s Blob service, including
            properties for Storage Analytics and CORS (Cross-Origin Resource Sharing)
            rules.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations">
            <summary>
            BlobContainersOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all containers and does not support a prefix like data plane.
            Also SRP today does not return continuation token.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.PublicAccess},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a new container under the specified account as described by
            request body. The container resource includes metadata and
            properties for that container. It does not include a list of the
            blobs contained by the container.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage
            account. Blob container names must be between 3 and 63 characters
            in length and use numbers, lower-case letters and dash (-) only.
            Every dash (-) character must be immediately preceded and followed
            by a letter or number.
            </param>
            <param name='publicAccess'>
            Specifies whether data in the container may be accessed publicly
            and the level of access. Possible values include: 'Container',
            'Blob', 'None'
            </param>
            <param name='metadata'>
            A name-value pair to associate with the container as metadata.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.PublicAccess},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates container properties as specified in request body.
            Properties not mentioned in the request will be unchanged. Update
            fails if the specified container doesn't already exist.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage
            account. Blob container names must be between 3 and 63 characters
            in length and use numbers, lower-case letters and dash (-) only.
            Every dash (-) character must be immediately preceded and followed
            by a letter or number.
            </param>
            <param name='publicAccess'>
            Specifies whether data in the container may be accessed publicly
            and the level of access. Possible values include: 'Container',
            'Blob', 'None'
            </param>
            <param name='metadata'>
            A name-value pair to associate with the container as metadata.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets properties of a specified container.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage
            account. Blob container names must be between 3 and 63 characters
            in length and use numbers, lower-case letters and dash (-) only.
            Every dash (-) character must be immediately preceded and followed
            by a letter or number.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes specified container under its account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage
            account. Blob container names must be between 3 and 63 characters
            in length and use numbers, lower-case letters and dash (-) only.
            Every dash (-) character must be immediately preceded and followed
            by a letter or number.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations.SetLegalHoldWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets legal hold tags. Setting the same tag results in an idempotent
            operation. SetLegalHold follows an append pattern and does not
            clear out the existing tags that are not specified in the request.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage
            account. Blob container names must be between 3 and 63 characters
            in length and use numbers, lower-case letters and dash (-) only.
            Every dash (-) character must be immediately preceded and followed
            by a letter or number.
            </param>
            <param name='tags'>
            Each tag should be 3 to 23 alphanumeric characters and is
            normalized to lower case at SRP.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations.ClearLegalHoldWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Clears legal hold tags. Clearing the same or non-existent tag
            results in an idempotent operation. ClearLegalHold clears out only
            the specified tags in the request.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage
            account. Blob container names must be between 3 and 63 characters
            in length and use numbers, lower-case letters and dash (-) only.
            Every dash (-) character must be immediately preceded and followed
            by a letter or number.
            </param>
            <param name='tags'>
            Each tag should be 3 to 23 alphanumeric characters and is
            normalized to lower case at SRP.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations.CreateOrUpdateImmutabilityPolicyWithHttpMessagesAsync(System.String,System.String,System.String,System.Int32,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates an unlocked immutability policy. ETag in
            If-Match is honored if given but not required for this operation.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage
            account. Blob container names must be between 3 and 63 characters
            in length and use numbers, lower-case letters and dash (-) only.
            Every dash (-) character must be immediately preceded and followed
            by a letter or number.
            </param>
            <param name='immutabilityPeriodSinceCreationInDays'>
            The immutability period for the blobs in the container since the
            policy creation, in days.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to
            update. A value of "*" can be used to apply the operation only if
            the immutability policy already exists. If omitted, this operation
            will always be applied.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations.GetImmutabilityPolicyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the existing immutability policy along with the corresponding
            ETag in response headers and body.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage
            account. Blob container names must be between 3 and 63 characters
            in length and use numbers, lower-case letters and dash (-) only.
            Every dash (-) character must be immediately preceded and followed
            by a letter or number.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to
            update. A value of "*" can be used to apply the operation only if
            the immutability policy already exists. If omitted, this operation
            will always be applied.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations.DeleteImmutabilityPolicyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Aborts an unlocked immutability policy. The response of delete has
            immutabilityPeriodSinceCreationInDays set to 0. ETag in If-Match is
            required for this operation. Deleting a locked immutability policy
            is not allowed, only way is to delete the container after deleting
            all blobs inside the container.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage
            account. Blob container names must be between 3 and 63 characters
            in length and use numbers, lower-case letters and dash (-) only.
            Every dash (-) character must be immediately preceded and followed
            by a letter or number.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to
            update. A value of "*" can be used to apply the operation only if
            the immutability policy already exists. If omitted, this operation
            will always be applied.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations.LockImmutabilityPolicyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets the ImmutabilityPolicy to Locked state. The only action
            allowed on a Locked policy is ExtendImmutabilityPolicy action. ETag
            in If-Match is required for this operation.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage
            account. Blob container names must be between 3 and 63 characters
            in length and use numbers, lower-case letters and dash (-) only.
            Every dash (-) character must be immediately preceded and followed
            by a letter or number.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to
            update. A value of "*" can be used to apply the operation only if
            the immutability policy already exists. If omitted, this operation
            will always be applied.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations.ExtendImmutabilityPolicyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Extends the immutabilityPeriodSinceCreationInDays of a locked
            immutabilityPolicy. The only action allowed on a Locked policy will
            be this action. ETag in If-Match is required for this operation.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage
            account. Blob container names must be between 3 and 63 characters
            in length and use numbers, lower-case letters and dash (-) only.
            Every dash (-) character must be immediately preceded and followed
            by a letter or number.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to
            update. A value of "*" can be used to apply the operation only if
            the immutability policy already exists. If omitted, this operation
            will always be applied.
            </param>
            <param name='immutabilityPeriodSinceCreationInDays'>
            The immutability period for the blobs in the container since the
            policy creation, in days.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations.LeaseWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerRequest,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            The Lease Container operation establishes and manages a lock on a
            container for delete operations. The lock duration can be 15 to 60
            seconds, or can be infinite.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage
            account. Blob container names must be between 3 and 63 characters
            in length and use numbers, lower-case letters and dash (-) only.
            Every dash (-) character must be immediately preceded and followed
            by a letter or number.
            </param>
            <param name='parameters'>
            Lease Container request body.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.IBlobServicesOperations">
            <summary>
            BlobServicesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IBlobServicesOperations.SetServicePropertiesWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.BlobServicePropertiesInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets the properties of a storage account’s Blob service, including
            properties for Storage Analytics and CORS (Cross-Origin Resource
            Sharing) rules.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The properties of a storage account’s Blob service, including
            properties for Storage Analytics and CORS (Cross-Origin Resource
            Sharing) rules.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IBlobServicesOperations.GetServicePropertiesWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the properties of a storage account’s Blob service, including
            properties for Storage Analytics and CORS (Cross-Origin Resource
            Sharing) rules.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.IManagementPoliciesOperations">
            <summary>
            ManagementPoliciesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IManagementPoliciesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the managementpolicy associated with the specified storage
            account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IManagementPoliciesOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySchema,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets the managementpolicy to the specified storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='policy'>
            The Storage Account ManagementPolicy, in JSON format. See more
            details in:
            https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IManagementPoliciesOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the managementpolicy associated with the specified storage
            account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.IOperations">
            <summary>
            Operations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the available Storage Rest API operations.
            </summary>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.ISkusOperations">
            <summary>
            SkusOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.ISkusOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the available SKUs supported by Microsoft.Storage for given
            subscription.
            </summary>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations">
            <summary>
            StorageAccountsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations.CheckNameAvailabilityWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks that the storage account name is valid and is not already in
            use.
            </summary>
            <param name='name'>
            The storage account name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations.CreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Asynchronously creates a new storage account with the specified
            parameters. If an account is already created and a subsequent
            create request is issued with different properties, the account
            properties will be updated. If an account is already created and a
            subsequent create or update request is issued with the exact same
            set of properties, the request will succeed.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide for the created account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a storage account in Microsoft Azure.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations.GetPropertiesWithHttpMessagesAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountExpand},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns the properties for the specified storage account including
            but not limited to name, SKU name, location, and account status.
            The ListKeys operation should be used to retrieve storage keys.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='expand'>
            May be used to expand the properties within account's properties.
            By default, data is not included when fetching properties.
            Currently we only support geoReplicationStats. Possible values
            include: 'geoReplicationStats'
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            The update operation can be used to update the SKU, encryption,
            access tier, or tags for a storage account. It can also be used to
            map the account to a custom domain. Only one custom domain is
            supported per storage account; the replacement/change of custom
            domain is not supported. In order to replace an old custom domain,
            the old value must be cleared/unregistered before a new value can
            be set. The update of multiple properties is supported. This call
            does not change the storage keys for the account. If you want to
            change the storage account keys, use the regenerate keys operation.
            The location and name of the storage account cannot be changed
            after creation.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide for the updated account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all the storage accounts available under the subscription.
            Note that storage keys are not returned; use the ListKeys operation
            for this.
            </summary>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all the storage accounts available under the given resource
            group. Note that storage keys are not returned; use the ListKeys
            operation for this.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations.ListKeysWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the access keys for the specified storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations.RegenerateKeyWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Regenerates one of the access keys for the specified storage
            account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='keyName'>
            The name of storage keys that want to be regenerated, possible
            values are key1, key2.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations.ListAccountSASWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.AccountSasParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List SAS credentials of a storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide to list SAS credentials for the storage
            account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations.ListServiceSASWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List service SAS credentials of a specific resource.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide to list service SAS credentials.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations.FailoverWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Failover request can be triggered for a storage account in case of
            availability issues. The failover occurs from the storage account's
            primary cluster to secondary cluster for RA-GRS accounts. The
            secondary cluster will become primary after failover.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations.RevokeUserDelegationKeysWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Revoke user delegation keys.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations.BeginCreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Asynchronously creates a new storage account with the specified
            parameters. If an account is already created and a subsequent
            create request is issued with different properties, the account
            properties will be updated. If an account is already created and a
            subsequent create or update request is issued with the exact same
            set of properties, the request will succeed.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide for the created account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations.BeginFailoverWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Failover request can be triggered for a storage account in case of
            availability issues. The failover occurs from the storage account's
            primary cluster to secondary cluster for RA-GRS accounts. The
            secondary cluster will become primary after failover.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient">
            <summary>
            The Azure Storage Management API.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient.SubscriptionId">
            <summary>
            The ID of the target subscription.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient.ApiVersion">
            <summary>
            The API version to use for this operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient.AcceptLanguage">
            <summary>
            The preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient.LongRunningOperationRetryTimeout">
            <summary>
            The retry timeout in seconds for Long Running Operations. Default
            value is 30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient.GenerateClientRequestId">
            <summary>
            Whether a unique x-ms-client-request-id should be generated. When
            set to true a unique x-ms-client-request-id value is generated and
            included in each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient.Operations">
            <summary>
            Gets the IOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient.Skus">
            <summary>
            Gets the ISkusOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient.StorageAccounts">
            <summary>
            Gets the IStorageAccountsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient.Usages">
            <summary>
            Gets the IUsagesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient.ManagementPolicies">
            <summary>
            Gets the IManagementPoliciesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient.BlobServices">
            <summary>
            Gets the IBlobServicesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient.BlobContainers">
            <summary>
            Gets the IBlobContainersOperations.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.IUsagesOperations">
            <summary>
            UsagesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.IUsagesOperations.ListByLocationWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the current usage count and the limit for the resources of the
            location under the subscription.
            </summary>
            <param name='location'>
            The location of the Azure Storage resource.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.ManagementPoliciesOperations">
            <summary>
            ManagementPoliciesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPoliciesOperations.#ctor(Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient)">
            <summary>
            Initializes a new instance of the ManagementPoliciesOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.ManagementPoliciesOperations.Client">
            <summary>
            Gets a reference to the StorageManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPoliciesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the managementpolicy associated with the specified storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPoliciesOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySchema,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets the managementpolicy to the specified storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='policy'>
            The Storage Account ManagementPolicy, in JSON format. See more details in:
            https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPoliciesOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the managementpolicy associated with the specified storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.ManagementPoliciesOperationsExtensions">
            <summary>
            Extension methods for ManagementPoliciesOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPoliciesOperationsExtensions.GetAsync(Microsoft.Azure.Management.Storage.Fluent.IManagementPoliciesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the managementpolicy associated with the specified storage account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPoliciesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Storage.Fluent.IManagementPoliciesOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySchema,System.Threading.CancellationToken)">
            <summary>
            Sets the managementpolicy to the specified storage account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='policy'>
            The Storage Account ManagementPolicy, in JSON format. See more details in:
            https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPoliciesOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Storage.Fluent.IManagementPoliciesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the managementpolicy associated with the specified storage account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.AccessTier">
            <summary>
            Defines values for AccessTier.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.AccountSasParameters">
            <summary>
            The parameters to list SAS credentials of a storage account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.AccountSasParameters.#ctor">
            <summary>
            Initializes a new instance of the AccountSasParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.AccountSasParameters.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.Services,Microsoft.Azure.Management.Storage.Fluent.Models.SignedResourceTypes,Microsoft.Azure.Management.Storage.Fluent.Models.Permissions,System.DateTime,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.HttpProtocol},System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the AccountSasParameters class.
            </summary>
            <param name="services">The signed services accessible with the
            account SAS. Possible values include: Blob (b), Queue (q), Table
            (t), File (f). Possible values include: 'b', 'q', 't', 'f'</param>
            <param name="resourceTypes">The signed resource types that are
            accessible with the account SAS. Service (s): Access to
            service-level APIs; Container (c): Access to container-level APIs;
            Object (o): Access to object-level APIs for blobs, queue messages,
            table entities, and files. Possible values include: 's', 'c',
            'o'</param>
            <param name="permissions">The signed permissions for the account
            SAS. Possible values include: Read (r), Write (w), Delete (d), List
            (l), Add (a), Create (c), Update (u) and Process (p). Possible
            values include: 'r', 'd', 'w', 'l', 'a', 'c', 'u', 'p'</param>
            <param name="sharedAccessExpiryTime">The time at which the shared
            access signature becomes invalid.</param>
            <param name="iPAddressOrRange">An IP address or a range of IP
            addresses from which to accept requests.</param>
            <param name="protocols">The protocol permitted for a request made
            with the account SAS. Possible values include: 'https,http',
            'https'</param>
            <param name="sharedAccessStartTime">The time at which the SAS
            becomes valid.</param>
            <param name="keyToSign">The key to sign the account SAS token
            with.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.AccountSasParameters.Services">
            <summary>
            Gets or sets the signed services accessible with the account SAS.
            Possible values include: Blob (b), Queue (q), Table (t), File (f).
            Possible values include: 'b', 'q', 't', 'f'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.AccountSasParameters.ResourceTypes">
            <summary>
            Gets or sets the signed resource types that are accessible with the
            account SAS. Service (s): Access to service-level APIs; Container
            (c): Access to container-level APIs; Object (o): Access to
            object-level APIs for blobs, queue messages, table entities, and
            files. Possible values include: 's', 'c', 'o'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.AccountSasParameters.Permissions">
            <summary>
            Gets or sets the signed permissions for the account SAS. Possible
            values include: Read (r), Write (w), Delete (d), List (l), Add (a),
            Create (c), Update (u) and Process (p). Possible values include:
            'r', 'd', 'w', 'l', 'a', 'c', 'u', 'p'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.AccountSasParameters.IPAddressOrRange">
            <summary>
            Gets or sets an IP address or a range of IP addresses from which to
            accept requests.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.AccountSasParameters.Protocols">
            <summary>
            Gets or sets the protocol permitted for a request made with the
            account SAS. Possible values include: 'https,http', 'https'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.AccountSasParameters.SharedAccessStartTime">
            <summary>
            Gets or sets the time at which the SAS becomes valid.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.AccountSasParameters.SharedAccessExpiryTime">
            <summary>
            Gets or sets the time at which the shared access signature becomes
            invalid.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.AccountSasParameters.KeyToSign">
            <summary>
            Gets or sets the key to sign the account SAS token with.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.AccountSasParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.AccountStatus">
            <summary>
            Defines values for AccountStatus.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.Action">
            <summary>
            Defines values for Action.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.Action1">
            <summary>
            Defines values for Action1.
            </summary>
            <summary>
            Determine base value for a given allowed value if exists, else return
            the value itself
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.AllowedMethods">
            <summary>
            Defines values for AllowedMethods.
            </summary>
            <summary>
            Determine base value for a given allowed value if exists, else return
            the value itself
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.AzureEntityResourceInner">
            <summary>
            The resource model definition for a Azure Resource Manager resource
            with an etag.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.AzureEntityResourceInner.#ctor">
            <summary>
            Initializes a new instance of the AzureEntityResourceInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.AzureEntityResourceInner.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the AzureEntityResourceInner class.
            </summary>
            <param name="etag">Resource Etag.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.AzureEntityResourceInner.Etag">
            <summary>
            Gets resource Etag.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainerInner">
            <summary>
            Properties of the blob container, including Id, resource name, resource
            type, Etag.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainerInner.#ctor">
            <summary>
            Initializes a new instance of the BlobContainerInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainerInner.#ctor(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.PublicAccess},System.Nullable{System.DateTime},Microsoft.Azure.Management.Storage.Fluent.Models.LeaseStatus,Microsoft.Azure.Management.Storage.Fluent.Models.LeaseState,Microsoft.Azure.Management.Storage.Fluent.Models.LeaseDuration,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyProperties,Microsoft.Azure.Management.Storage.Fluent.Models.LegalHoldProperties,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the BlobContainerInner class.
            </summary>
            <param name="etag">Resource Etag.</param>
            <param name="publicAccess">Specifies whether data in the container
            may be accessed publicly and the level of access. Possible values
            include: 'Container', 'Blob', 'None'</param>
            <param name="lastModifiedTime">Returns the date and time the
            container was last modified.</param>
            <param name="leaseStatus">The lease status of the container.
            Possible values include: 'Locked', 'Unlocked'</param>
            <param name="leaseState">Lease state of the container. Possible
            values include: 'Available', 'Leased', 'Expired', 'Breaking',
            'Broken'</param>
            <param name="leaseDuration">Specifies whether the lease on a
            container is of infinite or fixed duration, only when the container
            is leased. Possible values include: 'Infinite', 'Fixed'</param>
            <param name="metadata">A name-value pair to associate with the
            container as metadata.</param>
            <param name="immutabilityPolicy">The ImmutabilityPolicy property of
            the container.</param>
            <param name="legalHold">The LegalHold property of the
            container.</param>
            <param name="hasLegalHold">The hasLegalHold public property is set
            to true by SRP if there are at least one existing tag. The
            hasLegalHold public property is set to false by SRP if all existing
            legal hold tags are cleared out. There can be a maximum of 1000
            blob containers with hasLegalHold=true for a given account.</param>
            <param name="hasImmutabilityPolicy">The hasImmutabilityPolicy
            public property is set to true by SRP if ImmutabilityPolicy has
            been created for this container. The hasImmutabilityPolicy public
            property is set to false by SRP if ImmutabilityPolicy has not been
            created for this container.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainerInner.PublicAccess">
            <summary>
            Gets or sets specifies whether data in the container may be
            accessed publicly and the level of access. Possible values include:
            'Container', 'Blob', 'None'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainerInner.LastModifiedTime">
            <summary>
            Gets returns the date and time the container was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainerInner.LeaseStatus">
            <summary>
            Gets the lease status of the container. Possible values include:
            'Locked', 'Unlocked'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainerInner.LeaseState">
            <summary>
            Gets lease state of the container. Possible values include:
            'Available', 'Leased', 'Expired', 'Breaking', 'Broken'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainerInner.LeaseDuration">
            <summary>
            Gets specifies whether the lease on a container is of infinite or
            fixed duration, only when the container is leased. Possible values
            include: 'Infinite', 'Fixed'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainerInner.Metadata">
            <summary>
            Gets or sets a name-value pair to associate with the container as
            metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainerInner.ImmutabilityPolicy">
            <summary>
            Gets the ImmutabilityPolicy property of the container.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainerInner.LegalHold">
            <summary>
            Gets the LegalHold property of the container.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainerInner.HasLegalHold">
            <summary>
            Gets the hasLegalHold public property is set to true by SRP if
            there are at least one existing tag. The hasLegalHold public
            property is set to false by SRP if all existing legal hold tags are
            cleared out. There can be a maximum of 1000 blob containers with
            hasLegalHold=true for a given account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainerInner.HasImmutabilityPolicy">
            <summary>
            Gets the hasImmutabilityPolicy public property is set to true by
            SRP if ImmutabilityPolicy has been created for this container. The
            hasImmutabilityPolicy public property is set to false by SRP if
            ImmutabilityPolicy has not been created for this container.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainerInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersCreateOrUpdateImmutabilityPolicyHeaders">
            <summary>
            Defines headers for CreateOrUpdateImmutabilityPolicy operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersCreateOrUpdateImmutabilityPolicyHeaders.#ctor">
            <summary>
            Initializes a new instance of the
            BlobContainersCreateOrUpdateImmutabilityPolicyHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersCreateOrUpdateImmutabilityPolicyHeaders.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            BlobContainersCreateOrUpdateImmutabilityPolicyHeaders class.
            </summary>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersCreateOrUpdateImmutabilityPolicyHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersDeleteImmutabilityPolicyHeaders">
            <summary>
            Defines headers for DeleteImmutabilityPolicy operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersDeleteImmutabilityPolicyHeaders.#ctor">
            <summary>
            Initializes a new instance of the
            BlobContainersDeleteImmutabilityPolicyHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersDeleteImmutabilityPolicyHeaders.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            BlobContainersDeleteImmutabilityPolicyHeaders class.
            </summary>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersDeleteImmutabilityPolicyHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersExtendImmutabilityPolicyHeaders">
            <summary>
            Defines headers for ExtendImmutabilityPolicy operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersExtendImmutabilityPolicyHeaders.#ctor">
            <summary>
            Initializes a new instance of the
            BlobContainersExtendImmutabilityPolicyHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersExtendImmutabilityPolicyHeaders.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            BlobContainersExtendImmutabilityPolicyHeaders class.
            </summary>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersExtendImmutabilityPolicyHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersGetImmutabilityPolicyHeaders">
            <summary>
            Defines headers for GetImmutabilityPolicy operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersGetImmutabilityPolicyHeaders.#ctor">
            <summary>
            Initializes a new instance of the
            BlobContainersGetImmutabilityPolicyHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersGetImmutabilityPolicyHeaders.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            BlobContainersGetImmutabilityPolicyHeaders class.
            </summary>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersGetImmutabilityPolicyHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersLockImmutabilityPolicyHeaders">
            <summary>
            Defines headers for LockImmutabilityPolicy operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersLockImmutabilityPolicyHeaders.#ctor">
            <summary>
            Initializes a new instance of the
            BlobContainersLockImmutabilityPolicyHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersLockImmutabilityPolicyHeaders.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            BlobContainersLockImmutabilityPolicyHeaders class.
            </summary>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersLockImmutabilityPolicyHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.BlobServicePropertiesInner">
            <summary>
            The properties of a storage account’s Blob service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.BlobServicePropertiesInner.#ctor">
            <summary>
            Initializes a new instance of the BlobServicePropertiesInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.BlobServicePropertiesInner.#ctor(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.CorsRules,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.DeleteRetentionPolicy)">
            <summary>
            Initializes a new instance of the BlobServicePropertiesInner class.
            </summary>
            <param name="cors">Specifies CORS rules for the Blob service. You
            can include up to five CorsRule elements in the request. If no
            CorsRule elements are included in the request body, all CORS rules
            will be deleted, and CORS will be disabled for the Blob
            service.</param>
            <param name="defaultServiceVersion">DefaultServiceVersion indicates
            the default version to use for requests to the Blob service if an
            incoming request’s version is not specified. Possible values
            include version 2008-10-27 and all more recent versions.</param>
            <param name="deleteRetentionPolicy">The blob service properties for
            soft delete.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobServicePropertiesInner.Cors">
            <summary>
            Gets or sets specifies CORS rules for the Blob service. You can
            include up to five CorsRule elements in the request. If no CorsRule
            elements are included in the request body, all CORS rules will be
            deleted, and CORS will be disabled for the Blob service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobServicePropertiesInner.DefaultServiceVersion">
            <summary>
            Gets or sets defaultServiceVersion indicates the default version to
            use for requests to the Blob service if an incoming request’s
            version is not specified. Possible values include version
            2008-10-27 and all more recent versions.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobServicePropertiesInner.DeleteRetentionPolicy">
            <summary>
            Gets or sets the blob service properties for soft delete.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.BlobServicePropertiesInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.Bypass">
            <summary>
            Defines values for Bypass.
            </summary>
            <summary>
            Determine base value for a given allowed value if exists, else return
            the value itself
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.CheckNameAvailabilityResultInner">
            <summary>
            The CheckNameAvailability operation response.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.CheckNameAvailabilityResultInner.#ctor">
            <summary>
            Initializes a new instance of the CheckNameAvailabilityResultInner
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.CheckNameAvailabilityResultInner.#ctor(System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.Reason},System.String)">
            <summary>
            Initializes a new instance of the CheckNameAvailabilityResultInner
            class.
            </summary>
            <param name="nameAvailable">Gets a boolean value that indicates
            whether the name is available for you to use. If true, the name is
            available. If false, the name has already been taken or is invalid
            and cannot be used.</param>
            <param name="reason">Gets the reason that a storage account name
            could not be used. The Reason element is only returned if
            NameAvailable is false. Possible values include:
            'AccountNameInvalid', 'AlreadyExists'</param>
            <param name="message">Gets an error message explaining the Reason
            value in more detail.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.CheckNameAvailabilityResultInner.NameAvailable">
            <summary>
            Gets a boolean value that indicates whether the name is available
            for you to use. If true, the name is available. If false, the name
            has already been taken or is invalid and cannot be used.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.CheckNameAvailabilityResultInner.Reason">
            <summary>
            Gets the reason that a storage account name could not be used. The
            Reason element is only returned if NameAvailable is false. Possible
            values include: 'AccountNameInvalid', 'AlreadyExists'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.CheckNameAvailabilityResultInner.Message">
            <summary>
            Gets an error message explaining the Reason value in more detail.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule">
            <summary>
            Specifies a CORS rule for the Blob service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule.#ctor">
            <summary>
            Initializes a new instance of the CorsRule class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.AllowedMethods},System.Int32,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the CorsRule class.
            </summary>
            <param name="allowedOrigins">Required if CorsRule element is
            present. A list of origin domains that will be allowed via CORS, or
            "*" to allow all domains</param>
            <param name="allowedMethods">Required if CorsRule element is
            present. A list of HTTP methods that are allowed to be executed by
            the origin.</param>
            <param name="maxAgeInSeconds">Required if CorsRule element is
            present. The number of seconds that the client/browser should cache
            a preflight response.</param>
            <param name="exposedHeaders">Required if CorsRule element is
            present. A list of response headers to expose to CORS
            clients.</param>
            <param name="allowedHeaders">Required if CorsRule element is
            present. A list of headers allowed to be part of the cross-origin
            request.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule.AllowedOrigins">
            <summary>
            Gets or sets required if CorsRule element is present. A list of
            origin domains that will be allowed via CORS, or "*" to allow all
            domains
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule.AllowedMethods">
            <summary>
            Gets or sets required if CorsRule element is present. A list of
            HTTP methods that are allowed to be executed by the origin.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule.MaxAgeInSeconds">
            <summary>
            Gets or sets required if CorsRule element is present. The number of
            seconds that the client/browser should cache a preflight response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule.ExposedHeaders">
            <summary>
            Gets or sets required if CorsRule element is present. A list of
            response headers to expose to CORS clients.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule.AllowedHeaders">
            <summary>
            Gets or sets required if CorsRule element is present. A list of
            headers allowed to be part of the cross-origin request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.CorsRules">
            <summary>
            Sets the CORS rules. You can include up to five CorsRule elements in
            the request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.CorsRules.#ctor">
            <summary>
            Initializes a new instance of the CorsRules class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.CorsRules.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule})">
            <summary>
            Initializes a new instance of the CorsRules class.
            </summary>
            <param name="corsRulesProperty">The List of CORS rules. You can
            include up to five CorsRule elements in the request. </param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.CorsRules.CorsRulesProperty">
            <summary>
            Gets or sets the List of CORS rules. You can include up to five
            CorsRule elements in the request.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.CustomDomain">
            <summary>
            The custom domain assigned to this storage account. This can be set via
            Update.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.CustomDomain.#ctor">
            <summary>
            Initializes a new instance of the CustomDomain class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.CustomDomain.#ctor(System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the CustomDomain class.
            </summary>
            <param name="name">Gets or sets the custom domain name assigned to
            the storage account. Name is the CNAME source.</param>
            <param name="useSubDomainName">Indicates whether indirect CName
            validation is enabled. Default value is false. This should only be
            set on updates.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.CustomDomain.Name">
            <summary>
            Gets or sets the custom domain name assigned to the storage
            account. Name is the CNAME source.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.CustomDomain.UseSubDomainName">
            <summary>
            Gets or sets indicates whether indirect CName validation is
            enabled. Default value is false. This should only be set on
            updates.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.CustomDomain.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.DateAfterCreation">
            <summary>
            Object to define the number of days after creation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.DateAfterCreation.#ctor">
            <summary>
            Initializes a new instance of the DateAfterCreation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.DateAfterCreation.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the DateAfterCreation class.
            </summary>
            <param name="daysAfterCreationGreaterThan">Integer value indicating
            the age in days after creation</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.DateAfterCreation.DaysAfterCreationGreaterThan">
            <summary>
            Gets or sets integer value indicating the age in days after
            creation
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.DateAfterCreation.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.DateAfterModification">
            <summary>
            Object to define the number of days after last modification.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.DateAfterModification.#ctor">
            <summary>
            Initializes a new instance of the DateAfterModification class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.DateAfterModification.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the DateAfterModification class.
            </summary>
            <param name="daysAfterModificationGreaterThan">Integer value
            indicating the age in days after last modification</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.DateAfterModification.DaysAfterModificationGreaterThan">
            <summary>
            Gets or sets integer value indicating the age in days after last
            modification
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.DateAfterModification.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.DefaultAction">
            <summary>
            Defines values for DefaultAction.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.DeleteRetentionPolicy">
            <summary>
            The blob service properties for soft delete.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.DeleteRetentionPolicy.#ctor">
            <summary>
            Initializes a new instance of the DeleteRetentionPolicy class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.DeleteRetentionPolicy.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the DeleteRetentionPolicy class.
            </summary>
            <param name="enabled">Indicates whether DeleteRetentionPolicy is
            enabled for the Blob service.</param>
            <param name="days">Indicates the number of days that the deleted
            blob should be retained. The minimum specified value can be 1 and
            the maximum value can be 365.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.DeleteRetentionPolicy.Enabled">
            <summary>
            Gets or sets indicates whether DeleteRetentionPolicy is enabled for
            the Blob service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.DeleteRetentionPolicy.Days">
            <summary>
            Gets or sets indicates the number of days that the deleted blob
            should be retained. The minimum specified value can be 1 and the
            maximum value can be 365.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.DeleteRetentionPolicy.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.Dimension">
            <summary>
            Dimension of blobs, possibly be blob type or access tier.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.Dimension.#ctor">
            <summary>
            Initializes a new instance of the Dimension class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.Dimension.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the Dimension class.
            </summary>
            <param name="name">Display name of dimension.</param>
            <param name="displayName">Display name of dimension.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.Dimension.Name">
            <summary>
            Gets or sets display name of dimension.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.Dimension.DisplayName">
            <summary>
            Gets or sets display name of dimension.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.Encryption">
            <summary>
            The encryption settings on the storage account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.Encryption.#ctor">
            <summary>
            Initializes a new instance of the Encryption class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.Encryption.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.KeySource,Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionServices,Microsoft.Azure.Management.Storage.Fluent.Models.KeyVaultProperties)">
            <summary>
            Initializes a new instance of the Encryption class.
            </summary>
            <param name="keySource">The encryption keySource (provider).
            Possible values (case-insensitive):  Microsoft.Storage,
            Microsoft.Keyvault. Possible values include: 'Microsoft.Storage',
            'Microsoft.Keyvault'</param>
            <param name="services">List of services which support
            encryption.</param>
            <param name="keyVaultProperties">Properties provided by key
            vault.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.Encryption.Services">
            <summary>
            Gets or sets list of services which support encryption.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.Encryption.KeySource">
            <summary>
            Gets or sets the encryption keySource (provider). Possible values
            (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault.
            Possible values include: 'Microsoft.Storage', 'Microsoft.Keyvault'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.Encryption.KeyVaultProperties">
            <summary>
            Gets or sets properties provided by key vault.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.Encryption.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionService">
            <summary>
            A service that allows server-side encryption to be used.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionService.#ctor">
            <summary>
            Initializes a new instance of the EncryptionService class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionService.#ctor(System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the EncryptionService class.
            </summary>
            <param name="enabled">A boolean indicating whether or not the
            service encrypts the data as it is stored.</param>
            <param name="lastEnabledTime">Gets a rough estimate of the
            date/time when the encryption was last enabled by the user. Only
            returned when encryption is enabled. There might be some
            unencrypted blobs which were written after this time, as it is just
            a rough estimate.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionService.Enabled">
            <summary>
            Gets or sets a boolean indicating whether or not the service
            encrypts the data as it is stored.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionService.LastEnabledTime">
            <summary>
            Gets a rough estimate of the date/time when the encryption was last
            enabled by the user. Only returned when encryption is enabled.
            There might be some unencrypted blobs which were written after this
            time, as it is just a rough estimate.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionServices">
            <summary>
            A list of services that support encryption.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionServices.#ctor">
            <summary>
            Initializes a new instance of the EncryptionServices class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionServices.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionService,Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionService,Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionService,Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionService)">
            <summary>
            Initializes a new instance of the EncryptionServices class.
            </summary>
            <param name="blob">The encryption function of the blob storage
            service.</param>
            <param name="file">The encryption function of the file storage
            service.</param>
            <param name="table">The encryption function of the table storage
            service.</param>
            <param name="queue">The encryption function of the queue storage
            service.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionServices.Blob">
            <summary>
            Gets or sets the encryption function of the blob storage service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionServices.File">
            <summary>
            Gets or sets the encryption function of the file storage service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionServices.Table">
            <summary>
            Gets the encryption function of the table storage service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionServices.Queue">
            <summary>
            Gets the encryption function of the queue storage service.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.Endpoints">
            <summary>
            The URIs that are used to perform a retrieval of a public blob, queue,
            table, web or dfs object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.Endpoints.#ctor">
            <summary>
            Initializes a new instance of the Endpoints class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.Endpoints.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the Endpoints class.
            </summary>
            <param name="blob">Gets the blob endpoint.</param>
            <param name="queue">Gets the queue endpoint.</param>
            <param name="table">Gets the table endpoint.</param>
            <param name="file">Gets the file endpoint.</param>
            <param name="web">Gets the web endpoint.</param>
            <param name="dfs">Gets the dfs endpoint.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.Endpoints.Blob">
            <summary>
            Gets the blob endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.Endpoints.Queue">
            <summary>
            Gets the queue endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.Endpoints.Table">
            <summary>
            Gets the table endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.Endpoints.File">
            <summary>
            Gets the file endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.Endpoints.Web">
            <summary>
            Gets the web endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.Endpoints.Dfs">
            <summary>
            Gets the dfs endpoint.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.GeoReplicationStats">
            <summary>
            Statistics related to replication for storage account's Blob, Table,
            Queue and File services. It is only available when geo-redundant
            replication is enabled for the storage account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.GeoReplicationStats.#ctor">
            <summary>
            Initializes a new instance of the GeoReplicationStats class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.GeoReplicationStats.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.GeoReplicationStatus,System.Nullable{System.DateTime},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the GeoReplicationStats class.
            </summary>
            <param name="status">The status of the secondary location. Possible
            values are: - Live: Indicates that the secondary location is active
            and operational. - Bootstrap: Indicates initial synchronization
            from the primary location to the secondary location is in
            progress.This typically occurs when replication is first enabled. -
            Unavailable: Indicates that the secondary location is temporarily
            unavailable. Possible values include: 'Live', 'Bootstrap',
            'Unavailable'</param>
            <param name="lastSyncTime">All primary writes preceding this UTC
            date/time value are guaranteed to be available for read operations.
            Primary writes following this point in time may or may not be
            available for reads. Element may be default value if value of
            LastSyncTime is not available, this can happen if secondary is
            offline or we are in bootstrap.</param>
            <param name="canFailover">A boolean flag which indicates whether or
            not account failover is supported for the account.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.GeoReplicationStats.Status">
            <summary>
            Gets the status of the secondary location. Possible values are: -
            Live: Indicates that the secondary location is active and
            operational. - Bootstrap: Indicates initial synchronization from
            the primary location to the secondary location is in progress.This
            typically occurs when replication is first enabled. - Unavailable:
            Indicates that the secondary location is temporarily unavailable.
            Possible values include: 'Live', 'Bootstrap', 'Unavailable'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.GeoReplicationStats.LastSyncTime">
            <summary>
            Gets all primary writes preceding this UTC date/time value are
            guaranteed to be available for read operations. Primary writes
            following this point in time may or may not be available for reads.
            Element may be default value if value of LastSyncTime is not
            available, this can happen if secondary is offline or we are in
            bootstrap.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.GeoReplicationStats.CanFailover">
            <summary>
            Gets a boolean flag which indicates whether or not account failover
            is supported for the account.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.GeoReplicationStatus">
            <summary>
            Defines values for GeoReplicationStatus.
            </summary>
            <summary>
            Determine base value for a given allowed value if exists, else return
            the value itself
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.HttpProtocol">
            <summary>
            Defines values for HttpProtocol.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.Identity">
            <summary>
            Identity for the resource.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.Identity.#ctor">
            <summary>
            Initializes a new instance of the Identity class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.Identity.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the Identity class.
            </summary>
            <param name="principalId">The principal ID of resource
            identity.</param>
            <param name="tenantId">The tenant ID of resource.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.Identity.#cctor">
            <summary>
            Static constructor for Identity class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.Identity.PrincipalId">
            <summary>
            Gets the principal ID of resource identity.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.Identity.TenantId">
            <summary>
            Gets the tenant ID of resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.Identity.Type">
            <summary>
            The identity type.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyInner">
            <summary>
            The ImmutabilityPolicy property of a blob container, including Id,
            resource name, resource type, Etag.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyInner.#ctor">
            <summary>
            Initializes a new instance of the ImmutabilityPolicyInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyInner.#ctor(System.Int32,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyState)">
            <summary>
            Initializes a new instance of the ImmutabilityPolicyInner class.
            </summary>
            <param name="immutabilityPeriodSinceCreationInDays">The
            immutability period for the blobs in the container since the policy
            creation, in days.</param>
            <param name="etag">Resource Etag.</param>
            <param name="state">The ImmutabilityPolicy state of a blob
            container, possible values include: Locked and Unlocked. Possible
            values include: 'Locked', 'Unlocked'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyInner.ImmutabilityPeriodSinceCreationInDays">
            <summary>
            Gets or sets the immutability period for the blobs in the container
            since the policy creation, in days.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyInner.State">
            <summary>
            Gets the ImmutabilityPolicy state of a blob container, possible
            values include: Locked and Unlocked. Possible values include:
            'Locked', 'Unlocked'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyProperties">
            <summary>
            The properties of an ImmutabilityPolicy of a blob container.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyProperties.#ctor">
            <summary>
            Initializes a new instance of the ImmutabilityPolicyProperties
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyProperties.#ctor(System.Int32,Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyState,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.UpdateHistoryProperty})">
            <summary>
            Initializes a new instance of the ImmutabilityPolicyProperties
            class.
            </summary>
            <param name="immutabilityPeriodSinceCreationInDays">The
            immutability period for the blobs in the container since the policy
            creation, in days.</param>
            <param name="state">The ImmutabilityPolicy state of a blob
            container, possible values include: Locked and Unlocked. Possible
            values include: 'Locked', 'Unlocked'</param>
            <param name="etag">ImmutabilityPolicy Etag.</param>
            <param name="updateHistory">The ImmutabilityPolicy update history
            of the blob container.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyProperties.ImmutabilityPeriodSinceCreationInDays">
            <summary>
            Gets or sets the immutability period for the blobs in the container
            since the policy creation, in days.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyProperties.State">
            <summary>
            Gets the ImmutabilityPolicy state of a blob container, possible
            values include: Locked and Unlocked. Possible values include:
            'Locked', 'Unlocked'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyProperties.Etag">
            <summary>
            Gets immutabilityPolicy Etag.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyProperties.UpdateHistory">
            <summary>
            Gets the ImmutabilityPolicy update history of the blob container.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyProperties.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyState">
            <summary>
            Defines values for ImmutabilityPolicyState.
            </summary>
            <summary>
            Determine base value for a given allowed value if exists, else return
            the value itself
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyUpdateType">
            <summary>
            Defines values for ImmutabilityPolicyUpdateType.
            </summary>
            <summary>
            Determine base value for a given allowed value if exists, else return
            the value itself
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.IPRule">
            <summary>
            IP rule with specific IP or IP range in CIDR format.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.IPRule.#ctor">
            <summary>
            Initializes a new instance of the IPRule class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.IPRule.#ctor(System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.Action})">
            <summary>
            Initializes a new instance of the IPRule class.
            </summary>
            <param name="iPAddressOrRange">Specifies the IP or IP range in CIDR
            format. Only IPV4 address is allowed.</param>
            <param name="action">The action of IP ACL rule. Possible values
            include: 'Allow'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.IPRule.IPAddressOrRange">
            <summary>
            Gets or sets specifies the IP or IP range in CIDR format. Only IPV4
            address is allowed.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.IPRule.Action">
            <summary>
            Gets or sets the action of IP ACL rule. Possible values include:
            'Allow'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.IPRule.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.KeyPermission">
            <summary>
            Defines values for KeyPermission.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.KeySource">
            <summary>
            Defines values for KeySource.
            </summary>
            <summary>
            Determine base value for a given allowed value if exists, else return
            the value itself
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.KeyVaultProperties">
            <summary>
            Properties of key vault.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.KeyVaultProperties.#ctor">
            <summary>
            Initializes a new instance of the KeyVaultProperties class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.KeyVaultProperties.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the KeyVaultProperties class.
            </summary>
            <param name="keyName">The name of KeyVault key.</param>
            <param name="keyVersion">The version of KeyVault key.</param>
            <param name="keyVaultUri">The Uri of KeyVault.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.KeyVaultProperties.KeyName">
            <summary>
            Gets or sets the name of KeyVault key.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.KeyVaultProperties.KeyVersion">
            <summary>
            Gets or sets the version of KeyVault key.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.KeyVaultProperties.KeyVaultUri">
            <summary>
            Gets or sets the Uri of KeyVault.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.Kind">
            <summary>
            Defines values for Kind.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerRequest">
            <summary>
            Lease Container request schema.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerRequest.#ctor">
            <summary>
            Initializes a new instance of the LeaseContainerRequest class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerRequest.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.Action1,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the LeaseContainerRequest class.
            </summary>
            <param name="action">Specifies the lease action. Can be one of the
            available actions. Possible values include: 'Acquire', 'Renew',
            'Change', 'Release', 'Break'</param>
            <param name="leaseId">Identifies the lease. Can be specified in any
            valid GUID string format.</param>
            <param name="breakPeriod">Optional. For a break action, proposed
            duration the lease should continue before it is broken, in seconds,
            between 0 and 60.</param>
            <param name="leaseDuration">Required for acquire. Specifies the
            duration of the lease, in seconds, or negative one (-1) for a lease
            that never expires.</param>
            <param name="proposedLeaseId">Optional for acquire, required for
            change. Proposed lease ID, in a GUID string format.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerRequest.Action">
            <summary>
            Gets or sets specifies the lease action. Can be one of the
            available actions. Possible values include: 'Acquire', 'Renew',
            'Change', 'Release', 'Break'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerRequest.LeaseId">
            <summary>
            Gets or sets identifies the lease. Can be specified in any valid
            GUID string format.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerRequest.BreakPeriod">
            <summary>
            Gets or sets optional. For a break action, proposed duration the
            lease should continue before it is broken, in seconds, between 0
            and 60.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerRequest.LeaseDuration">
            <summary>
            Gets or sets required for acquire. Specifies the duration of the
            lease, in seconds, or negative one (-1) for a lease that never
            expires.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerRequest.ProposedLeaseId">
            <summary>
            Gets or sets optional for acquire, required for change. Proposed
            lease ID, in a GUID string format.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerRequest.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerResponseInner">
            <summary>
            Lease Container response schema.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerResponseInner.#ctor">
            <summary>
            Initializes a new instance of the LeaseContainerResponseInner
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerResponseInner.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the LeaseContainerResponseInner
            class.
            </summary>
            <param name="leaseId">Returned unique lease ID that must be
            included with any request to delete the container, or to renew,
            change, or release the lease.</param>
            <param name="leaseTimeSeconds">Approximate time remaining in the
            lease period, in seconds.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerResponseInner.LeaseId">
            <summary>
            Gets or sets returned unique lease ID that must be included with
            any request to delete the container, or to renew, change, or
            release the lease.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerResponseInner.LeaseTimeSeconds">
            <summary>
            Gets or sets approximate time remaining in the lease period, in
            seconds.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseDuration">
            <summary>
            Defines values for LeaseDuration.
            </summary>
            <summary>
            Determine base value for a given allowed value if exists, else return
            the value itself
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseState">
            <summary>
            Defines values for LeaseState.
            </summary>
            <summary>
            Determine base value for a given allowed value if exists, else return
            the value itself
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseStatus">
            <summary>
            Defines values for LeaseStatus.
            </summary>
            <summary>
            Determine base value for a given allowed value if exists, else return
            the value itself
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.LegalHoldInner">
            <summary>
            The LegalHold property of a blob container.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.LegalHoldInner.#ctor">
            <summary>
            Initializes a new instance of the LegalHoldInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.LegalHoldInner.#ctor(System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the LegalHoldInner class.
            </summary>
            <param name="tags">Each tag should be 3 to 23 alphanumeric
            characters and is normalized to lower case at SRP.</param>
            <param name="hasLegalHold">The hasLegalHold public property is set
            to true by SRP if there are at least one existing tag. The
            hasLegalHold public property is set to false by SRP if all existing
            legal hold tags are cleared out. There can be a maximum of 1000
            blob containers with hasLegalHold=true for a given account.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.LegalHoldInner.HasLegalHold">
            <summary>
            Gets the hasLegalHold public property is set to true by SRP if
            there are at least one existing tag. The hasLegalHold public
            property is set to false by SRP if all existing legal hold tags are
            cleared out. There can be a maximum of 1000 blob containers with
            hasLegalHold=true for a given account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.LegalHoldInner.Tags">
            <summary>
            Gets or sets each tag should be 3 to 23 alphanumeric characters and
            is normalized to lower case at SRP.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.LegalHoldInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.LegalHoldProperties">
            <summary>
            The LegalHold property of a blob container.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.LegalHoldProperties.#ctor">
            <summary>
            Initializes a new instance of the LegalHoldProperties class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.LegalHoldProperties.#ctor(System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.TagProperty})">
            <summary>
            Initializes a new instance of the LegalHoldProperties class.
            </summary>
            <param name="hasLegalHold">The hasLegalHold public property is set
            to true by SRP if there are at least one existing tag. The
            hasLegalHold public property is set to false by SRP if all existing
            legal hold tags are cleared out. There can be a maximum of 1000
            blob containers with hasLegalHold=true for a given account.</param>
            <param name="tags">The list of LegalHold tags of a blob
            container.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.LegalHoldProperties.HasLegalHold">
            <summary>
            Gets the hasLegalHold public property is set to true by SRP if
            there are at least one existing tag. The hasLegalHold public
            property is set to false by SRP if all existing legal hold tags are
            cleared out. There can be a maximum of 1000 blob containers with
            hasLegalHold=true for a given account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.LegalHoldProperties.Tags">
            <summary>
            Gets or sets the list of LegalHold tags of a blob container.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.ListAccountSasResponseInner">
            <summary>
            The List SAS credentials operation response.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ListAccountSasResponseInner.#ctor">
            <summary>
            Initializes a new instance of the ListAccountSasResponseInner
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ListAccountSasResponseInner.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ListAccountSasResponseInner
            class.
            </summary>
            <param name="accountSasToken">List SAS credentials of storage
            account.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ListAccountSasResponseInner.AccountSasToken">
            <summary>
            Gets list SAS credentials of storage account.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItem">
            <summary>
            The blob container properties be listed out.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItem.#ctor">
            <summary>
            Initializes a new instance of the ListContainerItem class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItem.#ctor(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.PublicAccess},System.Nullable{System.DateTime},Microsoft.Azure.Management.Storage.Fluent.Models.LeaseStatus,Microsoft.Azure.Management.Storage.Fluent.Models.LeaseState,Microsoft.Azure.Management.Storage.Fluent.Models.LeaseDuration,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyProperties,Microsoft.Azure.Management.Storage.Fluent.Models.LegalHoldProperties,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the ListContainerItem class.
            </summary>
            <param name="etag">Resource Etag.</param>
            <param name="publicAccess">Specifies whether data in the container
            may be accessed publicly and the level of access. Possible values
            include: 'Container', 'Blob', 'None'</param>
            <param name="lastModifiedTime">Returns the date and time the
            container was last modified.</param>
            <param name="leaseStatus">The lease status of the container.
            Possible values include: 'Locked', 'Unlocked'</param>
            <param name="leaseState">Lease state of the container. Possible
            values include: 'Available', 'Leased', 'Expired', 'Breaking',
            'Broken'</param>
            <param name="leaseDuration">Specifies whether the lease on a
            container is of infinite or fixed duration, only when the container
            is leased. Possible values include: 'Infinite', 'Fixed'</param>
            <param name="metadata">A name-value pair to associate with the
            container as metadata.</param>
            <param name="immutabilityPolicy">The ImmutabilityPolicy property of
            the container.</param>
            <param name="legalHold">The LegalHold property of the
            container.</param>
            <param name="hasLegalHold">The hasLegalHold public property is set
            to true by SRP if there are at least one existing tag. The
            hasLegalHold public property is set to false by SRP if all existing
            legal hold tags are cleared out. There can be a maximum of 1000
            blob containers with hasLegalHold=true for a given account.</param>
            <param name="hasImmutabilityPolicy">The hasImmutabilityPolicy
            public property is set to true by SRP if ImmutabilityPolicy has
            been created for this container. The hasImmutabilityPolicy public
            property is set to false by SRP if ImmutabilityPolicy has not been
            created for this container.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItem.PublicAccess">
            <summary>
            Gets or sets specifies whether data in the container may be
            accessed publicly and the level of access. Possible values include:
            'Container', 'Blob', 'None'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItem.LastModifiedTime">
            <summary>
            Gets returns the date and time the container was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItem.LeaseStatus">
            <summary>
            Gets the lease status of the container. Possible values include:
            'Locked', 'Unlocked'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItem.LeaseState">
            <summary>
            Gets lease state of the container. Possible values include:
            'Available', 'Leased', 'Expired', 'Breaking', 'Broken'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItem.LeaseDuration">
            <summary>
            Gets specifies whether the lease on a container is of infinite or
            fixed duration, only when the container is leased. Possible values
            include: 'Infinite', 'Fixed'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItem.Metadata">
            <summary>
            Gets or sets a name-value pair to associate with the container as
            metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItem.ImmutabilityPolicy">
            <summary>
            Gets the ImmutabilityPolicy property of the container.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItem.LegalHold">
            <summary>
            Gets the LegalHold property of the container.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItem.HasLegalHold">
            <summary>
            Gets the hasLegalHold public property is set to true by SRP if
            there are at least one existing tag. The hasLegalHold public
            property is set to false by SRP if all existing legal hold tags are
            cleared out. There can be a maximum of 1000 blob containers with
            hasLegalHold=true for a given account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItem.HasImmutabilityPolicy">
            <summary>
            Gets the hasImmutabilityPolicy public property is set to true by
            SRP if ImmutabilityPolicy has been created for this container. The
            hasImmutabilityPolicy public property is set to false by SRP if
            ImmutabilityPolicy has not been created for this container.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItem.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItemsInner">
            <summary>
            The list of blob containers.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItemsInner.#ctor">
            <summary>
            Initializes a new instance of the ListContainerItemsInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItemsInner.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItem})">
            <summary>
            Initializes a new instance of the ListContainerItemsInner class.
            </summary>
            <param name="value">The list of blob containers.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItemsInner.Value">
            <summary>
            Gets or sets the list of blob containers.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.ListServiceSasResponseInner">
            <summary>
            The List service SAS credentials operation response.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ListServiceSasResponseInner.#ctor">
            <summary>
            Initializes a new instance of the ListServiceSasResponseInner
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ListServiceSasResponseInner.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ListServiceSasResponseInner
            class.
            </summary>
            <param name="serviceSasToken">List service SAS credentials of
            specific resource.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ListServiceSasResponseInner.ServiceSasToken">
            <summary>
            Gets list service SAS credentials of specific resource.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyAction">
            <summary>
            Actions are applied to the filtered blobs when the execution condition
            is met.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyAction.#ctor">
            <summary>
            Initializes a new instance of the ManagementPolicyAction class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyAction.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyBaseBlob,Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySnapShot)">
            <summary>
            Initializes a new instance of the ManagementPolicyAction class.
            </summary>
            <param name="baseBlob">The management policy action for base
            blob</param>
            <param name="snapshot">The management policy action for
            snapshot</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyAction.BaseBlob">
            <summary>
            Gets or sets the management policy action for base blob
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyAction.Snapshot">
            <summary>
            Gets or sets the management policy action for snapshot
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyAction.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyBaseBlob">
            <summary>
            Management policy action for base blob.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyBaseBlob.#ctor">
            <summary>
            Initializes a new instance of the ManagementPolicyBaseBlob class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyBaseBlob.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.DateAfterModification,Microsoft.Azure.Management.Storage.Fluent.Models.DateAfterModification,Microsoft.Azure.Management.Storage.Fluent.Models.DateAfterModification)">
            <summary>
            Initializes a new instance of the ManagementPolicyBaseBlob class.
            </summary>
            <param name="tierToCool">The function to tier blobs to cool
            storage. Support blobs currently at Hot tier</param>
            <param name="tierToArchive">The function to tier blobs to archive
            storage. Support blobs currently at Hot or Cool tier</param>
            <param name="delete">The function to delete the blob</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyBaseBlob.TierToCool">
            <summary>
            Gets or sets the function to tier blobs to cool storage. Support
            blobs currently at Hot tier
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyBaseBlob.TierToArchive">
            <summary>
            Gets or sets the function to tier blobs to archive storage. Support
            blobs currently at Hot or Cool tier
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyBaseBlob.Delete">
            <summary>
            Gets or sets the function to delete the blob
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyBaseBlob.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyDefinition">
            <summary>
            An object that defines the Lifecycle rule. Each definition is made up
            with a filters set and an actions set.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyDefinition.#ctor">
            <summary>
            Initializes a new instance of the ManagementPolicyDefinition class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyDefinition.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyAction,Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyFilter)">
            <summary>
            Initializes a new instance of the ManagementPolicyDefinition class.
            </summary>
            <param name="actions">An object that defines the action
            set.</param>
            <param name="filters">An object that defines the filter
            set.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyDefinition.Actions">
            <summary>
            Gets or sets an object that defines the action set.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyDefinition.Filters">
            <summary>
            Gets or sets an object that defines the filter set.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyDefinition.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyFilter">
            <summary>
            Filters limit rule actions to a subset of blobs within the storage
            account. If multiple filters are defined, a logical AND is performed on
            all filters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyFilter.#ctor">
            <summary>
            Initializes a new instance of the ManagementPolicyFilter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyFilter.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the ManagementPolicyFilter class.
            </summary>
            <param name="blobTypes">An array of predefined enum values. Only
            blockBlob is supported.</param>
            <param name="prefixMatch">An array of strings for prefixes to be
            match.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyFilter.PrefixMatch">
            <summary>
            Gets or sets an array of strings for prefixes to be match.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyFilter.BlobTypes">
            <summary>
            Gets or sets an array of predefined enum values. Only blockBlob is
            supported.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyFilter.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyInner">
            <summary>
            The Get Storage Account ManagementPolicies operation response.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyInner.#ctor">
            <summary>
            Initializes a new instance of the ManagementPolicyInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyInner.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySchema,System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the ManagementPolicyInner class.
            </summary>
            <param name="policy">The Storage Account ManagementPolicy, in JSON
            format. See more details in:
            https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.</param>
            <param name="lastModifiedTime">Returns the date and time the
            ManagementPolicies was last modified.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyInner.LastModifiedTime">
            <summary>
            Gets returns the date and time the ManagementPolicies was last
            modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyInner.Policy">
            <summary>
            Gets or sets the Storage Account ManagementPolicy, in JSON format.
            See more details in:
            https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyRule">
            <summary>
            An object that wraps the Lifecycle rule. Each rule is uniquely defined
            by name.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyRule.#ctor">
            <summary>
            Initializes a new instance of the ManagementPolicyRule class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyRule.#ctor(System.String,Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyDefinition,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the ManagementPolicyRule class.
            </summary>
            <param name="name">A rule name can contain any combination of alpha
            numeric characters. Rule name is case-sensitive. It must be unique
            within a policy.</param>
            <param name="definition">An object that defines the Lifecycle
            rule.</param>
            <param name="enabled">Rule is enabled if set to true.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyRule.#cctor">
            <summary>
            Static constructor for ManagementPolicyRule class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyRule.Enabled">
            <summary>
            Gets or sets rule is enabled if set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyRule.Name">
            <summary>
            Gets or sets a rule name can contain any combination of alpha
            numeric characters. Rule name is case-sensitive. It must be unique
            within a policy.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyRule.Definition">
            <summary>
            Gets or sets an object that defines the Lifecycle rule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyRule.Type">
            <summary>
            The valid value is Lifecycle
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyRule.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySchema">
            <summary>
            The Storage Account ManagementPolicies Rules. See more details in:
            https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySchema.#ctor">
            <summary>
            Initializes a new instance of the ManagementPolicySchema class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySchema.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyRule})">
            <summary>
            Initializes a new instance of the ManagementPolicySchema class.
            </summary>
            <param name="rules">The Storage Account ManagementPolicies Rules.
            See more details in:
            https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySchema.Rules">
            <summary>
            Gets or sets the Storage Account ManagementPolicies Rules. See more
            details in:
            https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySchema.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySnapShot">
            <summary>
            Management policy action for snapshot.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySnapShot.#ctor">
            <summary>
            Initializes a new instance of the ManagementPolicySnapShot class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySnapShot.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.DateAfterCreation)">
            <summary>
            Initializes a new instance of the ManagementPolicySnapShot class.
            </summary>
            <param name="delete">The function to delete the blob
            snapshot</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySnapShot.Delete">
            <summary>
            Gets or sets the function to delete the blob snapshot
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySnapShot.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.MetricSpecification">
            <summary>
            Metric specification of operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.MetricSpecification.#ctor">
            <summary>
            Initializes a new instance of the MetricSpecification class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.MetricSpecification.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.Dimension},System.String,System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            Initializes a new instance of the MetricSpecification class.
            </summary>
            <param name="name">Name of metric specification.</param>
            <param name="displayName">Display name of metric
            specification.</param>
            <param name="displayDescription">Display description of metric
            specification.</param>
            <param name="unit">Unit could be Bytes or Count.</param>
            <param name="dimensions">Dimensions of blobs, including blob type
            and access tier.</param>
            <param name="aggregationType">Aggregation type could be
            Average.</param>
            <param name="fillGapWithZero">The property to decide fill gap with
            zero or not.</param>
            <param name="category">The category this metric specification
            belong to, could be Capacity.</param>
            <param name="resourceIdDimensionNameOverride">Account Resource
            Id.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.MetricSpecification.Name">
            <summary>
            Gets or sets name of metric specification.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.MetricSpecification.DisplayName">
            <summary>
            Gets or sets display name of metric specification.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.MetricSpecification.DisplayDescription">
            <summary>
            Gets or sets display description of metric specification.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.MetricSpecification.Unit">
            <summary>
            Gets or sets unit could be Bytes or Count.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.MetricSpecification.Dimensions">
            <summary>
            Gets or sets dimensions of blobs, including blob type and access
            tier.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.MetricSpecification.AggregationType">
            <summary>
            Gets or sets aggregation type could be Average.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.MetricSpecification.FillGapWithZero">
            <summary>
            Gets or sets the property to decide fill gap with zero or not.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.MetricSpecification.Category">
            <summary>
            Gets or sets the category this metric specification belong to,
            could be Capacity.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.MetricSpecification.ResourceIdDimensionNameOverride">
            <summary>
            Gets or sets account Resource Id.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.NetworkRuleSet">
            <summary>
            Network rule set
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.NetworkRuleSet.#ctor">
            <summary>
            Initializes a new instance of the NetworkRuleSet class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.NetworkRuleSet.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.DefaultAction,Microsoft.Azure.Management.Storage.Fluent.Models.Bypass,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.VirtualNetworkRule},System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.IPRule})">
            <summary>
            Initializes a new instance of the NetworkRuleSet class.
            </summary>
            <param name="defaultAction">Specifies the default action of allow
            or deny when no other rules match. Possible values include:
            'Allow', 'Deny'</param>
            <param name="bypass">Specifies whether traffic is bypassed for
            Logging/Metrics/AzureServices. Possible values are any combination
            of Logging|Metrics|AzureServices (For example, "Logging, Metrics"),
            or None to bypass none of those traffics. Possible values include:
            'None', 'Logging', 'Metrics', 'AzureServices'</param>
            <param name="virtualNetworkRules">Sets the virtual network
            rules</param>
            <param name="ipRules">Sets the IP ACL rules</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.NetworkRuleSet.Bypass">
            <summary>
            Gets or sets specifies whether traffic is bypassed for
            Logging/Metrics/AzureServices. Possible values are any combination
            of Logging|Metrics|AzureServices (For example, "Logging, Metrics"),
            or None to bypass none of those traffics. Possible values include:
            'None', 'Logging', 'Metrics', 'AzureServices'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.NetworkRuleSet.VirtualNetworkRules">
            <summary>
            Gets or sets sets the virtual network rules
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.NetworkRuleSet.IpRules">
            <summary>
            Gets or sets sets the IP ACL rules
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.NetworkRuleSet.DefaultAction">
            <summary>
            Gets or sets specifies the default action of allow or deny when no
            other rules match. Possible values include: 'Allow', 'Deny'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.NetworkRuleSet.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.OperationDisplay">
            <summary>
            Display metadata associated with the operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.OperationDisplay.#ctor">
            <summary>
            Initializes a new instance of the OperationDisplay class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.OperationDisplay.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the OperationDisplay class.
            </summary>
            <param name="provider">Service provider: Microsoft Storage.</param>
            <param name="resource">Resource on which the operation is performed
            etc.</param>
            <param name="operation">Type of operation: get, read, delete,
            etc.</param>
            <param name="description">Description of the operation.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.OperationDisplay.Provider">
            <summary>
            Gets or sets service provider: Microsoft Storage.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.OperationDisplay.Resource">
            <summary>
            Gets or sets resource on which the operation is performed etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.OperationDisplay.Operation">
            <summary>
            Gets or sets type of operation: get, read, delete, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.OperationDisplay.Description">
            <summary>
            Gets or sets description of the operation.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.OperationInner">
            <summary>
            Storage REST API operation definition.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.OperationInner.#ctor">
            <summary>
            Initializes a new instance of the OperationInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.OperationInner.#ctor(System.String,Microsoft.Azure.Management.Storage.Fluent.Models.OperationDisplay,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSpecification)">
            <summary>
            Initializes a new instance of the OperationInner class.
            </summary>
            <param name="name">Operation name:
            {provider}/{resource}/{operation}</param>
            <param name="display">Display metadata associated with the
            operation.</param>
            <param name="origin">The origin of operations.</param>
            <param name="serviceSpecification">One property of operation,
            include metric specifications.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.OperationInner.Name">
            <summary>
            Gets or sets operation name: {provider}/{resource}/{operation}
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.OperationInner.Display">
            <summary>
            Gets or sets display metadata associated with the operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.OperationInner.Origin">
            <summary>
            Gets or sets the origin of operations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.OperationInner.ServiceSpecification">
            <summary>
            Gets or sets one property of operation, include metric
            specifications.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.Page`1">
            <summary>
            Defines a page in Azure responses.
            </summary>
            <typeparam name="T">Type of the page content items</typeparam>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.Page`1.NextPageLink">
            <summary>
            Gets the link to the next page.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.Page`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A an enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.Page`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A an enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.Permissions">
            <summary>
            Defines values for Permissions.
            </summary>
            <summary>
            Determine base value for a given allowed value if exists, else return
            the value itself
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.ProvisioningState">
            <summary>
            Defines values for ProvisioningState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.ProxyResourceInner">
            <summary>
            The resource model definition for a ARM proxy resource. It will have
            everything other than required location and tags
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ProxyResourceInner.#ctor">
            <summary>
            Initializes a new instance of the ProxyResourceInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ProxyResourceInner.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the ProxyResourceInner class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.PublicAccess">
            <summary>
            Defines values for PublicAccess.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.Reason">
            <summary>
            Defines values for Reason.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.ReasonCode">
            <summary>
            Defines values for ReasonCode.
            </summary>
            <summary>
            Determine base value for a given allowed value if exists, else return
            the value itself
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.Restriction">
            <summary>
            The restriction because of which SKU cannot be used.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.Restriction.#ctor">
            <summary>
            Initializes a new instance of the Restriction class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.Restriction.#ctor(System.String,System.Collections.Generic.IList{System.String},Microsoft.Azure.Management.Storage.Fluent.Models.ReasonCode)">
            <summary>
            Initializes a new instance of the Restriction class.
            </summary>
            <param name="type">The type of restrictions. As of now only
            possible value for this is location.</param>
            <param name="values">The value of restrictions. If the restriction
            type is set to location. This would be different locations where
            the SKU is restricted.</param>
            <param name="reasonCode">The reason for the restriction. As of now
            this can be "QuotaId" or "NotAvailableForSubscription". Quota Id is
            set when the SKU has requiredQuotas parameter as the subscription
            does not belong to that quota. The "NotAvailableForSubscription" is
            related to capacity at DC. Possible values include: 'QuotaId',
            'NotAvailableForSubscription'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.Restriction.Type">
            <summary>
            Gets the type of restrictions. As of now only possible value for
            this is location.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.Restriction.Values">
            <summary>
            Gets the value of restrictions. If the restriction type is set to
            location. This would be different locations where the SKU is
            restricted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.Restriction.ReasonCode">
            <summary>
            Gets or sets the reason for the restriction. As of now this can be
            "QuotaId" or "NotAvailableForSubscription". Quota Id is set when
            the SKU has requiredQuotas parameter as the subscription does not
            belong to that quota. The "NotAvailableForSubscription" is related
            to capacity at DC. Possible values include: 'QuotaId',
            'NotAvailableForSubscription'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.Services">
            <summary>
            Defines values for Services.
            </summary>
            <summary>
            Determine base value for a given allowed value if exists, else return
            the value itself
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters">
            <summary>
            The parameters to list service SAS credentials of a specific resource.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.#ctor">
            <summary>
            Initializes a new instance of the ServiceSasParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.#ctor(System.String,Microsoft.Azure.Management.Storage.Fluent.Models.SignedResource,Microsoft.Azure.Management.Storage.Fluent.Models.Permissions,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.HttpProtocol},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the ServiceSasParameters class.
            </summary>
            <param name="canonicalizedResource">The canonical path to the
            signed resource.</param>
            <param name="resource">The signed services accessible with the
            service SAS. Possible values include: Blob (b), Container (c), File
            (f), Share (s). Possible values include: 'b', 'c', 'f', 's'</param>
            <param name="permissions">The signed permissions for the service
            SAS. Possible values include: Read (r), Write (w), Delete (d), List
            (l), Add (a), Create (c), Update (u) and Process (p). Possible
            values include: 'r', 'd', 'w', 'l', 'a', 'c', 'u', 'p'</param>
            <param name="iPAddressOrRange">An IP address or a range of IP
            addresses from which to accept requests.</param>
            <param name="protocols">The protocol permitted for a request made
            with the account SAS. Possible values include: 'https,http',
            'https'</param>
            <param name="sharedAccessStartTime">The time at which the SAS
            becomes valid.</param>
            <param name="sharedAccessExpiryTime">The time at which the shared
            access signature becomes invalid.</param>
            <param name="identifier">A unique value up to 64 characters in
            length that correlates to an access policy specified for the
            container, queue, or table.</param>
            <param name="partitionKeyStart">The start of partition key.</param>
            <param name="partitionKeyEnd">The end of partition key.</param>
            <param name="rowKeyStart">The start of row key.</param>
            <param name="rowKeyEnd">The end of row key.</param>
            <param name="keyToSign">The key to sign the account SAS token
            with.</param>
            <param name="cacheControl">The response header override for cache
            control.</param>
            <param name="contentDisposition">The response header override for
            content disposition.</param>
            <param name="contentEncoding">The response header override for
            content encoding.</param>
            <param name="contentLanguage">The response header override for
            content language.</param>
            <param name="contentType">The response header override for content
            type.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.CanonicalizedResource">
            <summary>
            Gets or sets the canonical path to the signed resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.Resource">
            <summary>
            Gets or sets the signed services accessible with the service SAS.
            Possible values include: Blob (b), Container (c), File (f), Share
            (s). Possible values include: 'b', 'c', 'f', 's'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.Permissions">
            <summary>
            Gets or sets the signed permissions for the service SAS. Possible
            values include: Read (r), Write (w), Delete (d), List (l), Add (a),
            Create (c), Update (u) and Process (p). Possible values include:
            'r', 'd', 'w', 'l', 'a', 'c', 'u', 'p'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.IPAddressOrRange">
            <summary>
            Gets or sets an IP address or a range of IP addresses from which to
            accept requests.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.Protocols">
            <summary>
            Gets or sets the protocol permitted for a request made with the
            account SAS. Possible values include: 'https,http', 'https'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.SharedAccessStartTime">
            <summary>
            Gets or sets the time at which the SAS becomes valid.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.SharedAccessExpiryTime">
            <summary>
            Gets or sets the time at which the shared access signature becomes
            invalid.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.Identifier">
            <summary>
            Gets or sets a unique value up to 64 characters in length that
            correlates to an access policy specified for the container, queue,
            or table.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.PartitionKeyStart">
            <summary>
            Gets or sets the start of partition key.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.PartitionKeyEnd">
            <summary>
            Gets or sets the end of partition key.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.RowKeyStart">
            <summary>
            Gets or sets the start of row key.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.RowKeyEnd">
            <summary>
            Gets or sets the end of row key.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.KeyToSign">
            <summary>
            Gets or sets the key to sign the account SAS token with.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.CacheControl">
            <summary>
            Gets or sets the response header override for cache control.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.ContentDisposition">
            <summary>
            Gets or sets the response header override for content disposition.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.ContentEncoding">
            <summary>
            Gets or sets the response header override for content encoding.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.ContentLanguage">
            <summary>
            Gets or sets the response header override for content language.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.ContentType">
            <summary>
            Gets or sets the response header override for content type.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSpecification">
            <summary>
            One property of operation, include metric specifications.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSpecification.#ctor">
            <summary>
            Initializes a new instance of the ServiceSpecification class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSpecification.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.MetricSpecification})">
            <summary>
            Initializes a new instance of the ServiceSpecification class.
            </summary>
            <param name="metricSpecifications">Metric specifications of
            operation.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSpecification.MetricSpecifications">
            <summary>
            Gets or sets metric specifications of operation.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.SignedResource">
            <summary>
            Defines values for SignedResource.
            </summary>
            <summary>
            Determine base value for a given allowed value if exists, else return
            the value itself
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.SignedResourceTypes">
            <summary>
            Defines values for SignedResourceTypes.
            </summary>
            <summary>
            Determine base value for a given allowed value if exists, else return
            the value itself
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.SKUCapability">
            <summary>
            The capability information in the specified SKU, including file
            encryption, network ACLs, change notification, etc.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.SKUCapability.#ctor">
            <summary>
            Initializes a new instance of the SKUCapability class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.SKUCapability.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the SKUCapability class.
            </summary>
            <param name="name">The name of capability, The capability
            information in the specified SKU, including file encryption,
            network ACLs, change notification, etc.</param>
            <param name="value">A string value to indicate states of given
            capability. Possibly 'true' or 'false'.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.SKUCapability.Name">
            <summary>
            Gets the name of capability, The capability information in the
            specified SKU, including file encryption, network ACLs, change
            notification, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.SKUCapability.Value">
            <summary>
            Gets a string value to indicate states of given capability.
            Possibly 'true' or 'false'.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.SkuInner">
            <summary>
            The SKU of the storage account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.SkuInner.#ctor">
            <summary>
            Initializes a new instance of the SkuInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.SkuInner.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.SkuName,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.SkuTier},System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.Kind},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.SKUCapability},System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.Restriction})">
            <summary>
            Initializes a new instance of the SkuInner class.
            </summary>
            <param name="name">Gets or sets the SKU name. Required for account
            creation; optional for update. Note that in older versions, SKU
            name was called accountType. Possible values include:
            'Standard_LRS', 'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS',
            'Premium_LRS', 'Premium_ZRS'</param>
            <param name="tier">Gets the SKU tier. This is based on the SKU
            name. Possible values include: 'Standard', 'Premium'</param>
            <param name="resourceType">The type of the resource, usually it is
            'storageAccounts'.</param>
            <param name="kind">Indicates the type of storage account. Possible
            values include: 'Storage', 'StorageV2', 'BlobStorage',
            'FileStorage', 'BlockBlobStorage'</param>
            <param name="locations">The set of locations that the SKU is
            available. This will be supported and registered Azure Geo Regions
            (e.g. West US, East US, Southeast Asia, etc.).</param>
            <param name="capabilities">The capability information in the
            specified SKU, including file encryption, network ACLs, change
            notification, etc.</param>
            <param name="restrictions">The restrictions because of which SKU
            cannot be used. This is empty if there are no restrictions.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.SkuInner.Name">
            <summary>
            Gets or sets the SKU name. Required for account creation; optional
            for update. Note that in older versions, SKU name was called
            accountType. Possible values include: 'Standard_LRS',
            'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS', 'Premium_LRS',
            'Premium_ZRS'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.SkuInner.Tier">
            <summary>
            Gets the SKU tier. This is based on the SKU name. Possible values
            include: 'Standard', 'Premium'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.SkuInner.ResourceType">
            <summary>
            Gets the type of the resource, usually it is 'storageAccounts'.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.SkuInner.Kind">
            <summary>
            Gets indicates the type of storage account. Possible values
            include: 'Storage', 'StorageV2', 'BlobStorage', 'FileStorage',
            'BlockBlobStorage'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.SkuInner.Locations">
            <summary>
            Gets the set of locations that the SKU is available. This will be
            supported and registered Azure Geo Regions (e.g. West US, East US,
            Southeast Asia, etc.).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.SkuInner.Capabilities">
            <summary>
            Gets the capability information in the specified SKU, including
            file encryption, network ACLs, change notification, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.SkuInner.Restrictions">
            <summary>
            Gets or sets the restrictions because of which SKU cannot be used.
            This is empty if there are no restrictions.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.SkuInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.SkuName">
            <summary>
            Defines values for SkuName.
            </summary>
            <summary>
            Determine base value for a given allowed value if exists, else return
            the value itself
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.SkuTier">
            <summary>
            Defines values for SkuTier.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.State">
            <summary>
            Defines values for State.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCheckNameAvailabilityParameters">
            <summary>
            The parameters used to check the availability of the storage account
            name.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCheckNameAvailabilityParameters.#ctor">
            <summary>
            Initializes a new instance of the
            StorageAccountCheckNameAvailabilityParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCheckNameAvailabilityParameters.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            StorageAccountCheckNameAvailabilityParameters class.
            </summary>
            <param name="name">The storage account name.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCheckNameAvailabilityParameters.#cctor">
            <summary>
            Static constructor for
            StorageAccountCheckNameAvailabilityParameters class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCheckNameAvailabilityParameters.Name">
            <summary>
            Gets or sets the storage account name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCheckNameAvailabilityParameters.Type">
            <summary>
            The type of resource, Microsoft.Storage/storageAccounts
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCheckNameAvailabilityParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters">
            <summary>
            The parameters used when creating a storage account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters.#ctor">
            <summary>
            Initializes a new instance of the StorageAccountCreateParameters
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.SkuInner,Microsoft.Azure.Management.Storage.Fluent.Models.Kind,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Storage.Fluent.Models.Identity,Microsoft.Azure.Management.Storage.Fluent.Models.CustomDomain,Microsoft.Azure.Management.Storage.Fluent.Models.Encryption,Microsoft.Azure.Management.Storage.Fluent.Models.NetworkRuleSet,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.AccessTier},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the StorageAccountCreateParameters
            class.
            </summary>
            <param name="sku">Required. Gets or sets the SKU name.</param>
            <param name="kind">Required. Indicates the type of storage account.
            Possible values include: 'Storage', 'StorageV2', 'BlobStorage',
            'FileStorage', 'BlockBlobStorage'</param>
            <param name="location">Required. Gets or sets the location of the
            resource. This will be one of the supported and registered Azure
            Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo
            region of a resource cannot be changed once it is created, but if
            an identical geo region is specified on update, the request will
            succeed.</param>
            <param name="tags">Gets or sets a list of key value pairs that
            describe the resource. These tags can be used for viewing and
            grouping this resource (across resource groups). A maximum of 15
            tags can be provided for a resource. Each tag must have a key with
            a length no greater than 128 characters and a value with a length
            no greater than 256 characters.</param>
            <param name="identity">The identity of the resource.</param>
            <param name="customDomain">User domain assigned to the storage
            account. Name is the CNAME source. Only one custom domain is
            supported per storage account at this time. To clear the existing
            custom domain, use an empty string for the custom domain name
            property.</param>
            <param name="encryption">Provides the encryption settings on the
            account. If left unspecified the account encryption settings will
            remain the same. The default setting is unencrypted.</param>
            <param name="networkRuleSet">Network rule set</param>
            <param name="accessTier">Required for storage accounts where kind =
            BlobStorage. The access tier used for billing. Possible values
            include: 'Hot', 'Cool'</param>
            <param name="enableAzureFilesAadIntegration">Enables Azure Files
            AAD Integration for SMB if sets to true.</param>
            <param name="enableHttpsTrafficOnly">Allows https traffic only to
            storage service if sets to true.</param>
            <param name="isHnsEnabled">Account HierarchicalNamespace enabled if
            sets to true.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters.Sku">
            <summary>
            Gets or sets required. Gets or sets the SKU name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters.Kind">
            <summary>
            Gets or sets required. Indicates the type of storage account.
            Possible values include: 'Storage', 'StorageV2', 'BlobStorage',
            'FileStorage', 'BlockBlobStorage'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters.Location">
            <summary>
            Gets or sets required. Gets or sets the location of the resource.
            This will be one of the supported and registered Azure Geo Regions
            (e.g. West US, East US, Southeast Asia, etc.). The geo region of a
            resource cannot be changed once it is created, but if an identical
            geo region is specified on update, the request will succeed.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters.Tags">
            <summary>
            Gets or sets a list of key value pairs that describe the resource.
            These tags can be used for viewing and grouping this resource
            (across resource groups). A maximum of 15 tags can be provided for
            a resource. Each tag must have a key with a length no greater than
            128 characters and a value with a length no greater than 256
            characters.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters.Identity">
            <summary>
            Gets or sets the identity of the resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters.CustomDomain">
            <summary>
            Gets or sets user domain assigned to the storage account. Name is
            the CNAME source. Only one custom domain is supported per storage
            account at this time. To clear the existing custom domain, use an
            empty string for the custom domain name property.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters.Encryption">
            <summary>
            Gets or sets provides the encryption settings on the account. If
            left unspecified the account encryption settings will remain the
            same. The default setting is unencrypted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters.NetworkRuleSet">
            <summary>
            Gets or sets network rule set
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters.AccessTier">
            <summary>
            Gets or sets required for storage accounts where kind =
            BlobStorage. The access tier used for billing. Possible values
            include: 'Hot', 'Cool'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters.EnableAzureFilesAadIntegration">
            <summary>
            Gets or sets enables Azure Files AAD Integration for SMB if sets to
            true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters.EnableHttpsTrafficOnly">
            <summary>
            Gets or sets allows https traffic only to storage service if sets
            to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters.IsHnsEnabled">
            <summary>
            Gets or sets account HierarchicalNamespace enabled if sets to true.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountExpand">
            <summary>
            Defines values for StorageAccountExpand.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner">
            <summary>
            The storage account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.#ctor">
            <summary>
            Initializes a new instance of the StorageAccountInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Storage.Fluent.Models.SkuInner,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.Kind},Microsoft.Azure.Management.Storage.Fluent.Models.Identity,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.ProvisioningState},Microsoft.Azure.Management.Storage.Fluent.Models.Endpoints,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.AccountStatus},System.Nullable{System.DateTime},System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.AccountStatus},System.Nullable{System.DateTime},Microsoft.Azure.Management.Storage.Fluent.Models.CustomDomain,Microsoft.Azure.Management.Storage.Fluent.Models.Endpoints,Microsoft.Azure.Management.Storage.Fluent.Models.Encryption,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.AccessTier},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.Azure.Management.Storage.Fluent.Models.NetworkRuleSet,System.Nullable{System.Boolean},Microsoft.Azure.Management.Storage.Fluent.Models.GeoReplicationStats,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the StorageAccountInner class.
            </summary>
            <param name="location">The geo-location where the resource
            lives</param>
            <param name="tags">Resource tags.</param>
            <param name="sku">Gets the SKU.</param>
            <param name="kind">Gets the Kind. Possible values include:
            'Storage', 'StorageV2', 'BlobStorage', 'FileStorage',
            'BlockBlobStorage'</param>
            <param name="identity">The identity of the resource.</param>
            <param name="provisioningState">Gets the status of the storage
            account at the time the operation was called. Possible values
            include: 'Creating', 'ResolvingDNS', 'Succeeded'</param>
            <param name="primaryEndpoints">Gets the URLs that are used to
            perform a retrieval of a public blob, queue, or table object. Note
            that Standard_ZRS and Premium_LRS accounts only return the blob
            endpoint.</param>
            <param name="primaryLocation">Gets the location of the primary data
            center for the storage account.</param>
            <param name="statusOfPrimary">Gets the status indicating whether
            the primary location of the storage account is available or
            unavailable. Possible values include: 'available',
            'unavailable'</param>
            <param name="lastGeoFailoverTime">Gets the timestamp of the most
            recent instance of a failover to the secondary location. Only the
            most recent timestamp is retained. This element is not returned if
            there has never been a failover instance. Only available if the
            accountType is Standard_GRS or Standard_RAGRS.</param>
            <param name="secondaryLocation">Gets the location of the
            geo-replicated secondary for the storage account. Only available if
            the accountType is Standard_GRS or Standard_RAGRS.</param>
            <param name="statusOfSecondary">Gets the status indicating whether
            the secondary location of the storage account is available or
            unavailable. Only available if the SKU name is Standard_GRS or
            Standard_RAGRS. Possible values include: 'available',
            'unavailable'</param>
            <param name="creationTime">Gets the creation date and time of the
            storage account in UTC.</param>
            <param name="customDomain">Gets the custom domain the user assigned
            to this storage account.</param>
            <param name="secondaryEndpoints">Gets the URLs that are used to
            perform a retrieval of a public blob, queue, or table object from
            the secondary location of the storage account. Only available if
            the SKU name is Standard_RAGRS.</param>
            <param name="encryption">Gets the encryption settings on the
            account. If unspecified, the account is unencrypted.</param>
            <param name="accessTier">Required for storage accounts where kind =
            BlobStorage. The access tier used for billing. Possible values
            include: 'Hot', 'Cool'</param>
            <param name="enableAzureFilesAadIntegration">Enables Azure Files
            AAD Integration for SMB if sets to true.</param>
            <param name="enableHttpsTrafficOnly">Allows https traffic only to
            storage service if sets to true.</param>
            <param name="networkRuleSet">Network rule set</param>
            <param name="isHnsEnabled">Account HierarchicalNamespace enabled if
            sets to true.</param>
            <param name="geoReplicationStats">Geo Replication Stats</param>
            <param name="failoverInProgress">If the failover is in progress,
            the value will be true, otherwise, it will be null.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.Sku">
            <summary>
            Gets the SKU.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.Kind">
            <summary>
            Gets the Kind. Possible values include: 'Storage', 'StorageV2',
            'BlobStorage', 'FileStorage', 'BlockBlobStorage'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.Identity">
            <summary>
            Gets or sets the identity of the resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.ProvisioningState">
            <summary>
            Gets the status of the storage account at the time the operation
            was called. Possible values include: 'Creating', 'ResolvingDNS',
            'Succeeded'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.PrimaryEndpoints">
            <summary>
            Gets the URLs that are used to perform a retrieval of a public
            blob, queue, or table object. Note that Standard_ZRS and
            Premium_LRS accounts only return the blob endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.PrimaryLocation">
            <summary>
            Gets the location of the primary data center for the storage
            account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.StatusOfPrimary">
            <summary>
            Gets the status indicating whether the primary location of the
            storage account is available or unavailable. Possible values
            include: 'available', 'unavailable'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.LastGeoFailoverTime">
            <summary>
            Gets the timestamp of the most recent instance of a failover to the
            secondary location. Only the most recent timestamp is retained.
            This element is not returned if there has never been a failover
            instance. Only available if the accountType is Standard_GRS or
            Standard_RAGRS.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.SecondaryLocation">
            <summary>
            Gets the location of the geo-replicated secondary for the storage
            account. Only available if the accountType is Standard_GRS or
            Standard_RAGRS.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.StatusOfSecondary">
            <summary>
            Gets the status indicating whether the secondary location of the
            storage account is available or unavailable. Only available if the
            SKU name is Standard_GRS or Standard_RAGRS. Possible values
            include: 'available', 'unavailable'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.CreationTime">
            <summary>
            Gets the creation date and time of the storage account in UTC.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.CustomDomain">
            <summary>
            Gets the custom domain the user assigned to this storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.SecondaryEndpoints">
            <summary>
            Gets the URLs that are used to perform a retrieval of a public
            blob, queue, or table object from the secondary location of the
            storage account. Only available if the SKU name is Standard_RAGRS.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.Encryption">
            <summary>
            Gets the encryption settings on the account. If unspecified, the
            account is unencrypted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.AccessTier">
            <summary>
            Gets required for storage accounts where kind = BlobStorage. The
            access tier used for billing. Possible values include: 'Hot',
            'Cool'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.EnableAzureFilesAadIntegration">
            <summary>
            Gets or sets enables Azure Files AAD Integration for SMB if sets to
            true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.EnableHttpsTrafficOnly">
            <summary>
            Gets or sets allows https traffic only to storage service if sets
            to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.NetworkRuleSet">
            <summary>
            Gets network rule set
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.IsHnsEnabled">
            <summary>
            Gets or sets account HierarchicalNamespace enabled if sets to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.GeoReplicationStats">
            <summary>
            Gets geo Replication Stats
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.FailoverInProgress">
            <summary>
            Gets if the failover is in progress, the value will be true,
            otherwise, it will be null.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountKey">
            <summary>
            An access key for the storage account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountKey.#ctor">
            <summary>
            Initializes a new instance of the StorageAccountKey class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountKey.#ctor(System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.KeyPermission})">
            <summary>
            Initializes a new instance of the StorageAccountKey class.
            </summary>
            <param name="keyName">Name of the key.</param>
            <param name="value">Base 64-encoded value of the key.</param>
            <param name="permissions">Permissions for the key -- read-only or
            full permissions. Possible values include: 'Read', 'Full'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountKey.KeyName">
            <summary>
            Gets name of the key.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountKey.Value">
            <summary>
            Gets base 64-encoded value of the key.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountKey.Permissions">
            <summary>
            Gets permissions for the key -- read-only or full permissions.
            Possible values include: 'Read', 'Full'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountListKeysResultInner">
            <summary>
            The response from the ListKeys operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountListKeysResultInner.#ctor">
            <summary>
            Initializes a new instance of the StorageAccountListKeysResultInner
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountListKeysResultInner.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountKey})">
            <summary>
            Initializes a new instance of the StorageAccountListKeysResultInner
            class.
            </summary>
            <param name="keys">Gets the list of storage account keys and their
            properties for the specified storage account.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountListKeysResultInner.Keys">
            <summary>
            Gets the list of storage account keys and their properties for the
            specified storage account.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountRegenerateKeyParameters">
            <summary>
            The parameters used to regenerate the storage account key.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountRegenerateKeyParameters.#ctor">
            <summary>
            Initializes a new instance of the
            StorageAccountRegenerateKeyParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountRegenerateKeyParameters.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            StorageAccountRegenerateKeyParameters class.
            </summary>
            <param name="keyName">The name of storage keys that want to be
            regenerated, possible values are key1, key2.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountRegenerateKeyParameters.KeyName">
            <summary>
            Gets or sets the name of storage keys that want to be regenerated,
            possible values are key1, key2.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountRegenerateKeyParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters">
            <summary>
            The parameters that can be provided when updating the storage account
            properties.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters.#ctor">
            <summary>
            Initializes a new instance of the StorageAccountUpdateParameters
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.SkuInner,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Storage.Fluent.Models.Identity,Microsoft.Azure.Management.Storage.Fluent.Models.CustomDomain,Microsoft.Azure.Management.Storage.Fluent.Models.Encryption,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.AccessTier},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.Azure.Management.Storage.Fluent.Models.NetworkRuleSet,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.Kind})">
            <summary>
            Initializes a new instance of the StorageAccountUpdateParameters
            class.
            </summary>
            <param name="sku">Gets or sets the SKU name. Note that the SKU name
            cannot be updated to Standard_ZRS, Premium_LRS or Premium_ZRS, nor
            can accounts of those SKU names be updated to any other
            value.</param>
            <param name="tags">Gets or sets a list of key value pairs that
            describe the resource. These tags can be used in viewing and
            grouping this resource (across resource groups). A maximum of 15
            tags can be provided for a resource. Each tag must have a key no
            greater in length than 128 characters and a value no greater in
            length than 256 characters.</param>
            <param name="identity">The identity of the resource.</param>
            <param name="customDomain">Custom domain assigned to the storage
            account by the user. Name is the CNAME source. Only one custom
            domain is supported per storage account at this time. To clear the
            existing custom domain, use an empty string for the custom domain
            name property.</param>
            <param name="encryption">Provides the encryption settings on the
            account. The default setting is unencrypted.</param>
            <param name="accessTier">Required for storage accounts where kind =
            BlobStorage. The access tier used for billing. Possible values
            include: 'Hot', 'Cool'</param>
            <param name="enableAzureFilesAadIntegration">Enables Azure Files
            AAD Integration for SMB if sets to true.</param>
            <param name="enableHttpsTrafficOnly">Allows https traffic only to
            storage service if sets to true.</param>
            <param name="networkRuleSet">Network rule set</param>
            <param name="kind">Optional. Indicates the type of storage account.
            Currently only StorageV2 value supported by server. Possible values
            include: 'Storage', 'StorageV2', 'BlobStorage', 'FileStorage',
            'BlockBlobStorage'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters.Sku">
            <summary>
            Gets or sets the SKU name. Note that the SKU name cannot be updated
            to Standard_ZRS, Premium_LRS or Premium_ZRS, nor can accounts of
            those SKU names be updated to any other value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters.Tags">
            <summary>
            Gets or sets a list of key value pairs that describe the resource.
            These tags can be used in viewing and grouping this resource
            (across resource groups). A maximum of 15 tags can be provided for
            a resource. Each tag must have a key no greater in length than 128
            characters and a value no greater in length than 256 characters.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters.Identity">
            <summary>
            Gets or sets the identity of the resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters.CustomDomain">
            <summary>
            Gets or sets custom domain assigned to the storage account by the
            user. Name is the CNAME source. Only one custom domain is supported
            per storage account at this time. To clear the existing custom
            domain, use an empty string for the custom domain name property.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters.Encryption">
            <summary>
            Gets or sets provides the encryption settings on the account. The
            default setting is unencrypted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters.AccessTier">
            <summary>
            Gets or sets required for storage accounts where kind =
            BlobStorage. The access tier used for billing. Possible values
            include: 'Hot', 'Cool'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters.EnableAzureFilesAadIntegration">
            <summary>
            Gets or sets enables Azure Files AAD Integration for SMB if sets to
            true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters.EnableHttpsTrafficOnly">
            <summary>
            Gets or sets allows https traffic only to storage service if sets
            to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters.NetworkRuleSet">
            <summary>
            Gets or sets network rule set
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters.Kind">
            <summary>
            Gets or sets optional. Indicates the type of storage account.
            Currently only StorageV2 value supported by server. Possible values
            include: 'Storage', 'StorageV2', 'BlobStorage', 'FileStorage',
            'BlockBlobStorage'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.TagProperty">
            <summary>
            A tag of the LegalHold of a blob container.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.TagProperty.#ctor">
            <summary>
            Initializes a new instance of the TagProperty class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.TagProperty.#ctor(System.String,System.Nullable{System.DateTime},System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the TagProperty class.
            </summary>
            <param name="tag">The tag value.</param>
            <param name="timestamp">Returns the date and time the tag was
            added.</param>
            <param name="objectIdentifier">Returns the Object ID of the user
            who added the tag.</param>
            <param name="tenantId">Returns the Tenant ID that issued the token
            for the user who added the tag.</param>
            <param name="upn">Returns the User Principal Name of the user who
            added the tag.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.TagProperty.Tag">
            <summary>
            Gets the tag value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.TagProperty.Timestamp">
            <summary>
            Gets returns the date and time the tag was added.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.TagProperty.ObjectIdentifier">
            <summary>
            Gets returns the Object ID of the user who added the tag.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.TagProperty.TenantId">
            <summary>
            Gets returns the Tenant ID that issued the token for the user who
            added the tag.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.TagProperty.Upn">
            <summary>
            Gets returns the User Principal Name of the user who added the tag.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.TrackedResourceInner">
            <summary>
            The resource model definition for a ARM tracked top level resource
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.TrackedResourceInner.#ctor">
            <summary>
            Initializes a new instance of the TrackedResourceInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.TrackedResourceInner.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the TrackedResourceInner class.
            </summary>
            <param name="location">The geo-location where the resource
            lives</param>
            <param name="tags">Resource tags.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.TrackedResourceInner.Tags">
            <summary>
            Gets or sets resource tags.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.TrackedResourceInner.Location">
            <summary>
            Gets or sets the geo-location where the resource lives
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.TrackedResourceInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.UpdateHistoryProperty">
            <summary>
            An update history of the ImmutabilityPolicy of a blob container.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.UpdateHistoryProperty.#ctor">
            <summary>
            Initializes a new instance of the UpdateHistoryProperty class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.UpdateHistoryProperty.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyUpdateType,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the UpdateHistoryProperty class.
            </summary>
            <param name="update">The ImmutabilityPolicy update type of a blob
            container, possible values include: put, lock and extend. Possible
            values include: 'put', 'lock', 'extend'</param>
            <param name="immutabilityPeriodSinceCreationInDays">The
            immutability period for the blobs in the container since the policy
            creation, in days.</param>
            <param name="timestamp">Returns the date and time the
            ImmutabilityPolicy was updated.</param>
            <param name="objectIdentifier">Returns the Object ID of the user
            who updated the ImmutabilityPolicy.</param>
            <param name="tenantId">Returns the Tenant ID that issued the token
            for the user who updated the ImmutabilityPolicy.</param>
            <param name="upn">Returns the User Principal Name of the user who
            updated the ImmutabilityPolicy.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.UpdateHistoryProperty.Update">
            <summary>
            Gets the ImmutabilityPolicy update type of a blob container,
            possible values include: put, lock and extend. Possible values
            include: 'put', 'lock', 'extend'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.UpdateHistoryProperty.ImmutabilityPeriodSinceCreationInDays">
            <summary>
            Gets the immutability period for the blobs in the container since
            the policy creation, in days.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.UpdateHistoryProperty.Timestamp">
            <summary>
            Gets returns the date and time the ImmutabilityPolicy was updated.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.UpdateHistoryProperty.ObjectIdentifier">
            <summary>
            Gets returns the Object ID of the user who updated the
            ImmutabilityPolicy.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.UpdateHistoryProperty.TenantId">
            <summary>
            Gets returns the Tenant ID that issued the token for the user who
            updated the ImmutabilityPolicy.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.UpdateHistoryProperty.Upn">
            <summary>
            Gets returns the User Principal Name of the user who updated the
            ImmutabilityPolicy.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.UsageInner">
            <summary>
            Describes Storage Resource Usage.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.UsageInner.#ctor">
            <summary>
            Initializes a new instance of the UsageInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.UsageInner.#ctor(System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.UsageUnit},System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.Azure.Management.Storage.Fluent.Models.UsageName)">
            <summary>
            Initializes a new instance of the UsageInner class.
            </summary>
            <param name="unit">Gets the unit of measurement. Possible values
            include: 'Count', 'Bytes', 'Seconds', 'Percent', 'CountsPerSecond',
            'BytesPerSecond'</param>
            <param name="currentValue">Gets the current count of the allocated
            resources in the subscription.</param>
            <param name="limit">Gets the maximum count of the resources that
            can be allocated in the subscription.</param>
            <param name="name">Gets the name of the type of usage.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.UsageInner.Unit">
            <summary>
            Gets the unit of measurement. Possible values include: 'Count',
            'Bytes', 'Seconds', 'Percent', 'CountsPerSecond', 'BytesPerSecond'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.UsageInner.CurrentValue">
            <summary>
            Gets the current count of the allocated resources in the
            subscription.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.UsageInner.Limit">
            <summary>
            Gets the maximum count of the resources that can be allocated in
            the subscription.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.UsageInner.Name">
            <summary>
            Gets the name of the type of usage.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.UsageName">
            <summary>
            The usage names that can be used; currently limited to StorageAccount.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.UsageName.#ctor">
            <summary>
            Initializes a new instance of the UsageName class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.UsageName.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the UsageName class.
            </summary>
            <param name="value">Gets a string describing the resource
            name.</param>
            <param name="localizedValue">Gets a localized string describing the
            resource name.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.UsageName.Value">
            <summary>
            Gets a string describing the resource name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.UsageName.LocalizedValue">
            <summary>
            Gets a localized string describing the resource name.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.UsageUnit">
            <summary>
            Defines values for UsageUnit.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Models.VirtualNetworkRule">
            <summary>
            Virtual Network rule.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.VirtualNetworkRule.#ctor">
            <summary>
            Initializes a new instance of the VirtualNetworkRule class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.VirtualNetworkRule.#ctor(System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.Action},System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.State})">
            <summary>
            Initializes a new instance of the VirtualNetworkRule class.
            </summary>
            <param name="virtualNetworkResourceId">Resource ID of a subnet, for
            example:
            /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.</param>
            <param name="action">The action of virtual network rule. Possible
            values include: 'Allow'</param>
            <param name="state">Gets the state of virtual network rule.
            Possible values include: 'provisioning', 'deprovisioning',
            'succeeded', 'failed', 'networkSourceDeleted'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.VirtualNetworkRule.VirtualNetworkResourceId">
            <summary>
            Gets or sets resource ID of a subnet, for example:
            /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.VirtualNetworkRule.Action">
            <summary>
            Gets or sets the action of virtual network rule. Possible values
            include: 'Allow'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Models.VirtualNetworkRule.State">
            <summary>
            Gets the state of virtual network rule. Possible values include:
            'provisioning', 'deprovisioning', 'succeeded', 'failed',
            'networkSourceDeleted'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Models.VirtualNetworkRule.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.Operations">
            <summary>
            Operations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Operations.#ctor(Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient)">
            <summary>
            Initializes a new instance of the Operations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.Operations.Client">
            <summary>
            Gets a reference to the StorageManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.Operations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the available Storage Rest API operations.
            </summary>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.OperationsExtensions">
            <summary>
            Extension methods for Operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.OperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.Fluent.IOperations,System.Threading.CancellationToken)">
            <summary>
            Lists all of the available Storage Rest API operations.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.SkusOperations">
            <summary>
            SkusOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.SkusOperations.#ctor(Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient)">
            <summary>
            Initializes a new instance of the SkusOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.SkusOperations.Client">
            <summary>
            Gets a reference to the StorageManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.SkusOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the available SKUs supported by Microsoft.Storage for given
            subscription.
            </summary>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.SkusOperationsExtensions">
            <summary>
            Extension methods for SkusOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.SkusOperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.Fluent.ISkusOperations,System.Threading.CancellationToken)">
            <summary>
            Lists the available SKUs supported by Microsoft.Storage for given
            subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperations">
            <summary>
            StorageAccountsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperations.#ctor(Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient)">
            <summary>
            Initializes a new instance of the StorageAccountsOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperations.Client">
            <summary>
            Gets a reference to the StorageManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperations.CheckNameAvailabilityWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks that the storage account name is valid and is not already in use.
            </summary>
            <param name='name'>
            The storage account name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperations.CreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Asynchronously creates a new storage account with the specified parameters.
            If an account is already created and a subsequent create request is issued
            with different properties, the account properties will be updated. If an
            account is already created and a subsequent create or update request is
            issued with the exact same set of properties, the request will succeed.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide for the created account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a storage account in Microsoft Azure.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperations.GetPropertiesWithHttpMessagesAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountExpand},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns the properties for the specified storage account including but not
            limited to name, SKU name, location, and account status. The ListKeys
            operation should be used to retrieve storage keys.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='expand'>
            May be used to expand the properties within account's properties. By
            default, data is not included when fetching properties. Currently we only
            support geoReplicationStats. Possible values include: 'geoReplicationStats'
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            The update operation can be used to update the SKU, encryption, access
            tier, or tags for a storage account. It can also be used to map the account
            to a custom domain. Only one custom domain is supported per storage
            account; the replacement/change of custom domain is not supported. In order
            to replace an old custom domain, the old value must be cleared/unregistered
            before a new value can be set. The update of multiple properties is
            supported. This call does not change the storage keys for the account. If
            you want to change the storage account keys, use the regenerate keys
            operation. The location and name of the storage account cannot be changed
            after creation.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide for the updated account.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all the storage accounts available under the subscription. Note that
            storage keys are not returned; use the ListKeys operation for this.
            </summary>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all the storage accounts available under the given resource group.
            Note that storage keys are not returned; use the ListKeys operation for
            this.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperations.ListKeysWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the access keys for the specified storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperations.RegenerateKeyWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Regenerates one of the access keys for the specified storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='keyName'>
            The name of storage keys that want to be regenerated, possible values are
            key1, key2.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperations.ListAccountSASWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.AccountSasParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List SAS credentials of a storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide to list SAS credentials for the storage account.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperations.ListServiceSASWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List service SAS credentials of a specific resource.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide to list service SAS credentials.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperations.FailoverWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Failover request can be triggered for a storage account in case of
            availability issues. The failover occurs from the storage account's primary
            cluster to secondary cluster for RA-GRS accounts. The secondary cluster
            will become primary after failover.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperations.RevokeUserDelegationKeysWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Revoke user delegation keys.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperations.BeginCreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Asynchronously creates a new storage account with the specified parameters.
            If an account is already created and a subsequent create request is issued
            with different properties, the account properties will be updated. If an
            account is already created and a subsequent create or update request is
            issued with the exact same set of properties, the request will succeed.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide for the created account.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperations.BeginFailoverWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Failover request can be triggered for a storage account in case of
            availability issues. The failover occurs from the storage account's primary
            cluster to secondary cluster for RA-GRS accounts. The secondary cluster
            will become primary after failover.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperationsExtensions">
            <summary>
            Extension methods for StorageAccountsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperationsExtensions.CheckNameAvailabilityAsync(Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Checks that the storage account name is valid and is not already in use.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='name'>
            The storage account name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters,System.Threading.CancellationToken)">
            <summary>
            Asynchronously creates a new storage account with the specified parameters.
            If an account is already created and a subsequent create request is issued
            with different properties, the account properties will be updated. If an
            account is already created and a subsequent create or update request is
            issued with the exact same set of properties, the request will succeed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide for the created account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a storage account in Microsoft Azure.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperationsExtensions.GetPropertiesAsync(Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountExpand},System.Threading.CancellationToken)">
            <summary>
            Returns the properties for the specified storage account including but not
            limited to name, SKU name, location, and account status. The ListKeys
            operation should be used to retrieve storage keys.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='expand'>
            May be used to expand the properties within account's properties. By
            default, data is not included when fetching properties. Currently we only
            support geoReplicationStats. Possible values include: 'geoReplicationStats'
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters,System.Threading.CancellationToken)">
            <summary>
            The update operation can be used to update the SKU, encryption, access
            tier, or tags for a storage account. It can also be used to map the account
            to a custom domain. Only one custom domain is supported per storage
            account; the replacement/change of custom domain is not supported. In order
            to replace an old custom domain, the old value must be cleared/unregistered
            before a new value can be set. The update of multiple properties is
            supported. This call does not change the storage keys for the account. If
            you want to change the storage account keys, use the regenerate keys
            operation. The location and name of the storage account cannot be changed
            after creation.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide for the updated account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations,System.Threading.CancellationToken)">
            <summary>
            Lists all the storage accounts available under the subscription. Note that
            storage keys are not returned; use the ListKeys operation for this.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all the storage accounts available under the given resource group.
            Note that storage keys are not returned; use the ListKeys operation for
            this.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperationsExtensions.ListKeysAsync(Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists the access keys for the specified storage account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperationsExtensions.RegenerateKeyAsync(Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Regenerates one of the access keys for the specified storage account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='keyName'>
            The name of storage keys that want to be regenerated, possible values are
            key1, key2.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperationsExtensions.ListAccountSASAsync(Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.AccountSasParameters,System.Threading.CancellationToken)">
            <summary>
            List SAS credentials of a storage account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide to list SAS credentials for the storage account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperationsExtensions.ListServiceSASAsync(Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters,System.Threading.CancellationToken)">
            <summary>
            List service SAS credentials of a specific resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide to list service SAS credentials.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperationsExtensions.FailoverAsync(Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Failover request can be triggered for a storage account in case of
            availability issues. The failover occurs from the storage account's primary
            cluster to secondary cluster for RA-GRS accounts. The secondary cluster
            will become primary after failover.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperationsExtensions.RevokeUserDelegationKeysAsync(Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Revoke user delegation keys.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperationsExtensions.BeginCreateAsync(Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters,System.Threading.CancellationToken)">
            <summary>
            Asynchronously creates a new storage account with the specified parameters.
            If an account is already created and a subsequent create request is issued
            with different properties, the account properties will be updated. If an
            account is already created and a subsequent create or update request is
            issued with the exact same set of properties, the request will succeed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide for the created account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperationsExtensions.BeginFailoverAsync(Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Failover request can be triggered for a storage account in case of
            availability issues. The failover occurs from the storage account's primary
            cluster to secondary cluster for RA-GRS accounts. The secondary cluster
            will become primary after failover.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient">
            <summary>
            The Azure Storage Management API.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient.SubscriptionId">
            <summary>
            The ID of the target subscription.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient.ApiVersion">
            <summary>
            The API version to use for this operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient.AcceptLanguage">
            <summary>
            The preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient.LongRunningOperationRetryTimeout">
            <summary>
            The retry timeout in seconds for Long Running Operations. Default value is
            30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient.GenerateClientRequestId">
            <summary>
            Whether a unique x-ms-client-request-id should be generated. When set to
            true a unique x-ms-client-request-id value is generated and included in
            each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient.Operations">
            <summary>
            Gets the IOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient.Skus">
            <summary>
            Gets the ISkusOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient.StorageAccounts">
            <summary>
            Gets the IStorageAccountsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient.Usages">
            <summary>
            Gets the IUsagesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient.ManagementPolicies">
            <summary>
            Gets the IManagementPoliciesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient.BlobServices">
            <summary>
            Gets the IBlobServicesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient.BlobContainers">
            <summary>
            Gets the IBlobContainersOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient.#ctor(Microsoft.Azure.Management.ResourceManager.Fluent.Core.RestClient)">
            <summary>
            Initializes a new instance of the StorageManagementClient class.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient.Initialize">
            <summary>
            Initializes client properties.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.UsagesOperations">
            <summary>
            UsagesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.UsagesOperations.#ctor(Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient)">
            <summary>
            Initializes a new instance of the UsagesOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.UsagesOperations.Client">
            <summary>
            Gets a reference to the StorageManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.UsagesOperations.ListByLocationWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the current usage count and the limit for the resources of the
            location under the subscription.
            </summary>
            <param name='location'>
            The location of the Azure Storage resource.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.UsagesOperationsExtensions">
            <summary>
            Extension methods for UsagesOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.UsagesOperationsExtensions.ListByLocationAsync(Microsoft.Azure.Management.Storage.Fluent.IUsagesOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the current usage count and the limit for the resources of the
            location under the subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='location'>
            The location of the Azure Storage resource.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.PublicEndpoints">
             <summary>
             An instance of this class stores the The URIs associated with a storage
             account that are used to perform a retrieval of a public blob, queue or
             table object.
             </summary>
            GENTHASH:Y29tLm1pY3Jvc29mdC5henVyZS5tYW5hZ2VtZW50LnN0b3JhZ2UuUHVibGljRW5kcG9pbnRz
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.PublicEndpoints.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.Endpoints,Microsoft.Azure.Management.Storage.Fluent.Models.Endpoints)">
             <summary>
             Creates an instance of PublicEndpoints with two access endpoints.
             </summary>
             <param name="primary">The primary endpoint.</param>
             <param name="secondary">The secondary endpoint.</param>
            GENMHASH:A303AEE2C9D7F0147D4261B866884843:FBABC45968C8A933D855C5B42E5ADB6A
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.PublicEndpoints.Primary">
             <return>
             The URLs that are used to perform a retrieval of a public blob,
             queue or table object.Note that StandardZRS and PremiumLRS accounts
             only return the blob endpoint.
             </return>
            GENMHASH:46645B73135AFEDAC926BE820EB4AFF7:265F211524466E40558AB295CFC0387C
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.PublicEndpoints.Secondary">
             <return>
             The URLs that are used to perform a retrieval of a public blob,
             queue or table object from the secondary location of the storage
             account. Only available if the accountType is StandardRAGRS.
             </return>
            GENMHASH:BD8D51006FA39E65AA03B613332E3B24:A45A0B1AE68B70996082DCB7AD988E63
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccountEncryptionKeySource">
             <summary>
             Azure storage account encryption key sources.
             </summary>
            GENTHASH:Y29tLm1pY3Jvc29mdC5henVyZS5tYW5hZ2VtZW50LnN0b3JhZ2UuU3RvcmFnZUFjY291bnRFbmNyeXB0aW9uS2V5U291cmNl
        </member>
        <member name="F:Microsoft.Azure.Management.Storage.Fluent.StorageAccountEncryptionKeySource.Microsoft_Storage">
            <summary>
            Static value Microsoft.Storage for StorageAccountEncryptionKeySource.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.Storage.Fluent.StorageAccountEncryptionKeySource.Microsoft_KeyVault">
            <summary>
            Static value Microsoft.Keyvault for StorageAccountEncryptionKeySource.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.Storage.Fluent.StorageAccountSkuType.Standard_LRS">
            <summary>
            Static value Standard_LRS for StorageAccountSkuType.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.Storage.Fluent.StorageAccountSkuType.Standard_GRS">
            <summary>
            Static value Standard_GRS for StorageAccountSkuType.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.Storage.Fluent.StorageAccountSkuType.Standard_RAGRS">
            <summary>
            Static value Standard_RAGRS for StorageAccountSkuType.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.Storage.Fluent.StorageAccountSkuType.Standard_ZRS">
            <summary>
            Static value Standard_ZRS for StorageAccountSkuType.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.Storage.Fluent.StorageAccountSkuType.Premium_LRS">
            <summary>
            Static value Premium_LRS for StorageAccountSkuType.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.StorageAccountSkuType.Name">
            <summary>
            The storage account sku name.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountSkuType.FromSkuName(Microsoft.Azure.Management.Storage.Fluent.Models.SkuName)">
            <summary>
            Creates StorageAccountSkuType from sku name.
            </summary>
            <param name="name">the sku name</param>
            <returns>StorageAccountSkuType</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountSkuType.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.SkuName)">
            <summary>
            Creates StorageAccountSkuType.
            </summary>
            <param name="name">the sku name</param>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageEncryptionHelper">
            <summary>
            Helper to operate on storage account encryption (StorageAccountInner.encryption) property.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageEncryptionHelper.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters)">
            <summary>
            Creates StorageEncryptionHelper.
            </summary>
            <param name="createParameters">the model representing payload for storage account create</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageEncryptionHelper.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters,Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner)">
            <summary>
            Creates StorageEncryptionHelper.
            </summary>
            <param name="updateParameters">the model representing the payload for storage account update</param>
            <param name="inner">the current state of storage account</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageEncryptionHelper.EncryptionKeySource(Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner)">
            <summary>
            Gets the encryption key source.
            </summary>
            <param name="inner">the storage account</param>
            <returns>the encryption key source type</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageEncryptionHelper.EncryptionStatuses(Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner)">
            <summary>
            Gets the encryption statuses of various storage services.
            </summary>
            <param name="inner">the storage accounts</param>
            <returns>the dictionary containing the encryption statuses indexed by service name</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageEncryptionHelper.WithBlobEncryption">
            <summary>
            Specifies that storage blob encryption should be enabled.
            </summary>
            <returns>StorageEncryptionHelper</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageEncryptionHelper.WithFileEncryption">
            <summary>
            Specifies that storage file encryption should be enabled.
            </summary>
            <returns>StorageEncryptionHelper</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageEncryptionHelper.WithoutBlobEncryption">
            <summary>
            Specifies that storage blob encryption should be disabled for storage blob.
            </summary>
            <returns>StorageEncryptionHelper</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageEncryptionHelper.WithoutFileEncryption">
            <summary>
            Specifies that storage blob encryption should be disabled for storage file.
            </summary>
            <returns>StorageEncryptionHelper</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageEncryptionHelper.WithEncryptionKeyFromKeyVault(System.String,System.String,System.String)">
            <summary>
            Specifies the key vault key to be used to encrypt the blobs and files.
            </summary>
            <param name="keyVaultUri">key vault url</param>
            <param name="keyName">key vault key name</param>
            <param name="keyVersion">key vault key version</param>
            <returns>StorageEncryptionHelper</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageEncryptionHelper.GetEncryptionConfig(System.Boolean)">
            <summary>
            Gets the encryption configuration.
            </summary>
            <param name="createIfNotExists">flag indicating whether to create an encryption config if it does not exists already</param>
            <returns>the encryption configuration</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageManager.Authenticate(Microsoft.Azure.Management.ResourceManager.Fluent.Authentication.AzureCredentials,System.String)">
            <summary>
            Creates an instance of StorageManager that exposes storage resource management API entry points.
            </summary>
            <param name="credentials">the credentials to use</param>
            <param name="subscriptionId">the subscription UUID</param>
            <returns>the StorageManager</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageManager.Authenticate(Microsoft.Azure.Management.ResourceManager.Fluent.Core.RestClient,System.String)">
            <summary>
            Creates an instance of StorageManager that exposes storage resource management API entry points.
            </summary>
            <param name="restClient">the RestClient to be used for API calls.</param>
            <param name="subscriptionId">the subscription UUID</param>
            <returns>the StorageManager</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageManager.Configure">
            <summary>
            Get a Configurable instance that can be used to create StorageManager with optional configuration.
            </summary>
            <returns>the instance allowing configurations</returns>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageManager.IConfigurable">
            <summary>
            The inteface allowing configurations to be set.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.Azure.Management.Storage.Fluent.StorageManager.Configurable.Authenticate(Microsoft.Azure.Management.ResourceManager.Fluent.Authentication.AzureCredentials,System.String)" -->
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.IStorageManager">
            <summary>
            Entry point to Azure storage resource management.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManager.StorageAccounts">
            <summary>
            Gets the storage resource management API entry point.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManager.Usages">
            <summary>
            Gets the storage resource usage management API entry point.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManager.StorageSkus">
            <summary>
            Gets the storage service SKU management API entry point
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManager.BlobContainers">
            <summary>
            Gets the storage blob container management API entry point
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManager.BlobServices">
            <summary>
            Gets the storage blob service management API entry point
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManager.ManagementPolicies">
            <summary>
            Gets the storage management policy management API entry point
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageNetworkRulesHelper">
            <summary>
            Helper to operate on storage account NetworkRule set(StorageAccountInner.networkRuleSet) property.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageNetworkRulesHelper.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters)">
            <summary>
            Creates StorageNetworkRulesHelper.
            </summary>
            <param name="createParameters">the model representing payload for storage account create.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageNetworkRulesHelper.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters,Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner)">
            <summary>
            Creates StorageNetworkRulesHelper.
            </summary>
            <param name="updateParameters">the model representing payload for storage account update</param>
            <param name="inner">the current state of storage account</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageNetworkRulesHelper.IsAccessAllowedFromAllNetworks(Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner)">
            <summary>
            Checks whether access to the given storage account is allowed from all networks. 
            </summary>
            <param name="inner">the storage account</param>
            <returns>true if access allowed from all networks, false otherwise</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageNetworkRulesHelper.NetworkSubnetsWithAccess(Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner)">
            <summary>
            The list of resource id of subnets having access to the given storage account.
            </summary>
            <param name="inner">the storage account</param>
            <returns>list of subnet resource ids</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageNetworkRulesHelper.IpAddressesWithAccess(Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner)">
            <summary>
            The list of ipv4 addresses having access to the given storage account.
            </summary>
            <param name="inner">the storage account</param>
            <returns>list of ip addresses</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageNetworkRulesHelper.IpAddressRangesWithAccess(Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner)">
            <summary>
            The list of CIDR formatted ip address ranges having access to the given storage account.
            </summary>
            <param name="inner">the storage account</param>
            <returns>list of ip address ranges in cidr format</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageNetworkRulesHelper.CanReadLogEntriesFromAnyNetwork(Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner)">
            <summary>
            Checks storage log entries can be read from any network.
            </summary>
            <param name="inner">the storage account</param>
            <returns>true if storage log entries can be read from any network, false otherwise</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageNetworkRulesHelper.CanReadMetricsFromAnyNetwork(Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner)">
            <summary>
            Checks storage metrics can be read from any network.
            </summary>
            <param name="inner">the storage account</param>
            <returns>true if storage metrics can be read from any network, false otherwise</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageNetworkRulesHelper.CanAccessFromAzureServices(Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner)">
            <summary>
            Checks storage account can be accessed from applications running on azure.
            </summary>
            <param name="inner">the storage account</param>
            <returns>true if storage can be accessed from application running on azure, false otherwise</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageNetworkRulesHelper.WithAccessFromAllNetworks">
            <summary>
            Specifies that access to the storage account should be allowed from all networks.
            </summary>
            <returns>StorageNetworkRulesHelper</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageNetworkRulesHelper.WithAccessFromSelectedNetworks">
            <summary>
            Specifies that access to the storage account should be allowed only from selected networks.
            </summary>
            <returns>StorageNetworkRulesHelper</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageNetworkRulesHelper.WithAccessFromNetworkSubnet(System.String)">
            <summary>
            cifies that access to the storage account from the given network subnet should be allowed.
            </summary>
            <param name="subnetId">the network subnet resource id</param>
            <returns>StorageNetworkRulesHelper</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageNetworkRulesHelper.WithAccessFromIpAddress(System.String)">
            <summary>
            Specifies that access to the storage account from the given ip address should be allowed.
            </summary>
            <param name="ipAddress">the ip address</param>
            <returns>StorageNetworkRulesHelper</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageNetworkRulesHelper.WithAccessFromIpAddressRange(System.String)">
            <summary>
            Specifies that access to the storage account from the given ip address range should be allowed.
            </summary>
            <param name="ipAddressCidr">the ip address range in cidr format</param>
            <returns>StorageNetworkRulesHelper</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageNetworkRulesHelper.WithReadAccessToLoggingFromAnyNetwork">
            <summary>
            Specifies that read access to the storage account logging should be allowed from all networks.
            </summary>
            <returns>StorageNetworkRulesHelper</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageNetworkRulesHelper.WithReadAccessToMetricsFromAnyNetwork">
            <summary>
            Specifies that read access to the storage account metrics should be allowed from all networks.
            </summary>
            <returns>StorageNetworkRulesHelper</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageNetworkRulesHelper.WithAccessAllowedFromAzureServices">
            <summary>
            Specifies that access to the storage account from application running on Azure should be allowed.
            </summary>
            <returns>StorageNetworkRulesHelper</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageNetworkRulesHelper.WithoutNetworkSubnetAccess(System.String)">
            <summary>
            Specifies that existing access to the storage account from the given subnet should be removed.
            </summary>
            <param name="subnetId">the network subnet resource id</param>
            <returns>StorageNetworkRulesHelper</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageNetworkRulesHelper.WithoutIpAddressAccess(System.String)">
            <summary>
            Specifies that existing access to the storage account from the given ip address should be removed.
            </summary>
            <param name="ipAddress">the ip address</param>
            <returns>StorageNetworkRulesHelper</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageNetworkRulesHelper.WithoutIpAddressRangeAccess(System.String)">
            <summary>
            Specifies that existing access to the storage account from the given ip address range should be removed.
            </summary>
            <param name="ipAddressCidr">the ip address range in cidr format</param>
            <returns>StorageNetworkRulesHelper</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageNetworkRulesHelper.WithoutReadAccessToLoggingFromAnyNetwork">
            <summary>
            Specifies that previously added read access exception to the storage logging from any network
            should be removed.
            </summary>
            <returns>StorageNetworkRulesHelper</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageNetworkRulesHelper.WithoutReadAccessToMetricsFromAnyNetwork">
            <summary>
            Specifies that previously added read access exception to the storage metrics from any network
            should be removed.
            </summary>
            <returns>StorageNetworkRulesHelper</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageNetworkRulesHelper.WithoutAccessFromAzureServices">
            <summary>
            Specifies that previously added access exception to the storage account from application
            running on azure should be removed.
            </summary>
            <returns>StorageNetworkRulesHelper</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageNetworkRulesHelper.WithAccessAllowedFromIpAddressOrRange(System.String)">
            <summary>
            Specifies that access to the storage account should be allowed from the given ip address or ip address range.
            </summary>
            <param name="ipAddressOrRange">the ip address or ip address range in cidr format</param>
            <returns>StorageNetworkRulesHelper</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageNetworkRulesHelper.WithoutIpAddressOrRangeAccess(System.String)">
            <summary>
            Specifies that existing access to the storage account from the given ip address or ip address range should be removed.
            </summary>
            <param name="ipAddressOrRange">the ip address or ip address range in cidr format</param>
            <returns>StorageNetworkRulesHelper</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageNetworkRulesHelper.AddToBypassList(Microsoft.Azure.Management.Storage.Fluent.Models.Bypass)">
            <summary>
            Add the given bypass to the list of bypass configured for the storage account.
            </summary>
            <param name="bypass">access type to which default network access action is not applied.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageNetworkRulesHelper.RemoveFromBypassList(Microsoft.Azure.Management.Storage.Fluent.Models.Bypass)">
            <summary>
            Removes the given bypass from the list of bypass configured for the storage account.
            </summary>
            <param name="bypass">access type to which default network access action is not applied.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageNetworkRulesHelper.ParseBypass(Microsoft.Azure.Management.Storage.Fluent.Models.Bypass)">
            <summary>
            Parses the given comma separated traffic sources to bypass and convert them to list.
            </summary>
            <param name="bypassVal">comma separated traffic sources to bypass.</param>
            <returns>the bypass list</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageNetworkRulesHelper.GetNetworkRuleSetConfig(System.Boolean)">
            <summary>
            Gets the network rule set.
            </summary>
            <param name="createIfNotExists">flag indicating whether to create a network rule set config if it does not exists already</param>
            <returns>the network rule set</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Fluent.StorageNetworkRulesHelper.SetDefaultActionIfRequired">
            <summary>
            The NetworkRuleSet#defaultAction is a required property.
            During create mode, this method sets the default action to DENY if it is already not set by the user
            and user specifies at least one network rule or choose at least one exception.
            
            When in update mode, this method set action to DENY only if there is no existing network rules and exception
            hence this is the first time user is adding a network rule or exception and action is not explicitly set by user.
            If there is any existing rules or exception, we honor currently configured action.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageResourceType">
             <summary>
             Storage service resource types.
             </summary>
            GENTHASH:Y29tLm1pY3Jvc29mdC5henVyZS5tYW5hZ2VtZW50LnN0b3JhZ2UuU3RvcmFnZVJlc291cmNlVHlwZQ==
        </member>
        <member name="F:Microsoft.Azure.Management.Storage.Fluent.StorageResourceType.Storage_Accounts">
            <summary>
            Static value storageAccounts for StorageResourceType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Fluent.StorageService">
             <summary>
             Azure storage service types.
             </summary>
            GENTHASH:Y29tLm1pY3Jvc29mdC5henVyZS5tYW5hZ2VtZW50LnN0b3JhZ2UuU3RvcmFnZVNlcnZpY2U=
        </member>
        <member name="F:Microsoft.Azure.Management.Storage.Fluent.StorageService.Blob">
            <summary>
            Static value Blob for StorageService.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.Storage.Fluent.StorageService.Table">
            <summary>
            Static value Table for StorageService.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.Storage.Fluent.StorageService.Queue">
            <summary>
            Static value Queue for StorageService.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.Storage.Fluent.StorageService.File">
            <summary>
            Static value Queue for StorageService.
            </summary>
        </member>
    </members>
</doc>
