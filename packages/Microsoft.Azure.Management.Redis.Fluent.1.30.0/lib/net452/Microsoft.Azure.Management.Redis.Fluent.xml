<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Azure.Management.Redis.Fluent</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisAccessKeysImpl">
             <summary>
             The RedisCache.keys action result.
             </summary>
            GENTHASH:Y29tLm1pY3Jvc29mdC5henVyZS5tYW5hZ2VtZW50LnJlZGlzLmltcGxlbWVudGF0aW9uLlJlZGlzQWNjZXNzS2V5c0ltcGw=
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisAccessKeysImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisAccessKeys#PrimaryKey">
            <summary>
            Gets a primary key value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisAccessKeysImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisAccessKeys#SecondaryKey">
            <summary>
            Gets a secondary key value.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisAccessKeysImpl.#ctor(Microsoft.Azure.Management.Redis.Fluent.Models.RedisAccessKeysInner)">
             <summary>
             Creates an instance of the Redis Access keys result object.
             </summary>
             <param name="inner">The inner object.</param>
            GENMHASH:C452582DCEC9B97DA6C301BBFC245AB7:BC4B1282CA708DC220050F834F17A184
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisAccessKeysImpl.PrimaryKey">
            GENMHASH:0B1F8FBCA0C4DFB5EA228CACB374C6C2:EF4A3D6252BFD28784D9F9BED7CEA1C0
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisAccessKeysImpl.SecondaryKey">
            GENMHASH:052932D87146B729CFA163215691D8ED:B906418BFAF9A0252DDBFB702ABE2774
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl">
             <summary>
             Implementation for Redis Cache and its parent interfaces.
             </summary>
            GENTHASH:Y29tLm1pY3Jvc29mdC5henVyZS5tYW5hZ2VtZW50LnJlZGlzLmltcGxlbWVudGF0aW9uLlJlZGlzQ2FjaGVJbXBs
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCacheBeta#FirewallRules">
            <summary>
            Gets Firewall Rules in the Redis Cache, indexed by name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#HostName">
            <summary>
            Gets the hostName value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#IsPremium">
            <summary>
            Gets returns true if current Redis Cache instance has Premium Sku.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#Keys">
            <summary>
            Gets a Redis Cache's access keys. This operation requires write permission to the Cache resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCacheBeta#MinimumTlsVersion">
            <summary>
            Gets the minimum TLS version (or higher) that clients require to use.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#NonSslPort">
            <summary>
            Gets true if non SSL port is enabled, false otherwise.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCacheBeta#PatchSchedules">
            <summary>
            Gets List of patch schedules for current Redis Cache.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#Port">
            <summary>
            Gets the port value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#ProvisioningState">
            <summary>
            Gets the provisioningState value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#RedisConfiguration">
            <summary>
            Gets the Redis configuration value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#RedisVersion">
            <summary>
            Gets the Redis version value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#ShardCount">
            <summary>
            Gets the shardCount value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#Sku">
            <summary>
            Gets the sku value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#SslPort">
            <summary>
            Gets the sslPort value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#StaticIP">
            <summary>
            Gets the staticIP value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#SubnetId">
            <summary>
            Gets the subnetId value.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCachePremiumBeta#AddLinkedServer(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ReplicationRole)">
            <summary>
            Adds a linked server to the current Redis cache instance.
            </summary>
            <param name="linkedRedisCacheId">The resource Id of the Redis instance to link with.</param>
            <param name="linkedServerLocation">The location of the linked Redis instance.</param>
            <param name="role">The role of the linked server.</param>
            <return>Name of the linked server.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCachePremiumBeta#AddLinkedServerAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ReplicationRole,System.Threading.CancellationToken)">
            <summary>
            Adds a linked server to the current Redis cache instance.
            </summary>
            <param name="linkedRedisCacheId">The resource Id of the Redis instance to link with.</param>
            <param name="linkedServerLocation">The location of the linked Redis instance.</param>
            <param name="role">The role of the linked server.</param>
            <return>Name of the linked server.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#AsPremium">
            <return>Exposes features available only to Premium Sku Redis Cache instances.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCachePremium#DeletePatchSchedule">
            <summary>
            Deletes the patching schedule for Redis Cache.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCachePremium#ExportData(System.String,System.String)">
            <summary>
            Export data from Redis Cache.
            </summary>
            <param name="containerSASUrl">Container name to export to.</param>
            <param name="prefix">Prefix to use for exported files.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCachePremium#ExportData(System.String,System.String,System.String)">
            <summary>
            Export data from Redis Cache.
            </summary>
            <param name="containerSASUrl">Container name to export to.</param>
            <param name="prefix">Prefix to use for exported files.</param>
            <param name="fileFormat">Specifies file format.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#ForceReboot(System.String)">
            <summary>
            Reboot specified Redis node(s). This operation requires write permission to the cache resource. There can be potential data loss.
            </summary>
            <param name="rebootType">
            Specifies which Redis node(s) to reboot. Depending on this value data loss is
            possible. Possible values include: 'PrimaryNode', 'SecondaryNode', 'AllNodes'.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCachePremium#ForceReboot(System.String,System.Int32)">
            <summary>
            Reboot specified Redis node(s). This operation requires write permission to the cache resource. There can be potential data loss.
            </summary>
            <param name="rebootType">
            Specifies which Redis node(s) to reboot. Depending on this value data loss is
            possible. Possible values include: 'PrimaryNode', 'SecondaryNode', 'AllNodes'.
            </param>
            <param name="shardId">In case of cluster cache, this specifies shard id which should be rebooted.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#GetKeys">
            <return>A Redis Cache's access keys. This operation requires write permission to the Cache resource.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCachePremiumBeta#GetLinkedServerRole(System.String)">
            <summary>
            Gets the role for the linked server of the current Redis cache instance.
            </summary>
            <param name="linkedServerName">The name of the linked server.</param>
            <return>The role of the linked server.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCachePremiumBeta#GetLinkedServerRoleAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the role for the linked server of the current Redis cache instance.
            </summary>
            <param name="linkedServerName">The name of the linked server.</param>
            <return>The role of the linked server.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCachePremium#ImportData(System.Collections.Generic.IList{System.String})">
            <summary>
            Import data into Redis Cache.
            </summary>
            <param name="files">Files to import.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCachePremium#ImportData(System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Import data into Redis Cache.
            </summary>
            <param name="files">Files to import.</param>
            <param name="fileFormat">Specifies file format.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCachePremiumBeta#ListLinkedServers">
            <summary>
            Gets the list of linked servers associated with this redis cache.
            </summary>
            <return>The Roles of the linked servers, indexed by name.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCachePremiumBeta#ListLinkedServersAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the list of linked servers associated with this redis cache.
            </summary>
            <return>The Roles of the linked servers, indexed by name.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCachePremium#ListPatchSchedules">
            <summary>
            Gets the patching schedule for Redis Cache.
            </summary>
            <return>List of patch schedules for current Redis Cache.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#ResourceActions#IRefreshable{Microsoft#Azure#Management#Redis#Fluent#IRedisCache}#RefreshAsync(System.Threading.CancellationToken)">
            <summary>
            Refreshes the resource to sync with Azure.
            </summary>
            <return>The Observable to refreshed resource.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#RefreshKeys">
            <summary>
            Fetch the up-to-date access keys from Azure for this Redis Cache.
            </summary>
            <return>The access keys for this Redis Cache.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#RegenerateKey(Microsoft.Azure.Management.Redis.Fluent.Models.RedisKeyType)">
            <summary>
            Regenerates the access keys for this Redis Cache.
            </summary>
            <param name="keyType">Key type to regenerate.</param>
            <return>The generated access keys for this Redis Cache.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCachePremiumBeta#RemoveLinkedServer(System.String)">
            <summary>
            Removes the linked server from the current Redis cache instance.
            </summary>
            <param name="linkedServerName">The name of the linked server.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCachePremiumBeta#RemoveLinkedServerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes the linked server from the current Redis cache instance.
            </summary>
            <param name="linkedServerName">The name of the linked server.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#ResourceActions#IUpdatable{Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IUpdate}#Update">
            <summary>
            Begins an update for a new resource.
            This is the beginning of the builder pattern used to update top level resources
            in Azure. The final method completing the definition and starting the actual resource creation
            process in Azure is  Appliable.apply().
            </summary>
            <return>The stage of new resource update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IWithSku#WithBasicSku(System.Int32)">
            <summary>
            Updates Redis Cache to Basic sku with new capacity.
            </summary>
            <param name="capacity">Specifies what size of Redis Cache to update to for Basic sku with C family (0, 1, 2, 3, 4, 5, 6).</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithSku#WithBasicSku">
            <summary>
            Specifies the Basic sku of the Redis Cache.
            </summary>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithSku#WithBasicSku(System.Int32)">
            <summary>
            Specifies the Basic sku of the Redis Cache.
            </summary>
            <param name="capacity">Specifies what size of Redis Cache to deploy for Basic sku with C family (0, 1, 2, 3, 4, 5, 6).</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithCreateBeta#WithFirewallRule(System.String,System.String,System.String)">
            <summary>
            Creates Redis cache firewall rule with range of IP addresses permitted to connect to the cache.
            </summary>
            <param name="name">Name of the rule.</param>
            <param name="lowestIp">Lowest IP address included in the range.</param>
            <param name="highestIp">Highest IP address included in the range.</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithCreateBeta#WithFirewallRule(Microsoft.Azure.Management.Redis.Fluent.Models.IRedisFirewallRule)">
            <summary>
            Creates Redis cache firewall rule with range of IP addresses permitted to connect to the cache.
            </summary>
            <param name="rule">Firewall rule that specifies name, lowest and highest IP address included in the range of permitted IP addresses.</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IUpdateBeta#WithFirewallRule(System.String,System.String,System.String)">
            <summary>
            Creates or updates Redis cache firewall rule with range of IP addresses permitted to connect to the cache.
            </summary>
            <param name="name">Name of the rule.</param>
            <param name="lowestIp">Lowest IP address included in the range.</param>
            <param name="highestIp">Highest IP address included in the range.</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IUpdateBeta#WithFirewallRule(Microsoft.Azure.Management.Redis.Fluent.Models.IRedisFirewallRule)">
            <summary>
            Creates or updates Redis cache firewall rule with range of IP addresses permitted to connect to the cache.
            </summary>
            <param name="rule">Firewall rule that specifies name, lowest and highest IP address included in the range of permitted IP addresses.</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithCreateBeta#WithMinimumTlsVersion(Microsoft.Azure.Management.Redis.Fluent.Models.TlsVersion)">
            <summary>
            Requires clients to use a specified TLS version (or higher) to connect (e,g, '1.0', '1.1', '1.2').
            </summary>
            <param name="tlsVersion">Minimum TLS version.</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IUpdateBeta#WithMinimumTlsVersion(Microsoft.Azure.Management.Redis.Fluent.Models.TlsVersion)">
            <summary>
            Requires clients to use a specified TLS version (or higher) to connect (e,g, '1.0', '1.1', '1.2').
            </summary>
            <param name="tlsVersion">Minimum TLS version.</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithCreate#WithNonSslPort">
            <summary>
            Enables non-ssl Redis server port (6379).
            </summary>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IWithNonSslPort#WithNonSslPort">
            <summary>
            Enables non-ssl Redis server port (6379).
            </summary>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IUpdateBeta#WithoutFirewallRule(System.String)">
            <summary>
            Deletes a single firewall rule in the current Redis cache instance.
            </summary>
            <param name="name">Name of the rule.</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IUpdateBeta#WithoutMinimumTlsVersion">
            <summary>
            Removes the requirement for clients minimum TLS version.
            </summary>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IWithNonSslPort#WithoutNonSslPort">
            <summary>
            Disables non-ssl Redis server port (6379).
            </summary>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IUpdateBeta#WithoutPatchSchedule">
            <summary>
            Removes all Patch schedules from the current Premium Cluster Cache.
            </summary>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IWithRedisConfiguration#WithoutRedisConfiguration">
            <summary>
            Cleans all the configuration settings being set on Redis Cache.
            </summary>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IWithRedisConfiguration#WithoutRedisConfiguration(System.String)">
            <summary>
            Removes specified Redis Cache configuration setting.
            </summary>
            <param name="key">Redis configuration name.</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithCreate#WithPatchSchedule(Microsoft.Azure.Management.Redis.Fluent.Models.DayOfWeek,System.Int32)">
            <summary>
            Patch schedule on a Premium Cluster Cache.
            </summary>
            <param name="dayOfWeek">Day of week when cache can be patched.</param>
            <param name="startHourUtc">Start hour after which cache patching can start.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithCreate#WithPatchSchedule(Microsoft.Azure.Management.Redis.Fluent.Models.DayOfWeek,System.Int32,System.TimeSpan)">
            <summary>
            Patch schedule on a Premium Cluster Cache.
            </summary>
            <param name="dayOfWeek">Day of week when cache can be patched.</param>
            <param name="startHourUtc">Start hour after which cache patching can start.</param>
            <param name="maintenanceWindow">ISO8601 timespan specifying how much time cache patching can take.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithCreate#WithPatchSchedule(System.Collections.Generic.IList{Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry})">
            <summary>
            Patch schedule on a Premium Cluster Cache.
            </summary>
            <param name="scheduleEntry">List of patch schedule entries for Premium Redis Cache.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithCreate#WithPatchSchedule(Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry)">
            <summary>
            Patch schedule on a Premium Cluster Cache.
            </summary>
            <param name="scheduleEntry">Patch schedule entry for Premium Redis Cache.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IUpdate#WithPatchSchedule(Microsoft.Azure.Management.Redis.Fluent.Models.DayOfWeek,System.Int32)">
            <summary>
            Adds Patch schedule to the current Premium Cluster Cache.
            </summary>
            <param name="dayOfWeek">Day of week when cache can be patched.</param>
            <param name="startHourUtc">Start hour after which cache patching can start.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IUpdate#WithPatchSchedule(Microsoft.Azure.Management.Redis.Fluent.Models.DayOfWeek,System.Int32,System.TimeSpan)">
            <summary>
            Adds Patch schedule to the current Premium Cluster Cache.
            </summary>
            <param name="dayOfWeek">Day of week when cache can be patched.</param>
            <param name="startHourUtc">Start hour after which cache patching can start.</param>
            <param name="maintenanceWindow">ISO8601 timespan specifying how much time cache patching can take.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IUpdate#WithPatchSchedule(System.Collections.Generic.IList{Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry})">
            <summary>
            Adds Patch schedule to the current Premium Cluster Cache.
            </summary>
            <param name="scheduleEntry">List of patch schedule entries for Premium Redis Cache.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IUpdate#WithPatchSchedule(Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry)">
            <summary>
            Adds Patch schedule to the current Premium Cluster Cache.
            </summary>
            <param name="scheduleEntry">Patch schedule entry for Premium Redis Cache.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IWithSku#WithPremiumSku">
            <summary>
            Updates Redis Cache to Premium sku.
            </summary>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IWithSku#WithPremiumSku(System.Int32)">
            <summary>
            Updates Redis Cache to Premium sku with new capacity.
            </summary>
            <param name="capacity">Specifies what size of Redis Cache to update to for Premium sku with P family (1, 2, 3, 4).</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithSku#WithPremiumSku">
            <summary>
            Specifies the Premium sku of the Redis Cache.
            </summary>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithSku#WithPremiumSku(System.Int32)">
            <summary>
            Specifies the Premium sku of the Redis Cache.
            </summary>
            <param name="capacity">Specifies what size of Redis Cache to deploy for Standard sku with P family (1, 2, 3, 4).</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithCreate#WithRedisConfiguration(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            All Redis Settings. Few possible keys:
            rdb-backup-enabled, rdb-storage-connection-string, rdb-backup-frequency, maxmemory-delta, maxmemory-policy,
            notify-keyspace-events, maxmemory-samples, slowlog-log-slower-than, slowlog-max-len, list-max-ziplist-entries,
            list-max-ziplist-value, hash-max-ziplist-entries, hash-max-ziplist-value, set -max-intset-entries,
            zset-max-ziplist-entries, zset-max-ziplist-value etc.
            </summary>
            <param name="redisConfiguration">Configuration of Redis Cache as a map indexed by configuration name.</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithCreate#WithRedisConfiguration(System.String,System.String)">
            <summary>
            Specifies Redis Setting.
            rdb-backup-enabled, rdb-storage-connection-string, rdb-backup-frequency, maxmemory-delta, maxmemory-policy,
            notify-keyspace-events, maxmemory-samples, slowlog-log-slower-than, slowlog-max-len, list-max-ziplist-entries,
            list-max-ziplist-value, hash-max-ziplist-entries, hash-max-ziplist-value, set -max-intset-entries,
            zset-max-ziplist-entries, zset-max-ziplist-value etc.
            </summary>
            <param name="key">Redis configuration name.</param>
            <param name="value">Redis configuration value.</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IWithRedisConfiguration#WithRedisConfiguration(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            All Redis Settings. Few possible keys:
            rdb-backup-enabled, rdb-storage-connection-string, rdb-backup-frequency, maxmemory-delta, maxmemory-policy,
            notify-keyspace-events, maxmemory-samples, slowlog-log-slower-than, slowlog-max-len, list-max-ziplist-entries,
            list-max-ziplist-value, hash-max-ziplist-entries, hash-max-ziplist-value, set -max-intset-entries,
            zset-max-ziplist-entries, zset-max-ziplist-value etc.
            </summary>
            <param name="redisConfiguration">Configuration of Redis Cache as a map indexed by configuration name.</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IWithRedisConfiguration#WithRedisConfiguration(System.String,System.String)">
            <summary>
            Specifies Redis Setting.
            rdb-backup-enabled, rdb-storage-connection-string, rdb-backup-frequency, maxmemory-delta, maxmemory-policy,
            notify-keyspace-events, maxmemory-samples, slowlog-log-slower-than, slowlog-max-len, list-max-ziplist-entries,
            list-max-ziplist-value, hash-max-ziplist-entries, hash-max-ziplist-value, set -max-intset-entries,
            zset-max-ziplist-entries, zset-max-ziplist-value etc.
            </summary>
            <param name="key">Redis configuration name.</param>
            <param name="value">Redis configuration value.</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IUpdate#WithShardCount(System.Int32)">
            <summary>
            The number of shards to be created on a Premium Cluster Cache.
            </summary>
            <param name="shardCount">The shard count value to set.</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithPremiumSkuCreate#WithShardCount(System.Int32)">
            <summary>
            The number of shards to be created on a Premium Cluster Cache.
            </summary>
            <param name="shardCount">The shard count value to set.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IWithSku#WithStandardSku">
            <summary>
            Updates Redis Cache to Standard sku.
            </summary>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IWithSku#WithStandardSku(System.Int32)">
            <summary>
            Updates Redis Cache to Standard sku with new capacity.
            </summary>
            <param name="capacity">Specifies what size of Redis Cache to update to for Standard sku with C family (0, 1, 2, 3, 4, 5, 6).</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithSku#WithStandardSku">
            <summary>
            Specifies the Standard Sku of the Redis Cache.
            </summary>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithSku#WithStandardSku(System.Int32)">
            <summary>
            Specifies the Standard sku of the Redis Cache.
            </summary>
            <param name="capacity">Specifies what size of Redis Cache to deploy for Standard sku with C family (0, 1, 2, 3, 4, 5, 6).</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithPremiumSkuCreateBeta#WithStaticIP(System.String)">
            <summary>
            Sets Redis Cache static IP. Required when deploying a Redis Cache inside an existing Azure Virtual Network.
            </summary>
            <param name="staticIP">The static IP value to set.</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithPremiumSkuCreateBeta#WithSubnet(Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId,System.String)">
            <summary>
            Assigns the specified subnet to this instance of Redis Cache.
            </summary>
            <param name="network">Instance of Network object.</param>
            <param name="subnetName">The name of the subnet.</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithPremiumSkuCreateBeta#WithSubnet(System.String)">
            <summary>
            Assigns the specified subnet to this instance of Redis Cache.
            </summary>
            <param name="subnetId">Resource id of subnet.</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.#ctor(System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner,Microsoft.Azure.Management.Redis.Fluent.IRedisManager)">
            GENMHASH:EAC4B1AFA987B876CF30E9B42752EF01:6B972A3D8296EA8EC0C87FC918F68FD1
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.GetInnerAsync(System.Threading.CancellationToken)">
            GENMHASH:5AD91481A0966B059A478CD4E9DD9466:99632CA21DB061E4F5C58504D762DF23
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.AddLinkedServer(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ReplicationRole)">
            GENMHASH:76A2D10D5E76A25A6A9353EC8DA14C51:3AF62FAEC73DB2510F1598C12DAC9DB2
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.AsPremium">
            GENMHASH:A4D7300B7F198955D626D528C3191C0D:7D05859155D538EA8AAA13A7171F55B2
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.CreateResourceAsync(System.Threading.CancellationToken)">
            GENMHASH:0202A00A1DCF248D2647DBDBEF2CA865:2CC95DA2D798C6EF07E41FBEC0E626D1
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.DeletePatchSchedule">
            GENMHASH:3D7C4113A3F55E3E31A8AB77D2A98BC2:E643704D760CED098185123C4FD327DC
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.ExportDataAsync(System.String,System.String,System.Threading.CancellationToken)">
            GENMHASH:E3A7804FB0FA9098FEB1BBC27C0AC302:C6D8B86600A0CD64D5868E2237339BA0
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.ExportDataAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            GENMHASH:D36720446E1DFBFE86C7D6259BB131A7:370BF4DADCBA5A9771685B3CE72B376E
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.FirewallRules">
            GENMHASH:7DDEADFB2FB27BEC42C0B993AB65C3CB:6A8029DE3E32822B9E27C545EDF0262B
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.ForceRebootAsync(System.String,System.Threading.CancellationToken)">
            GENMHASH:00B3FC5713723EC459E8D0BBE862C56F:88360B7A9DAB61BC202D94798DD5342C
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.ForceRebootAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            GENMHASH:9514189731558B5E71CF90933A631027:72C74F485ED62F66960400667E25D4F8
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.GetKeysAsync(System.Threading.CancellationToken)">
            GENMHASH:E4DFA7EA15F8324FB60C810D0C96D2FF:12CA2F259CAE4DC282485B719F9D79DE
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.GetLinkedServerRole(System.String)">
            GENMHASH:EAC569235A2E2BDE75A95902A73BBCEE:F0F74136BF0320AD0A1B0E268B66CC3E
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.HostName">
            GENMHASH:A50A011CA652E846C1780DCE98D171DE:1130E1FDC5A612FAE78D6B24DD71D43E
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.ImportDataAsync(System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)">
            GENMHASH:7EA43FE4B5DC6873C3A15AE9AF9FD9A2:2F9BD3581615AA60DA606F29885C93BD
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.ImportDataAsync(System.Collections.Generic.IList{System.String},System.String,System.Threading.CancellationToken)">
            GENMHASH:797BE61D54080982DA71A130D2628D30:1665E22D97D648DD9B6C906F6F2F9DAA
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.IsPremium">
            GENMHASH:1593AB443F94D260A2681DBAC7A504E4:D07F31B79AEB480685C5B24199EEE067
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Keys">
            GENMHASH:6EE61FA0DE4D0297160B059C5B56D12A:FCE23512A2C31EB7F68F7065799142F4
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.ListLinkedServers">
            GENMHASH:0B47AAC4088E9F14FF99E1610AFE93CC:700F3E4C226CA1266A82D817906EA1F7
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.ListPatchSchedules">
            GENMHASH:CC99BC6F0FDDE008E581A6EB944FE764:2F561CD7250F8DA4909525E84A8A91F0
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.MinimumTlsVersion">
            GENMHASH:BA9FE1A345F36511B9799F44C9F3C739:9D27A7D6C296B69955557E8EA784238E
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.NonSslPort">
            GENMHASH:6D1D6050A5B64D726B268700D1D5B76A:B617C9AF570BA31ABDF18E43D8A277EA
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.PatchSchedules">
            GENMHASH:B99C181F2372E8A9AC28C8E7024F6ABD:4992C0D1E9DE06E14F14B6C38F5D33A4
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Port">
            GENMHASH:BF1200B4E784F046AF04467F35BAC1C4:F0090A6ECB1B91C3BCFD966232A4C1D4
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.ProvisioningState">
            GENMHASH:99D5BF64EA8AA0E287C9B6F77AAD6FC4:2E1D3DC7648ABF799C342550EC7A37CA
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.RedisConfiguration">
            GENMHASH:83D353023D85D6E91BB9A3E8AC689039:DF02D821D2252D83CC2CDE0D9667F24E
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.RedisVersion">
            GENMHASH:0DEA6EED7C42496EBE4A5F0A6169F305:DB027AD772BBD41451F9E589A68B87F8
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.RefreshAsync(System.Threading.CancellationToken)">
            GENMHASH:5A2D79502EDA81E37A36694062AEDC65:56A3157B284370C2F13CB40D1F2322C2
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.RefreshKeysAsync(System.Threading.CancellationToken)">
            GENMHASH:36C3CA891B448CCCA6D3BB4C29A31470:222A26931EAF5A1984B63F0B88A1D104
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.RegenerateKeyAsync(Microsoft.Azure.Management.Redis.Fluent.Models.RedisKeyType,System.Threading.CancellationToken)">
            GENMHASH:861E02F6BBA5773E9337D78B346B0D6B:1E017460FECC66E20EB360CE96692158
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.RemoveLinkedServer(System.String)">
            GENMHASH:4706FC08DDF504157EE5A8DFB2A05FB6:63EA72E3845AC8C40B7D58EBD805D33E
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.ShardCount">
            GENMHASH:246CCD739A2C2D6763D6C1A7A4C3F1B3:FCB76FD3E14B5306E0C0D9C582A496EF
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Sku">
            GENMHASH:F792F6C8C594AA68FA7A0FCA92F55B55:43E446F640DC3345BDBD9A3378F2018A
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.SslPort">
            GENMHASH:8E06C1A19EE798AB8D863FD70174E162:EB25F0BF011FB476ED48A193129040E2
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.StaticIP">
            GENMHASH:8939689DC27B99614145E6616DB6A0BF:60428C770DA47B41ED0FE8196801C941
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.SubnetId">
            GENMHASH:A46525F44B70758E2EDBD761F1C43440:CDCB954FF16DBA73112F76E0FBD05F88
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Update">
            GENMHASH:6BCE517E09457FF033728269C8936E64:F39AFF5EE4AEBB3FA71187079E863BD0
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.UpdateResourceAsync(System.Threading.CancellationToken)">
            GENMHASH:507A92D4DCD93CE9595A78198DEBDFCF:2C6605A1B9906DB2844B193FD45B59DC
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithBasicSku">
            GENMHASH:8D7485C72B719CA5E190D69B6FF75F54:EF1EAF9D3B229FCBEC276D19464D4B8C
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithBasicSku(System.Int32)">
            GENMHASH:3A939C892B9542A7F3B2D43CFB7641C7:3D66186DDF06CB5C03B9666F446517A0
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithFirewallRule(System.String,System.String,System.String)">
            GENMHASH:27444C4877ED2027D36DD096AFCEC975:208D24B219CB244B8E7E15C1C233BB71
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithFirewallRule(Microsoft.Azure.Management.Redis.Fluent.Models.IRedisFirewallRule)">
            GENMHASH:9DD7CA9AD381ABB5D1493DAAF3F96082:03D221A25EEED0FA04EEC682976034E4
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithMinimumTlsVersion(Microsoft.Azure.Management.Redis.Fluent.Models.TlsVersion)">
            GENMHASH:BE6BA1183F3D45C65CDAC63F14746F24:D778A193C0BD265A4FDFF6A32CB536EE
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithNonSslPort">
            GENMHASH:DA29E6CF75B7755D5158B0C9AAA9D5A0:A3EDD15A99413A6F39B0B8A0338713D9
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithoutFirewallRule(System.String)">
            GENMHASH:D14E9D120B5AE20CBE29EEDB19E51726:3F066B8EB25ED4C3056B3D5932415436
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithoutMinimumTlsVersion">
            GENMHASH:8C4CA2E024576158A5143BDC2DE7DE06:85171B31CB90B5F24479806B7FAB77E4
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithoutNonSslPort">
            GENMHASH:09C8C6B57BAA375B863AFE579BB6807D:91AAC365E5F79518CF38951EBEE910D6
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithoutPatchSchedule">
            GENMHASH:34437085ECDFE7A297C3DF96BE3FEEA5:7200AAC806BEBBFC459708D2C4E3E393
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithoutRedisConfiguration">
            GENMHASH:4F64337819291292917CAEDDE1BA957C:61DFF56DF837BA3A7526DB4C6FB3A760
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithoutRedisConfiguration(System.String)">
            GENMHASH:EE0340B2F8356DEF7F1B64D128A2B48C:D28521C5DD147C307414B1CB76E973D0
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithPatchSchedule(Microsoft.Azure.Management.Redis.Fluent.Models.DayOfWeek,System.Int32)">
            GENMHASH:C2110F8F251298226638BAFE08EB2503:90FDAC2D7F671EE3AF491F69172F0D7E
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithPatchSchedule(Microsoft.Azure.Management.Redis.Fluent.Models.DayOfWeek,System.Int32,System.Nullable{System.TimeSpan})">
            GENMHASH:2B41019E00D6558C5F5C529D3296C590:5848DBA8C0AAE4C5977BD3956E8379ED
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithPatchSchedule(System.Collections.Generic.IList{Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry})">
            GENMHASH:4DC611DFE1B12D88B1FBC380172484A4:37E898C983257376AD7BAA07B4E657C5
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithPatchSchedule(Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry)">
            GENMHASH:C11AE4C223D196AB7A57470F94A0CDC6:8297A81A7146CC702F9E8049568353EE
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithPremiumSku">
            GENMHASH:30CB47385D9AC0E9818336B698BEF529:4EF4FC902E838999361E1A71DDDF1772
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithPremiumSku(System.Int32)">
            GENMHASH:5237FB6E7BCD5E52462CBB82E15EE73E:BB67358C305B16CB80D9D59DEDDC11E9
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithRedisConfiguration(System.Collections.Generic.IDictionary{System.String,System.String})">
            GENMHASH:F7A196D3735B12867C5D8141F3638249:ACD54F2F69ECDD6A123AB39BF9034EB6
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithRedisConfiguration(System.String,System.String)">
            GENMHASH:BEAAB097144934E76ACF615386D481B3:4375CEA991BF92F46A862A930235B943
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithShardCount(System.Int32)">
            GENMHASH:9456FDB06E5A3C49F9A7BFDDA1938013:A5E2F06B6C6C37916FED3F7329DBBE32
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithStandardSku">
            GENMHASH:D24D0D518EC4AAB3671622B0122F4207:2884FF302CBD610FA22D475BDC8EBC01
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithStandardSku(System.Int32)">
            GENMHASH:85220C2FDADE8DCD78F313C8C1D645BE:B3B4FEA837D2E04D13A5DAE50007103A
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithStaticIP(System.String)">
            GENMHASH:1F68C56BDE6C18A1D69F2A7E56996F24:99279A7BDB9BA1C51C8FF600882EB4D1
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithSubnet(Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId,System.String)">
            GENMHASH:8B23B5F12477BA18288CA205432B241C:594E31A6DAFC9C9C05CCC06A3902C7E0
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithSubnet(System.String)">
            GENMHASH:0FBBECB150CBC82F165D8BA614AB135A:56529187F77D48847569F37FE5DFB40C
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisCachesImpl">
             <summary>
             The implementation of RedisCaches and its parent interfaces.
             </summary>
            GENTHASH:Y29tLm1pY3Jvc29mdC5henVyZS5tYW5hZ2VtZW50LnJlZGlzLmltcGxlbWVudGF0aW9uLlJlZGlzQ2FjaGVzSW1wbA==
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCachesImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#CollectionActions#ISupportsCreating{Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IBlank}#Define(System.String)">
            <summary>
            Begins a definition for a new resource.
            This is the beginning of the builder pattern used to create top level resources
            in Azure. The final method completing the definition and starting the actual resource creation
            process in Azure is  Creatable.create().
            Note that the  Creatable.create() method is
            only available at the stage of the resource definition that has the minimum set of input
            parameters specified. If you do not see  Creatable.create() among the available methods, it
            means you have not yet specified all the required input settings. Input settings generally begin
            with the word "with", for example: <code>.withNewResourceGroup()</code> and return the next stage
            of the resource definition, as an interface in the "fluent interface" style.
            </summary>
            <param name="name">The name of the new resource.</param>
            <return>The first stage of the new resource definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCachesImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCachesBeta#ListOperations">
            <summary>
            Lists all of the available Redis REST API operations.
            </summary>
            <return>List of available Redis REST operations.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCachesImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCachesBeta#ListOperationsAsync(System.Threading.CancellationToken)">
            <summary>
            Lists all of the available Redis REST API operations.
            </summary>
            <return>A representation of the future computation of this call.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCachesImpl.#ctor(Microsoft.Azure.Management.Redis.Fluent.IRedisManager)">
            GENMHASH:55E32329D71B4595EABF3D089132B67C:EDB70CEF22496ADB4A0D49A2E119F24F
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCachesImpl.WrapModel(System.String)">
            GENMHASH:2FE8C4C2D5EAD7E37787838DE0B47D92:730E62C21B719C19E70A1F3FC92CEBE5
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCachesImpl.WrapModel(Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner)">
            GENMHASH:CBAFA6E0018A4E2E5B9C07BDC6094FEA:2938EF1204E81FE99C42C7758381BB99
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCachesImpl.Define(System.String)">
            GENMHASH:8ACFB0E23F5F24AD384313679B65F404:AD7C28D26EC1F237B93E54AD31899691
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCachesImpl.ListOperations">
            GENMHASH:2CEB6E35574F5C7F1D19ADAC97C93D65:E562631A6A8C1B378A3E7DBE80F7FF29
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCachesImpl.ListOperationsAsync(System.Threading.CancellationToken)">
            GENMHASH:B1063F1468B82C4392D0981460DF0EE4:C67291A5B3D38919C766B2615DDE1A88
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisFirewallRuleImpl">
             <summary>
             The Azure  RedisFirewallRule wrapper class implementation.
             </summary>
            GENTHASH:Y29tLm1pY3Jvc29mdC5henVyZS5tYW5hZ2VtZW50LnJlZGlzLmltcGxlbWVudGF0aW9uLlJlZGlzRmlyZXdhbGxSdWxlSW1wbA==
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisFirewallRuleImpl.Microsoft#Azure#Management#Redis#Fluent#Models#IRedisFirewallRule#EndIP">
            <summary>
            Gets the endIP value.
            </summary>
            <summary>
            Gets the endIP value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisFirewallRuleImpl.Microsoft#Azure#Management#Redis#Fluent#Models#IRedisFirewallRule#StartIP">
            <summary>
            Gets the startIP value.
            </summary>
            <summary>
            Gets the startIP value.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisFirewallRuleImpl.#ctor(System.String,Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl,Microsoft.Azure.Management.Redis.Fluent.Models.RedisFirewallRuleInner)">
            GENMHASH:34040AC696DA924042721A60BDE443D1:95CDFB0CE611CB49B83B558A1D6C0C28
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisFirewallRuleImpl.GetChildName(System.String,System.String)">
            GENMHASH:7B91F973B41CF71CC40E247891C84C41:E4D43A6E96E7C87C1AF10B462EF6EBD1
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisFirewallRuleImpl.GetInnerAsync(System.Threading.CancellationToken)">
            GENMHASH:5AD91481A0966B059A478CD4E9DD9466:9173CAD5C20D0FE8E533CCFC4AD76F00
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisFirewallRuleImpl.CreateResourceAsync(System.Threading.CancellationToken)">
            GENMHASH:0202A00A1DCF248D2647DBDBEF2CA865:DDFC98F9FF0E3FBFE660C327A14278F6
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisFirewallRuleImpl.DeleteResourceAsync(System.Threading.CancellationToken)">
            GENMHASH:E24A9768E91CD60E963E43F00AA1FDFE:F0E8761B587413D44BC7829228C59639
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisFirewallRuleImpl.EndIP">
            GENMHASH:CD7049B3E4C84FDFC44A3FBCEBE46085:8984B82FDB80ED1EF4A20D58D6D1A6AF
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisFirewallRuleImpl.Id">
            GENMHASH:ACA2D5620579D8158A29586CA1FF4BC6:899F2B088BBBD76CCBC31221756265BC
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisFirewallRuleImpl.StartIP">
            GENMHASH:E352C9BBEA1A53BC845A684ED59AF1E5:410296D8DB82CE8FB9AFAF7AFCBA8481
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisFirewallRuleImpl.UpdateResourceAsync(System.Threading.CancellationToken)">
            GENMHASH:507A92D4DCD93CE9595A78198DEBDFCF:16AD01F8BDD93611BB283CC787483C90
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisFirewallRulesImpl">
             <summary>
             Represents a Redis firewall rules collection associated with a Redis cache instance.
             </summary>
            GENTHASH:Y29tLm1pY3Jvc29mdC5henVyZS5tYW5hZ2VtZW50LnJlZGlzLmltcGxlbWVudGF0aW9uLlJlZGlzRmlyZXdhbGxSdWxlc0ltcGw=
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisFirewallRulesImpl.#ctor(Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl)">
            GENMHASH:CF7DEFD9A0DD88B635298C8054BB9A9D:900B06C0BDB2F9E97263BC2F6BA64005
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisFirewallRulesImpl.RulesAsMap">
            GENMHASH:18F41687B348B9E09418C6DEC090073F:5974B25E6707EE399CE4603A77A8DD19
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisFirewallRulesImpl.ListChildResources">
            GENMHASH:6A122C62EB559D6E6E53725061B422FB:B2EF9DC85A673D83563D798E70C105D6
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisFirewallRulesImpl.NewChildResource(System.String)">
            GENMHASH:8E8DA5B84731A2D412247D25A544C502:00C2146FC143579EAAD7721FF8E88C31
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisFirewallRulesImpl.AddRule(Microsoft.Azure.Management.Redis.Fluent.RedisFirewallRuleImpl)">
            GENMHASH:1B44F74595D2DBB80C90026635B00A49:70E5536409B659240A6A4A092BE18779
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisFirewallRulesImpl.DefineInlineFirewallRule(System.String)">
            GENMHASH:518F7642AE4D538C71F91882E33728D8:A59D5C2CB7E0AA07FC4CDB2EDF076F7F
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisFirewallRulesImpl.RemoveRule(System.String)">
            GENMHASH:99C9A9B66AEE720319DFED03F8C8B705:DEE0D182874CA32644574B6F9CB541D8
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisPatchScheduleImpl">
             <summary>
             The Azure  RedisPatchSchedule wrapper class implementation.
             </summary>
            GENTHASH:Y29tLm1pY3Jvc29mdC5henVyZS5tYW5hZ2VtZW50LnJlZGlzLmltcGxlbWVudGF0aW9uLlJlZGlzUGF0Y2hTY2hlZHVsZUltcGw=
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisPatchScheduleImpl.Microsoft#Azure#Management#Redis#Fluent#Models#IRedisPatchSchedule#ScheduleEntries">
            <summary>
            Gets the scheduleEntries value.
            </summary>
            <summary>
            Gets the scheduleEntries value.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisPatchScheduleImpl.#ctor(System.String,Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl,Microsoft.Azure.Management.Redis.Fluent.Models.RedisPatchScheduleInner)">
            GENMHASH:5A4320F5ADD7E398AF7B0806169E4698:95CDFB0CE611CB49B83B558A1D6C0C28
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisPatchScheduleImpl.GetChildName(System.String,System.String)">
            GENMHASH:7B91F973B41CF71CC40E247891C84C41:EB1CA865901A76AF320202ED1FBA1CF0
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisPatchScheduleImpl.GetInnerAsync(System.Threading.CancellationToken)">
            GENMHASH:5AD91481A0966B059A478CD4E9DD9466:20B5B6DD037FF01C63C9EC8EDAC2737D
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisPatchScheduleImpl.CreateResourceAsync(System.Threading.CancellationToken)">
            GENMHASH:0202A00A1DCF248D2647DBDBEF2CA865:9BE00DCA66796357D2F6DBC611B42A48
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisPatchScheduleImpl.DeleteResourceAsync(System.Threading.CancellationToken)">
            GENMHASH:E24A9768E91CD60E963E43F00AA1FDFE:D5C00606E3B93C13F119258FE7B03589
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisPatchScheduleImpl.Id">
            GENMHASH:ACA2D5620579D8158A29586CA1FF4BC6:899F2B088BBBD76CCBC31221756265BC
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisPatchScheduleImpl.ScheduleEntries">
            GENMHASH:20094867B1F32BCEE01B12E02A61C335:A4F94F790DA42D1924E66239449422B4
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisPatchScheduleImpl.UpdateResourceAsync(System.Threading.CancellationToken)">
            GENMHASH:507A92D4DCD93CE9595A78198DEBDFCF:16AD01F8BDD93611BB283CC787483C90
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisPatchSchedulesImpl">
             <summary>
             Represents a Redis patch schedule collection associated with a Redis cache instance.
             </summary>
            GENTHASH:Y29tLm1pY3Jvc29mdC5henVyZS5tYW5hZ2VtZW50LnJlZGlzLmltcGxlbWVudGF0aW9uLlJlZGlzUGF0Y2hTY2hlZHVsZXNJbXBs
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisPatchSchedulesImpl.#ctor(Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl)">
            GENMHASH:AD9917524F09AF9E9D44496728DD4F4E:42F30C4B3DBB6CE49D91EF728CBB7957
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisPatchSchedulesImpl.PatchSchedulesAsMap">
            GENMHASH:65D9C14D3DB321CE6E6AF5B1B86CF9BD:4E197CCA8EA0272BE0405F90C53F31D8
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisPatchSchedulesImpl.ListChildResources">
            GENMHASH:6A122C62EB559D6E6E53725061B422FB:7EDDB3D4663F077E51B9DEED8CBEA81F
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisPatchSchedulesImpl.NewChildResource(System.String)">
            GENMHASH:8E8DA5B84731A2D412247D25A544C502:0C5225E80E922751C67318B097BA8352
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisPatchSchedulesImpl.AddPatchSchedule(Microsoft.Azure.Management.Redis.Fluent.RedisPatchScheduleImpl)">
            GENMHASH:575ACD6B2F8DB77EB8418BE1DD965968:58A02B259CCAE12FC513BB9E49E7C583
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisPatchSchedulesImpl.DefineInlinePatchSchedule">
            GENMHASH:8A7B2E82D212E78F5155D33477A1A8C1:EAC522B6D40FB7E3C1228792906D2E27
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisPatchSchedulesImpl.DeleteInlinePatchSchedule">
            GENMHASH:29E3EBABEFC9DB4F1DCF2D8349652BAF:B5FC6B1C2EC9B5D2EA91BFADED314AE9
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisPatchSchedulesImpl.GetPatchSchedule">
            GENMHASH:CBF4AFABB2FAA2E1D1DA248452A775E7:59BEA683366219B31F1730D1BCB02E02
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisPatchSchedulesImpl.RemovePatchSchedule">
            GENMHASH:8D9FB32C1A68FED6543D49DBD2EF1458:E36476634597E3A1EF1F144166293628
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisPatchSchedulesImpl.UpdateInlinePatchSchedule">
            GENMHASH:42D5879CEDFD6B722235D438670375E5:9C9E2F953CCDBC4573F56A9055417E77
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.IRedisAccessKeys">
            <summary>
            The <code>RedisCache.keys()</code> action result.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisAccessKeys.PrimaryKey">
            <summary>
            Gets a primary key value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisAccessKeys.SecondaryKey">
            <summary>
            Gets a secondary key value.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.IRedisCache">
            <summary>
            An immutable client-side representation of an Azure Redis Cache.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.HostName">
            <summary>
            Gets the hostName value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.IsPremium">
            <summary>
            Gets returns true if current Redis Cache instance has Premium Sku.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.Keys">
            <summary>
            Gets a Redis Cache's access keys. This operation requires write permission to the Cache resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.NonSslPort">
            <summary>
            Gets true if non SSL port is enabled, false otherwise.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.Port">
            <summary>
            Gets the port value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.ProvisioningState">
            <summary>
            Gets the provisioningState value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.RedisConfiguration">
            <summary>
            Gets the Redis configuration value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.RedisVersion">
            <summary>
            Gets the Redis version value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.ShardCount">
            <summary>
            Gets the shardCount value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.Sku">
            <summary>
            Gets the sku value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.SslPort">
            <summary>
            Gets the sslPort value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.StaticIP">
            <summary>
            Gets the staticIP value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.SubnetId">
            <summary>
            Gets the subnetId value.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.AsPremium">
            <return>Exposes features available only to Premium Sku Redis Cache instances.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.ForceReboot(System.String)">
            <summary>
            Reboot specified Redis node(s). This operation requires write permission to the cache resource. There can be potential data loss.
            </summary>
            <param name="rebootType">
            Specifies which Redis node(s) to reboot. Depending on this value data loss is
            possible. Possible values include: 'PrimaryNode', 'SecondaryNode', 'AllNodes'.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.GetKeys">
            <return>A Redis Cache's access keys. This operation requires write permission to the Cache resource.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.RefreshKeys">
            <summary>
            Fetch the up-to-date access keys from Azure for this Redis Cache.
            </summary>
            <return>The access keys for this Redis Cache.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.RegenerateKey(Microsoft.Azure.Management.Redis.Fluent.Models.RedisKeyType)">
            <summary>
            Regenerates the access keys for this Redis Cache.
            </summary>
            <param name="keyType">Key type to regenerate.</param>
            <return>The generated access keys for this Redis Cache.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.IRedisCacheBeta">
            <summary>
            An immutable client-side representation of an Azure Redis Cache.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisCacheBeta.FirewallRules">
            <summary>
            Gets Firewall Rules in the Redis Cache, indexed by name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisCacheBeta.MinimumTlsVersion">
            <summary>
            Gets the minimum TLS version (or higher) that clients require to use.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisCacheBeta.PatchSchedules">
            <summary>
            Gets List of patch schedules for current Redis Cache.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremium">
            <summary>
            An immutable client-side representation of an Azure Redis cache with Premium SKU.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremium.DeletePatchSchedule">
            <summary>
            Deletes the patching schedule for Redis Cache.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremium.ExportData(System.String,System.String)">
            <summary>
            Export data from Redis Cache.
            </summary>
            <param name="containerSASUrl">Container name to export to.</param>
            <param name="prefix">Prefix to use for exported files.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremium.ExportData(System.String,System.String,System.String)">
            <summary>
            Export data from Redis Cache.
            </summary>
            <param name="containerSASUrl">Container name to export to.</param>
            <param name="prefix">Prefix to use for exported files.</param>
            <param name="fileFormat">Specifies file format.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremium.ForceReboot(System.String,System.Int32)">
            <summary>
            Reboot specified Redis node(s). This operation requires write permission to the cache resource. There can be potential data loss.
            </summary>
            <param name="rebootType">
            Specifies which Redis node(s) to reboot. Depending on this value data loss is
            possible. Possible values include: 'PrimaryNode', 'SecondaryNode', 'AllNodes'.
            </param>
            <param name="shardId">In case of cluster cache, this specifies shard id which should be rebooted.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremium.ImportData(System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Import data into Redis Cache.
            </summary>
            <param name="files">Files to import.</param>
            <param name="fileFormat">Specifies file format.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremium.ImportData(System.Collections.Generic.IList{System.String})">
            <summary>
            Import data into Redis Cache.
            </summary>
            <param name="files">Files to import.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremium.ListPatchSchedules">
            <summary>
            Gets the patching schedule for Redis Cache.
            </summary>
            <return>List of patch schedules for current Redis Cache.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremiumBeta">
            <summary>
            An immutable client-side representation of an Azure Redis cache with Premium SKU.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremiumBeta.AddLinkedServer(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ReplicationRole)">
            <summary>
            Adds a linked server to the current Redis cache instance.
            </summary>
            <param name="linkedRedisCacheId">The resource Id of the Redis instance to link with.</param>
            <param name="linkedServerLocation">The location of the linked Redis instance.</param>
            <param name="role">The role of the linked server.</param>
            <return>Name of the linked server.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremiumBeta.AddLinkedServerAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ReplicationRole,System.Threading.CancellationToken)">
            <summary>
            Adds a linked server to the current Redis cache instance.
            </summary>
            <param name="linkedRedisCacheId">The resource Id of the Redis instance to link with.</param>
            <param name="linkedServerLocation">The location of the linked Redis instance.</param>
            <param name="role">The role of the linked server.</param>
            <return>Name of the linked server.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremiumBeta.GetLinkedServerRole(System.String)">
            <summary>
            Gets the role for the linked server of the current Redis cache instance.
            </summary>
            <param name="linkedServerName">The name of the linked server.</param>
            <return>The role of the linked server.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremiumBeta.GetLinkedServerRoleAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the role for the linked server of the current Redis cache instance.
            </summary>
            <param name="linkedServerName">The name of the linked server.</param>
            <return>The role of the linked server.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremiumBeta.ListLinkedServers">
            <summary>
            Gets the list of linked servers associated with this redis cache.
            </summary>
            <return>The Roles of the linked servers, indexed by name.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremiumBeta.ListLinkedServersAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the list of linked servers associated with this redis cache.
            </summary>
            <return>The Roles of the linked servers, indexed by name.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremiumBeta.RemoveLinkedServer(System.String)">
            <summary>
            Removes the linked server from the current Redis cache instance.
            </summary>
            <param name="linkedServerName">The name of the linked server.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremiumBeta.RemoveLinkedServerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes the linked server from the current Redis cache instance.
            </summary>
            <param name="linkedServerName">The name of the linked server.</param>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.IRedisCaches">
            <summary>
            Entry point for Redis Cache management API.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.IRedisCachesBeta">
            <summary>
            Entry point for Redis Cache management API.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachesBeta.ListOperations">
            <summary>
            Lists all of the available Redis REST API operations.
            </summary>
            <return>List of available Redis REST operations.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachesBeta.ListOperationsAsync(System.Threading.CancellationToken)">
            <summary>
            Lists all of the available Redis REST API operations.
            </summary>
            <return>A representation of the future computation of this call.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.IRedisFirewallRule">
            <summary>
            The Azure Redis Firewall rule entries are of type RedisFirewallRule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.IRedisFirewallRule.EndIP">
            <summary>
            Gets the endIP value.
            </summary>
            <summary>
            Gets the endIP value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.IRedisFirewallRule.StartIP">
            <summary>
            Gets the startIP value.
            </summary>
            <summary>
            Gets the startIP value.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.IRedisPatchSchedule">
            <summary>
            The Azure Redis Patch Schedule entries are of type ScheduleEntry.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.IRedisPatchSchedule.ScheduleEntries">
            <summary>
            Gets the scheduleEntries value.
            </summary>
            <summary>
            Gets the scheduleEntries value.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.CheckNameAvailabilityParametersInner">
            <summary>
            Parameters body to pass for resource name availability check.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.CheckNameAvailabilityParametersInner.#ctor">
            <summary>
            Initializes a new instance of the
            CheckNameAvailabilityParametersInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.CheckNameAvailabilityParametersInner.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the
            CheckNameAvailabilityParametersInner class.
            </summary>
            <param name="name">Resource name.</param>
            <param name="type">Resource type. The only legal value of this
            property for checking redis cache name availability is
            'Microsoft.Cache/redis'.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.CheckNameAvailabilityParametersInner.Name">
            <summary>
            Gets or sets resource name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.CheckNameAvailabilityParametersInner.Type">
            <summary>
            Gets or sets resource type. The only legal value of this property
            for checking redis cache name availability is
            'Microsoft.Cache/redis'.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.CheckNameAvailabilityParametersInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.DayOfWeek">
            <summary>
            Defines values for DayOfWeek.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.ExportRDBParametersInner">
            <summary>
            Parameters for Redis export operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.ExportRDBParametersInner.#ctor">
            <summary>
            Initializes a new instance of the ExportRDBParametersInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.ExportRDBParametersInner.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the ExportRDBParametersInner class.
            </summary>
            <param name="prefix">Prefix to use for exported files.</param>
            <param name="container">Container name to export to.</param>
            <param name="format">File format.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.ExportRDBParametersInner.Format">
            <summary>
            Gets or sets file format.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.ExportRDBParametersInner.Prefix">
            <summary>
            Gets or sets prefix to use for exported files.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.ExportRDBParametersInner.Container">
            <summary>
            Gets or sets container name to export to.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.ExportRDBParametersInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.ImportRDBParametersInner">
            <summary>
            Parameters for Redis import operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.ImportRDBParametersInner.#ctor">
            <summary>
            Initializes a new instance of the ImportRDBParametersInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.ImportRDBParametersInner.#ctor(System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Initializes a new instance of the ImportRDBParametersInner class.
            </summary>
            <param name="files">files to import.</param>
            <param name="format">File format.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.ImportRDBParametersInner.Format">
            <summary>
            Gets or sets file format.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.ImportRDBParametersInner.Files">
            <summary>
            Gets or sets files to import.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.ImportRDBParametersInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.NotificationListResponseInner">
            <summary>
            The response of listUpgradeNotifications.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.NotificationListResponseInner.#ctor">
            <summary>
            Initializes a new instance of the NotificationListResponseInner
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.NotificationListResponseInner.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Redis.Fluent.Models.UpgradeNotification},System.String)">
            <summary>
            Initializes a new instance of the NotificationListResponseInner
            class.
            </summary>
            <param name="value">List of all notifications.</param>
            <param name="nextLink">Link for next set of notifications.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.NotificationListResponseInner.Value">
            <summary>
            Gets or sets list of all notifications.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.NotificationListResponseInner.NextLink">
            <summary>
            Gets link for next set of notifications.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.Operation">
            <summary>
            REST API operation
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.Operation.#ctor">
            <summary>
            Initializes a new instance of the Operation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.Operation.#ctor(System.String,Microsoft.Azure.Management.Redis.Fluent.Models.OperationDisplay)">
            <summary>
            Initializes a new instance of the Operation class.
            </summary>
            <param name="name">Operation name:
            {provider}/{resource}/{operation}</param>
            <param name="display">The object that describes the
            operation.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.Operation.Name">
            <summary>
            Gets or sets operation name: {provider}/{resource}/{operation}
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.Operation.Display">
            <summary>
            Gets or sets the object that describes the operation.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.OperationDisplay">
            <summary>
            The object that describes the operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.OperationDisplay.#ctor">
            <summary>
            Initializes a new instance of the OperationDisplay class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.OperationDisplay.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the OperationDisplay class.
            </summary>
            <param name="provider">Friendly name of the resource
            provider</param>
            <param name="operation">Operation type: read, write, delete,
            listKeys/action, etc.</param>
            <param name="resource">Resource type on which the operation is
            performed.</param>
            <param name="description">Friendly name of the operation</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.OperationDisplay.Provider">
            <summary>
            Gets or sets friendly name of the resource provider
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.OperationDisplay.Operation">
            <summary>
            Gets or sets operation type: read, write, delete, listKeys/action,
            etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.OperationDisplay.Resource">
            <summary>
            Gets or sets resource type on which the operation is performed.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.OperationDisplay.Description">
            <summary>
            Gets or sets friendly name of the operation
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.Page`1">
            <summary>
            Defines a page in Azure responses.
            </summary>
            <typeparam name="T">Type of the page content items</typeparam>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.Page`1.NextPageLink">
            <summary>
            Gets the link to the next page.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.Page`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A an enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.Page`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A an enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.ProvisioningState">
            <summary>
            Defines values for ProvisioningState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.ProxyResourceInner">
            <summary>
            The resource model definition for a ARM proxy resource. It will have
            everything other than required location and tags
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.ProxyResourceInner.#ctor">
            <summary>
            Defines shared properties of an Azure resource.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.ProxyResourceInner.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the Resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.ProxyResourceInner.Id">
            <summary>
            Resource Id
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.ProxyResourceInner.Name">
            <summary>
            Resource name
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.ProxyResourceInner.Type">
            <summary>
            Resource type
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.RebootType">
            <summary>
            Defines values for RebootType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.RedisAccessKeysInner">
            <summary>
            Redis cache access keys.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisAccessKeysInner.#ctor">
            <summary>
            Initializes a new instance of the RedisAccessKeysInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisAccessKeysInner.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the RedisAccessKeysInner class.
            </summary>
            <param name="primaryKey">The current primary key that clients can
            use to authenticate with Redis cache.</param>
            <param name="secondaryKey">The current secondary key that clients
            can use to authenticate with Redis cache.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisAccessKeysInner.PrimaryKey">
            <summary>
            Gets the current primary key that clients can use to authenticate
            with Redis cache.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisAccessKeysInner.SecondaryKey">
            <summary>
            Gets the current secondary key that clients can use to authenticate
            with Redis cache.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner">
            <summary>
            Parameters supplied to the Create Redis operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner.#ctor">
            <summary>
            Initializes a new instance of the RedisCreateParametersInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner.#ctor(Microsoft.Azure.Management.Redis.Fluent.Models.Sku,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the RedisCreateParametersInner class.
            </summary>
            <param name="sku">The SKU of the Redis cache to deploy.</param>
            <param name="location">The geo-location where the resource
            lives</param>
            <param name="redisConfiguration">All Redis Settings. Few possible
            keys:
            rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value
            etc.</param>
            <param name="enableNonSslPort">Specifies whether the non-ssl Redis
            server port (6379) is enabled.</param>
            <param name="tenantSettings">A dictionary of tenant
            settings</param>
            <param name="shardCount">The number of shards to be created on a
            Premium Cluster Cache.</param>
            <param name="minimumTlsVersion">Optional: requires clients to use a
            specified TLS version (or higher) to connect (e,g, '1.0', '1.1',
            '1.2'). Possible values include: '1.0', '1.1', '1.2'</param>
            <param name="subnetId">The full resource ID of a subnet in a
            virtual network to deploy the Redis cache in. Example format:
            /subscriptions/{subid}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1</param>
            <param name="staticIP">Static IP address. Required when deploying a
            Redis cache inside an existing Azure Virtual Network.</param>
            <param name="zones">A list of availability zones denoting where the
            resource needs to come from.</param>
            <param name="tags">Resource tags.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner.RedisConfiguration">
            <summary>
            Gets or sets all Redis Settings. Few possible keys:
            rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value
            etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner.EnableNonSslPort">
            <summary>
            Gets or sets specifies whether the non-ssl Redis server port (6379)
            is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner.TenantSettings">
            <summary>
            Gets or sets a dictionary of tenant settings
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner.ShardCount">
            <summary>
            Gets or sets the number of shards to be created on a Premium
            Cluster Cache.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner.MinimumTlsVersion">
            <summary>
            Gets or sets optional: requires clients to use a specified TLS
            version (or higher) to connect (e,g, '1.0', '1.1', '1.2'). Possible
            values include: '1.0', '1.1', '1.2'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner.Sku">
            <summary>
            Gets or sets the SKU of the Redis cache to deploy.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner.SubnetId">
            <summary>
            Gets or sets the full resource ID of a subnet in a virtual network
            to deploy the Redis cache in. Example format:
            /subscriptions/{subid}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner.StaticIP">
            <summary>
            Gets or sets static IP address. Required when deploying a Redis
            cache inside an existing Azure Virtual Network.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner.Zones">
            <summary>
            Gets or sets a list of availability zones denoting where the
            resource needs to come from.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner.Location">
            <summary>
            Gets or sets the geo-location where the resource lives
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner.Tags">
            <summary>
            Gets or sets resource tags.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.RedisFirewallRuleCreateParametersInner">
            <summary>
            Parameters required for creating a firewall rule on redis cache.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisFirewallRuleCreateParametersInner.#ctor">
            <summary>
            Initializes a new instance of the
            RedisFirewallRuleCreateParametersInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisFirewallRuleCreateParametersInner.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the
            RedisFirewallRuleCreateParametersInner class.
            </summary>
            <param name="startIP">lowest IP address included in the
            range</param>
            <param name="endIP">highest IP address included in the
            range</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisFirewallRuleCreateParametersInner.StartIP">
            <summary>
            Gets or sets lowest IP address included in the range
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisFirewallRuleCreateParametersInner.EndIP">
            <summary>
            Gets or sets highest IP address included in the range
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisFirewallRuleCreateParametersInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.RedisFirewallRuleInner">
            <summary>
            A firewall rule on a redis cache has a name, and describes a contiguous
            range of IP addresses permitted to connect
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisFirewallRuleInner.#ctor">
            <summary>
            Initializes a new instance of the RedisFirewallRuleInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisFirewallRuleInner.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the RedisFirewallRuleInner class.
            </summary>
            <param name="startIP">lowest IP address included in the
            range</param>
            <param name="endIP">highest IP address included in the
            range</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisFirewallRuleInner.StartIP">
            <summary>
            Gets or sets lowest IP address included in the range
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisFirewallRuleInner.EndIP">
            <summary>
            Gets or sets highest IP address included in the range
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisFirewallRuleInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.RedisForceRebootResponseInner">
            <summary>
            Response to force reboot for Redis cache.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisForceRebootResponseInner.#ctor">
            <summary>
            Initializes a new instance of the RedisForceRebootResponseInner
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisForceRebootResponseInner.#ctor(System.String)">
            <summary>
            Initializes a new instance of the RedisForceRebootResponseInner
            class.
            </summary>
            <param name="message">Status message</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisForceRebootResponseInner.Message">
            <summary>
            Gets status message
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.RedisKeyType">
            <summary>
            Defines values for RedisKeyType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.RedisLinkedServer">
            <summary>
            Linked server Id
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisLinkedServer.#ctor">
            <summary>
            Initializes a new instance of the RedisLinkedServer class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisLinkedServer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the RedisLinkedServer class.
            </summary>
            <param name="id">Linked server Id.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisLinkedServer.Id">
            <summary>
            Gets linked server Id.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.RedisLinkedServerCreateParametersInner">
            <summary>
            Parameter required for creating a linked server to redis cache.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisLinkedServerCreateParametersInner.#ctor">
            <summary>
            Initializes a new instance of the
            RedisLinkedServerCreateParametersInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisLinkedServerCreateParametersInner.#ctor(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ReplicationRole)">
            <summary>
            Initializes a new instance of the
            RedisLinkedServerCreateParametersInner class.
            </summary>
            <param name="linkedRedisCacheId">Fully qualified resourceId of the
            linked redis cache.</param>
            <param name="linkedRedisCacheLocation">Location of the linked redis
            cache.</param>
            <param name="serverRole">Role of the linked server. Possible values
            include: 'Primary', 'Secondary'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisLinkedServerCreateParametersInner.LinkedRedisCacheId">
            <summary>
            Gets or sets fully qualified resourceId of the linked redis cache.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisLinkedServerCreateParametersInner.LinkedRedisCacheLocation">
            <summary>
            Gets or sets location of the linked redis cache.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisLinkedServerCreateParametersInner.ServerRole">
            <summary>
            Gets or sets role of the linked server. Possible values include:
            'Primary', 'Secondary'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisLinkedServerCreateParametersInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.RedisLinkedServerWithPropertiesInner">
            <summary>
            Response to put/get linked server (with properties) for Redis cache.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisLinkedServerWithPropertiesInner.#ctor">
            <summary>
            Initializes a new instance of the
            RedisLinkedServerWithPropertiesInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisLinkedServerWithPropertiesInner.#ctor(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ReplicationRole,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the
            RedisLinkedServerWithPropertiesInner class.
            </summary>
            <param name="linkedRedisCacheId">Fully qualified resourceId of the
            linked redis cache.</param>
            <param name="linkedRedisCacheLocation">Location of the linked redis
            cache.</param>
            <param name="serverRole">Role of the linked server. Possible values
            include: 'Primary', 'Secondary'</param>
            <param name="provisioningState">Terminal state of the link between
            primary and secondary redis cache.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisLinkedServerWithPropertiesInner.LinkedRedisCacheId">
            <summary>
            Gets or sets fully qualified resourceId of the linked redis cache.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisLinkedServerWithPropertiesInner.LinkedRedisCacheLocation">
            <summary>
            Gets or sets location of the linked redis cache.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisLinkedServerWithPropertiesInner.ServerRole">
            <summary>
            Gets or sets role of the linked server. Possible values include:
            'Primary', 'Secondary'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisLinkedServerWithPropertiesInner.ProvisioningState">
            <summary>
            Gets terminal state of the link between primary and secondary redis
            cache.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisLinkedServerWithPropertiesInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.RedisPatchScheduleInner">
            <summary>
            Response to put/get patch schedules for Redis cache.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisPatchScheduleInner.#ctor">
            <summary>
            Initializes a new instance of the RedisPatchScheduleInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisPatchScheduleInner.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntryInner},System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the RedisPatchScheduleInner class.
            </summary>
            <param name="scheduleEntries">List of patch schedules for a Redis
            cache.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisPatchScheduleInner.ScheduleEntries">
            <summary>
            Gets or sets list of patch schedules for a Redis cache.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisPatchScheduleInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.RedisRebootParametersInner">
            <summary>
            Specifies which Redis node(s) to reboot.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisRebootParametersInner.#ctor">
            <summary>
            Initializes a new instance of the RedisRebootParametersInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisRebootParametersInner.#ctor(System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the RedisRebootParametersInner class.
            </summary>
            <param name="rebootType">Which Redis node(s) to reboot. Depending
            on this value data loss is possible. Possible values include:
            'PrimaryNode', 'SecondaryNode', 'AllNodes'</param>
            <param name="shardId">If clustering is enabled, the ID of the shard
            to be rebooted.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisRebootParametersInner.RebootType">
            <summary>
            Gets or sets which Redis node(s) to reboot. Depending on this value
            data loss is possible. Possible values include: 'PrimaryNode',
            'SecondaryNode', 'AllNodes'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisRebootParametersInner.ShardId">
            <summary>
            Gets or sets if clustering is enabled, the ID of the shard to be
            rebooted.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisRebootParametersInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.RedisRegenerateKeyParameters">
            <summary>
            Specifies which Redis access keys to reset.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisRegenerateKeyParameters.#ctor">
            <summary>
            Initializes a new instance of the RedisRegenerateKeyParameters
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisRegenerateKeyParameters.#ctor(Microsoft.Azure.Management.Redis.Fluent.Models.RedisKeyType)">
            <summary>
            Initializes a new instance of the RedisRegenerateKeyParameters
            class.
            </summary>
            <param name="keyType">The Redis access key to regenerate. Possible
            values include: 'Primary', 'Secondary'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisRegenerateKeyParameters.KeyType">
            <summary>
            Gets or sets the Redis access key to regenerate. Possible values
            include: 'Primary', 'Secondary'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisRegenerateKeyParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner">
            <summary>
            A single Redis item in List or Get Operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.#ctor">
            <summary>
            Initializes a new instance of the RedisResourceInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.#ctor(System.String,Microsoft.Azure.Management.Redis.Fluent.Models.Sku,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.Azure.Management.Redis.Fluent.Models.RedisAccessKeysInner,System.Collections.Generic.IList{Microsoft.Azure.Management.Redis.Fluent.Models.RedisLinkedServer},System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the RedisResourceInner class.
            </summary>
            <param name="location">The geo-location where the resource
            lives</param>
            <param name="sku">The SKU of the Redis cache to deploy.</param>
            <param name="tags">Resource tags.</param>
            <param name="redisConfiguration">All Redis Settings. Few possible
            keys:
            rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value
            etc.</param>
            <param name="enableNonSslPort">Specifies whether the non-ssl Redis
            server port (6379) is enabled.</param>
            <param name="tenantSettings">A dictionary of tenant
            settings</param>
            <param name="shardCount">The number of shards to be created on a
            Premium Cluster Cache.</param>
            <param name="minimumTlsVersion">Optional: requires clients to use a
            specified TLS version (or higher) to connect (e,g, '1.0', '1.1',
            '1.2'). Possible values include: '1.0', '1.1', '1.2'</param>
            <param name="subnetId">The full resource ID of a subnet in a
            virtual network to deploy the Redis cache in. Example format:
            /subscriptions/{subid}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1</param>
            <param name="staticIP">Static IP address. Required when deploying a
            Redis cache inside an existing Azure Virtual Network.</param>
            <param name="redisVersion">Redis version.</param>
            <param name="provisioningState">Redis instance provisioning status.
            Possible values include: 'Creating', 'Deleting', 'Disabled',
            'Failed', 'Linking', 'Provisioning', 'RecoveringScaleFailure',
            'Scaling', 'Succeeded', 'Unlinking', 'Unprovisioning',
            'Updating'</param>
            <param name="hostName">Redis host name.</param>
            <param name="port">Redis non-SSL port.</param>
            <param name="sslPort">Redis SSL port.</param>
            <param name="accessKeys">The keys of the Redis cache - not set if
            this object is not the response to Create or Update redis
            cache</param>
            <param name="linkedServers">List of the linked servers associated
            with the cache</param>
            <param name="zones">A list of availability zones denoting where the
            resource needs to come from.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.RedisConfiguration">
            <summary>
            Gets or sets all Redis Settings. Few possible keys:
            rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value
            etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.EnableNonSslPort">
            <summary>
            Gets or sets specifies whether the non-ssl Redis server port (6379)
            is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.TenantSettings">
            <summary>
            Gets or sets a dictionary of tenant settings
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.ShardCount">
            <summary>
            Gets or sets the number of shards to be created on a Premium
            Cluster Cache.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.MinimumTlsVersion">
            <summary>
            Gets or sets optional: requires clients to use a specified TLS
            version (or higher) to connect (e,g, '1.0', '1.1', '1.2'). Possible
            values include: '1.0', '1.1', '1.2'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.Sku">
            <summary>
            Gets or sets the SKU of the Redis cache to deploy.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.SubnetId">
            <summary>
            Gets or sets the full resource ID of a subnet in a virtual network
            to deploy the Redis cache in. Example format:
            /subscriptions/{subid}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.StaticIP">
            <summary>
            Gets or sets static IP address. Required when deploying a Redis
            cache inside an existing Azure Virtual Network.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.RedisVersion">
            <summary>
            Gets redis version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.ProvisioningState">
            <summary>
            Gets redis instance provisioning status. Possible values include:
            'Creating', 'Deleting', 'Disabled', 'Failed', 'Linking',
            'Provisioning', 'RecoveringScaleFailure', 'Scaling', 'Succeeded',
            'Unlinking', 'Unprovisioning', 'Updating'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.HostName">
            <summary>
            Gets redis host name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.Port">
            <summary>
            Gets redis non-SSL port.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.SslPort">
            <summary>
            Gets redis SSL port.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.AccessKeys">
            <summary>
            Gets the keys of the Redis cache - not set if this object is not
            the response to Create or Update redis cache
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.LinkedServers">
            <summary>
            Gets list of the linked servers associated with the cache
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.Zones">
            <summary>
            Gets or sets a list of availability zones denoting where the
            resource needs to come from.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.RedisUpdateParametersInner">
            <summary>
            Parameters supplied to the Update Redis operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisUpdateParametersInner.#ctor">
            <summary>
            Initializes a new instance of the RedisUpdateParametersInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisUpdateParametersInner.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.String,Microsoft.Azure.Management.Redis.Fluent.Models.Sku,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the RedisUpdateParametersInner class.
            </summary>
            <param name="redisConfiguration">All Redis Settings. Few possible
            keys:
            rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value
            etc.</param>
            <param name="enableNonSslPort">Specifies whether the non-ssl Redis
            server port (6379) is enabled.</param>
            <param name="tenantSettings">A dictionary of tenant
            settings</param>
            <param name="shardCount">The number of shards to be created on a
            Premium Cluster Cache.</param>
            <param name="minimumTlsVersion">Optional: requires clients to use a
            specified TLS version (or higher) to connect (e,g, '1.0', '1.1',
            '1.2'). Possible values include: '1.0', '1.1', '1.2'</param>
            <param name="sku">The SKU of the Redis cache to deploy.</param>
            <param name="tags">Resource tags.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisUpdateParametersInner.RedisConfiguration">
            <summary>
            Gets or sets all Redis Settings. Few possible keys:
            rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value
            etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisUpdateParametersInner.EnableNonSslPort">
            <summary>
            Gets or sets specifies whether the non-ssl Redis server port (6379)
            is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisUpdateParametersInner.TenantSettings">
            <summary>
            Gets or sets a dictionary of tenant settings
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisUpdateParametersInner.ShardCount">
            <summary>
            Gets or sets the number of shards to be created on a Premium
            Cluster Cache.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisUpdateParametersInner.MinimumTlsVersion">
            <summary>
            Gets or sets optional: requires clients to use a specified TLS
            version (or higher) to connect (e,g, '1.0', '1.1', '1.2'). Possible
            values include: '1.0', '1.1', '1.2'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisUpdateParametersInner.Sku">
            <summary>
            Gets or sets the SKU of the Redis cache to deploy.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisUpdateParametersInner.Tags">
            <summary>
            Gets or sets resource tags.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisUpdateParametersInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.ReplicationRole">
            <summary>
            Defines values for ReplicationRole.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntryInner">
            <summary>
            Patch schedule entry for a Premium Redis Cache.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntryInner.#ctor">
            <summary>
            Initializes a new instance of the ScheduleEntryInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntryInner.#ctor(Microsoft.Azure.Management.Redis.Fluent.Models.DayOfWeek,System.Int32,System.Nullable{System.TimeSpan})">
            <summary>
            Initializes a new instance of the ScheduleEntryInner class.
            </summary>
            <param name="dayOfWeek">Day of the week when a cache can be
            patched. Possible values include: 'Monday', 'Tuesday', 'Wednesday',
            'Thursday', 'Friday', 'Saturday', 'Sunday', 'Everyday',
            'Weekend'</param>
            <param name="startHourUtc">Start hour after which cache patching
            can start.</param>
            <param name="maintenanceWindow">ISO8601 timespan specifying how
            much time cache patching can take. </param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntryInner.DayOfWeek">
            <summary>
            Gets or sets day of the week when a cache can be patched. Possible
            values include: 'Monday', 'Tuesday', 'Wednesday', 'Thursday',
            'Friday', 'Saturday', 'Sunday', 'Everyday', 'Weekend'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntryInner.StartHourUtc">
            <summary>
            Gets or sets start hour after which cache patching can start.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntryInner.MaintenanceWindow">
            <summary>
            Gets or sets ISO8601 timespan specifying how much time cache
            patching can take.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntryInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.Sku">
            <summary>
            SKU parameters supplied to the create Redis operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.Sku.#ctor">
            <summary>
            Initializes a new instance of the Sku class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.Sku.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the Sku class.
            </summary>
            <param name="name">The type of Redis cache to deploy. Valid values:
            (Basic, Standard, Premium). Possible values include: 'Basic',
            'Standard', 'Premium'</param>
            <param name="family">The SKU family to use. Valid values: (C, P).
            (C = Basic/Standard, P = Premium). Possible values include: 'C',
            'P'</param>
            <param name="capacity">The size of the Redis cache to deploy. Valid
            values: for C (Basic/Standard) family (0, 1, 2, 3, 4, 5, 6), for P
            (Premium) family (1, 2, 3, 4).</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.Sku.Name">
            <summary>
            Gets or sets the type of Redis cache to deploy. Valid values:
            (Basic, Standard, Premium). Possible values include: 'Basic',
            'Standard', 'Premium'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.Sku.Family">
            <summary>
            Gets or sets the SKU family to use. Valid values: (C, P). (C =
            Basic/Standard, P = Premium). Possible values include: 'C', 'P'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.Sku.Capacity">
            <summary>
            Gets or sets the size of the Redis cache to deploy. Valid values:
            for C (Basic/Standard) family (0, 1, 2, 3, 4, 5, 6), for P
            (Premium) family (1, 2, 3, 4).
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.Sku.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.SkuFamily">
            <summary>
            Defines values for SkuFamily.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.SkuName">
            <summary>
            Defines values for SkuName.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.TrackedResourceInner">
            <summary>
            The resource model definition for a ARM tracked top level resource
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.TrackedResourceInner.#ctor">
            <summary>
            Initializes a new instance of the TrackedResourceInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.TrackedResourceInner.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the TrackedResourceInner class.
            </summary>
            <param name="location">The geo-location where the resource
            lives</param>
            <param name="tags">Resource tags.</param>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.UpgradeNotification">
            <summary>
            Properties of upgrade notification.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.UpgradeNotification.#ctor">
            <summary>
            Initializes a new instance of the UpgradeNotification class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.UpgradeNotification.#ctor(System.String,System.Nullable{System.DateTime},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the UpgradeNotification class.
            </summary>
            <param name="name">Name of upgrade notification.</param>
            <param name="timestamp">Timestamp when upgrade notification
            occured.</param>
            <param name="upsellNotification">Details about this upgrade
            notification</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.UpgradeNotification.Name">
            <summary>
            Gets name of upgrade notification.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.UpgradeNotification.Timestamp">
            <summary>
            Gets timestamp when upgrade notification occured.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.UpgradeNotification.UpsellNotification">
            <summary>
            Gets details about this upgrade notification
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry">
            <summary>
            Patch schedule entry for a Premium Redis Cache.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry.#ctor(Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntryInner)">
            <summary>
            Initializes a new instance of the ScheduleEntry class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry.DayOfWeek">
            <summary>
            Gets or sets day of the week when a cache can be patched. Possible
            values include: 'Monday', 'Tuesday', 'Wednesday', 'Thursday',
            'Friday', 'Saturday', 'Sunday', 'Everyday', 'Weekend'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry.StartHourUtc">
            <summary>
            Gets or sets start hour after which cache patching can start.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry.MaintenanceWindow">
            <summary>
            Gets or sets ISO8601 timespan specifying how much time cache
            patching can take.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.TlsVersion">
            <summary>
            Defines values for TlsVersion.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithPremiumSkuCreate">
            <summary>
            A Redis Cache definition with Premium Sku specific functionality.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithPremiumSkuCreate.WithShardCount(System.Int32)">
            <summary>
            The number of shards to be created on a Premium Cluster Cache.
            </summary>
            <param name="shardCount">The shard count value to set.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IDefinition">
            <summary>
            Container interface for all the definitions that need to be implemented.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithSku">
            <summary>
            A Redis Cache definition allowing the sku to be set.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithSku.WithBasicSku">
            <summary>
            Specifies the Basic sku of the Redis Cache.
            </summary>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithSku.WithBasicSku(System.Int32)">
            <summary>
            Specifies the Basic sku of the Redis Cache.
            </summary>
            <param name="capacity">Specifies what size of Redis Cache to deploy for Basic sku with C family (0, 1, 2, 3, 4, 5, 6).</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithSku.WithPremiumSku">
            <summary>
            Specifies the Premium sku of the Redis Cache.
            </summary>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithSku.WithPremiumSku(System.Int32)">
            <summary>
            Specifies the Premium sku of the Redis Cache.
            </summary>
            <param name="capacity">Specifies what size of Redis Cache to deploy for Standard sku with P family (1, 2, 3, 4).</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithSku.WithStandardSku">
            <summary>
            Specifies the Standard Sku of the Redis Cache.
            </summary>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithSku.WithStandardSku(System.Int32)">
            <summary>
            Specifies the Standard sku of the Redis Cache.
            </summary>
            <param name="capacity">Specifies what size of Redis Cache to deploy for Standard sku with C family (0, 1, 2, 3, 4, 5, 6).</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithGroup">
            <summary>
            A Redis Cache definition allowing resource group to be set.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IBlank">
            <summary>
            The first stage of the Redis Cache definition.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreate">
            <summary>
            A Redis Cache definition with sufficient inputs to create a new
            Redis Cache in the cloud, but exposing additional optional inputs to
            specify.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreate.WithNonSslPort">
            <summary>
            Enables non-ssl Redis server port (6379).
            </summary>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreate.WithPatchSchedule(Microsoft.Azure.Management.Redis.Fluent.Models.DayOfWeek,System.Int32)">
            <summary>
            Patch schedule on a Premium Cluster Cache.
            </summary>
            <param name="dayOfWeek">Day of week when cache can be patched.</param>
            <param name="startHourUtc">Start hour after which cache patching can start.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreate.WithPatchSchedule(Microsoft.Azure.Management.Redis.Fluent.Models.DayOfWeek,System.Int32,System.TimeSpan)">
            <summary>
            Patch schedule on a Premium Cluster Cache.
            </summary>
            <param name="dayOfWeek">Day of week when cache can be patched.</param>
            <param name="startHourUtc">Start hour after which cache patching can start.</param>
            <param name="maintenanceWindow">ISO8601 timespan specifying how much time cache patching can take.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreate.WithPatchSchedule(Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry)">
            <summary>
            Patch schedule on a Premium Cluster Cache.
            </summary>
            <param name="scheduleEntry">Patch schedule entry for Premium Redis Cache.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreate.WithPatchSchedule(System.Collections.Generic.IList{Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry})">
            <summary>
            Patch schedule on a Premium Cluster Cache.
            </summary>
            <param name="scheduleEntry">List of patch schedule entries for Premium Redis Cache.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreate.WithRedisConfiguration(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            All Redis Settings. Few possible keys:
            rdb-backup-enabled, rdb-storage-connection-string, rdb-backup-frequency, maxmemory-delta, maxmemory-policy,
            notify-keyspace-events, maxmemory-samples, slowlog-log-slower-than, slowlog-max-len, list-max-ziplist-entries,
            list-max-ziplist-value, hash-max-ziplist-entries, hash-max-ziplist-value, set -max-intset-entries,
            zset-max-ziplist-entries, zset-max-ziplist-value etc.
            </summary>
            <param name="redisConfiguration">Configuration of Redis Cache as a map indexed by configuration name.</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreate.WithRedisConfiguration(System.String,System.String)">
            <summary>
            Specifies Redis Setting.
            rdb-backup-enabled, rdb-storage-connection-string, rdb-backup-frequency, maxmemory-delta, maxmemory-policy,
            notify-keyspace-events, maxmemory-samples, slowlog-log-slower-than, slowlog-max-len, list-max-ziplist-entries,
            list-max-ziplist-value, hash-max-ziplist-entries, hash-max-ziplist-value, set -max-intset-entries,
            zset-max-ziplist-entries, zset-max-ziplist-value etc.
            </summary>
            <param name="key">Redis configuration name.</param>
            <param name="value">Redis configuration value.</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithPremiumSkuCreateBeta">
            <summary>
            A Redis Cache definition with Premium Sku specific functionality.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithPremiumSkuCreateBeta.WithStaticIP(System.String)">
            <summary>
            Sets Redis Cache static IP. Required when deploying a Redis Cache inside an existing Azure Virtual Network.
            </summary>
            <param name="staticIP">The static IP value to set.</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithPremiumSkuCreateBeta.WithSubnet(Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId,System.String)">
            <summary>
            Assigns the specified subnet to this instance of Redis Cache.
            </summary>
            <param name="network">Instance of Network object.</param>
            <param name="subnetName">The name of the subnet.</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithPremiumSkuCreateBeta.WithSubnet(System.String)">
            <summary>
            Assigns the specified subnet to this instance of Redis Cache.
            </summary>
            <param name="subnetId">Resource id of subnet.</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreateBeta">
            <summary>
            A Redis Cache definition with sufficient inputs to create a new
            Redis Cache in the cloud, but exposing additional optional inputs to
            specify.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreateBeta.WithFirewallRule(System.String,System.String,System.String)">
            <summary>
            Creates Redis cache firewall rule with range of IP addresses permitted to connect to the cache.
            </summary>
            <param name="name">Name of the rule.</param>
            <param name="lowestIp">Lowest IP address included in the range.</param>
            <param name="highestIp">Highest IP address included in the range.</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreateBeta.WithFirewallRule(Microsoft.Azure.Management.Redis.Fluent.Models.IRedisFirewallRule)">
            <summary>
            Creates Redis cache firewall rule with range of IP addresses permitted to connect to the cache.
            </summary>
            <param name="rule">Firewall rule that specifies name, lowest and highest IP address included in the range of permitted IP addresses.</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreateBeta.WithMinimumTlsVersion(Microsoft.Azure.Management.Redis.Fluent.Models.TlsVersion)">
            <summary>
            Requires clients to use a specified TLS version (or higher) to connect (e,g, '1.0', '1.1', '1.2').
            </summary>
            <param name="tlsVersion">Minimum TLS version.</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IUpdate">
            <summary>
            The template for a Redis Cache update operation, containing all the settings that can be modified.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IUpdate.WithPatchSchedule(Microsoft.Azure.Management.Redis.Fluent.Models.DayOfWeek,System.Int32)">
            <summary>
            Adds Patch schedule to the current Premium Cluster Cache.
            </summary>
            <param name="dayOfWeek">Day of week when cache can be patched.</param>
            <param name="startHourUtc">Start hour after which cache patching can start.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IUpdate.WithPatchSchedule(Microsoft.Azure.Management.Redis.Fluent.Models.DayOfWeek,System.Int32,System.TimeSpan)">
            <summary>
            Adds Patch schedule to the current Premium Cluster Cache.
            </summary>
            <param name="dayOfWeek">Day of week when cache can be patched.</param>
            <param name="startHourUtc">Start hour after which cache patching can start.</param>
            <param name="maintenanceWindow">ISO8601 timespan specifying how much time cache patching can take.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IUpdate.WithPatchSchedule(Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry)">
            <summary>
            Adds Patch schedule to the current Premium Cluster Cache.
            </summary>
            <param name="scheduleEntry">Patch schedule entry for Premium Redis Cache.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IUpdate.WithPatchSchedule(System.Collections.Generic.IList{Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry})">
            <summary>
            Adds Patch schedule to the current Premium Cluster Cache.
            </summary>
            <param name="scheduleEntry">List of patch schedule entries for Premium Redis Cache.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IUpdate.WithShardCount(System.Int32)">
            <summary>
            The number of shards to be created on a Premium Cluster Cache.
            </summary>
            <param name="shardCount">The shard count value to set.</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IWithRedisConfiguration">
            <summary>
            A Redis Cache update allowing Redis configuration to be modified.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IWithRedisConfiguration.WithoutRedisConfiguration">
            <summary>
            Cleans all the configuration settings being set on Redis Cache.
            </summary>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IWithRedisConfiguration.WithoutRedisConfiguration(System.String)">
            <summary>
            Removes specified Redis Cache configuration setting.
            </summary>
            <param name="key">Redis configuration name.</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IWithRedisConfiguration.WithRedisConfiguration(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            All Redis Settings. Few possible keys:
            rdb-backup-enabled, rdb-storage-connection-string, rdb-backup-frequency, maxmemory-delta, maxmemory-policy,
            notify-keyspace-events, maxmemory-samples, slowlog-log-slower-than, slowlog-max-len, list-max-ziplist-entries,
            list-max-ziplist-value, hash-max-ziplist-entries, hash-max-ziplist-value, set -max-intset-entries,
            zset-max-ziplist-entries, zset-max-ziplist-value etc.
            </summary>
            <param name="redisConfiguration">Configuration of Redis Cache as a map indexed by configuration name.</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IWithRedisConfiguration.WithRedisConfiguration(System.String,System.String)">
            <summary>
            Specifies Redis Setting.
            rdb-backup-enabled, rdb-storage-connection-string, rdb-backup-frequency, maxmemory-delta, maxmemory-policy,
            notify-keyspace-events, maxmemory-samples, slowlog-log-slower-than, slowlog-max-len, list-max-ziplist-entries,
            list-max-ziplist-value, hash-max-ziplist-entries, hash-max-ziplist-value, set -max-intset-entries,
            zset-max-ziplist-entries, zset-max-ziplist-value etc.
            </summary>
            <param name="key">Redis configuration name.</param>
            <param name="value">Redis configuration value.</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IWithSku">
            <summary>
            A Redis Cache update stage allowing to change the parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IWithSku.WithBasicSku(System.Int32)">
            <summary>
            Updates Redis Cache to Basic sku with new capacity.
            </summary>
            <param name="capacity">Specifies what size of Redis Cache to update to for Basic sku with C family (0, 1, 2, 3, 4, 5, 6).</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IWithSku.WithPremiumSku">
            <summary>
            Updates Redis Cache to Premium sku.
            </summary>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IWithSku.WithPremiumSku(System.Int32)">
            <summary>
            Updates Redis Cache to Premium sku with new capacity.
            </summary>
            <param name="capacity">Specifies what size of Redis Cache to update to for Premium sku with P family (1, 2, 3, 4).</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IWithSku.WithStandardSku">
            <summary>
            Updates Redis Cache to Standard sku.
            </summary>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IWithSku.WithStandardSku(System.Int32)">
            <summary>
            Updates Redis Cache to Standard sku with new capacity.
            </summary>
            <param name="capacity">Specifies what size of Redis Cache to update to for Standard sku with C family (0, 1, 2, 3, 4, 5, 6).</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IWithNonSslPort">
            <summary>
            A Redis Cache update allowing non SSL port to be enabled or disabled.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IWithNonSslPort.WithNonSslPort">
            <summary>
            Enables non-ssl Redis server port (6379).
            </summary>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IWithNonSslPort.WithoutNonSslPort">
            <summary>
            Disables non-ssl Redis server port (6379).
            </summary>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IUpdateBeta">
            <summary>
            The template for a Redis Cache update operation, containing all the settings that can be modified.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IUpdateBeta.WithFirewallRule(System.String,System.String,System.String)">
            <summary>
            Creates or updates Redis cache firewall rule with range of IP addresses permitted to connect to the cache.
            </summary>
            <param name="name">Name of the rule.</param>
            <param name="lowestIp">Lowest IP address included in the range.</param>
            <param name="highestIp">Highest IP address included in the range.</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IUpdateBeta.WithFirewallRule(Microsoft.Azure.Management.Redis.Fluent.Models.IRedisFirewallRule)">
            <summary>
            Creates or updates Redis cache firewall rule with range of IP addresses permitted to connect to the cache.
            </summary>
            <param name="rule">Firewall rule that specifies name, lowest and highest IP address included in the range of permitted IP addresses.</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IUpdateBeta.WithMinimumTlsVersion(Microsoft.Azure.Management.Redis.Fluent.Models.TlsVersion)">
            <summary>
            Requires clients to use a specified TLS version (or higher) to connect (e,g, '1.0', '1.1', '1.2').
            </summary>
            <param name="tlsVersion">Minimum TLS version.</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IUpdateBeta.WithoutFirewallRule(System.String)">
            <summary>
            Deletes a single firewall rule in the current Redis cache instance.
            </summary>
            <param name="name">Name of the rule.</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IUpdateBeta.WithoutMinimumTlsVersion">
            <summary>
            Removes the requirement for clients minimum TLS version.
            </summary>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IUpdateBeta.WithoutPatchSchedule">
            <summary>
            Removes all Patch schedules from the current Premium Cluster Cache.
            </summary>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.FirewallRulesOperations">
            <summary>
            FirewallRulesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.FirewallRulesOperations.#ctor(Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient)">
            <summary>
            Initializes a new instance of the FirewallRulesOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.FirewallRulesOperations.Client">
            <summary>
            Gets a reference to the RedisManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.FirewallRulesOperations.ListByRedisResourceWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all firewall rules in the specified redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='cacheName'>
            The name of the Redis cache.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.FirewallRulesOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisFirewallRuleCreateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create or update a redis cache firewall rule
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='cacheName'>
            The name of the Redis cache.
            </param>
            <param name='ruleName'>
            The name of the firewall rule.
            </param>
            <param name='parameters'>
            Parameters supplied to the create or update redis firewall rule operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.FirewallRulesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a single firewall rule in a specified redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='cacheName'>
            The name of the Redis cache.
            </param>
            <param name='ruleName'>
            The name of the firewall rule.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.FirewallRulesOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a single firewall rule in a specified redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='cacheName'>
            The name of the Redis cache.
            </param>
            <param name='ruleName'>
            The name of the firewall rule.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.FirewallRulesOperations.ListByRedisResourceNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all firewall rules in the specified redis cache.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.FirewallRulesOperationsExtensions">
            <summary>
            Extension methods for FirewallRulesOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.FirewallRulesOperationsExtensions.ListByRedisResourceAsync(Microsoft.Azure.Management.Redis.Fluent.IFirewallRulesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all firewall rules in the specified redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='cacheName'>
            The name of the Redis cache.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.FirewallRulesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Redis.Fluent.IFirewallRulesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisFirewallRuleCreateParametersInner,System.Threading.CancellationToken)">
            <summary>
            Create or update a redis cache firewall rule
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='cacheName'>
            The name of the Redis cache.
            </param>
            <param name='ruleName'>
            The name of the firewall rule.
            </param>
            <param name='parameters'>
            Parameters supplied to the create or update redis firewall rule operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.FirewallRulesOperationsExtensions.GetAsync(Microsoft.Azure.Management.Redis.Fluent.IFirewallRulesOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a single firewall rule in a specified redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='cacheName'>
            The name of the Redis cache.
            </param>
            <param name='ruleName'>
            The name of the firewall rule.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.FirewallRulesOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Redis.Fluent.IFirewallRulesOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a single firewall rule in a specified redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='cacheName'>
            The name of the Redis cache.
            </param>
            <param name='ruleName'>
            The name of the firewall rule.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.FirewallRulesOperationsExtensions.ListByRedisResourceNextAsync(Microsoft.Azure.Management.Redis.Fluent.IFirewallRulesOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all firewall rules in the specified redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.IFirewallRulesOperations">
            <summary>
            FirewallRulesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IFirewallRulesOperations.ListByRedisResourceWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all firewall rules in the specified redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='cacheName'>
            The name of the Redis cache.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IFirewallRulesOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisFirewallRuleCreateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create or update a redis cache firewall rule
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='cacheName'>
            The name of the Redis cache.
            </param>
            <param name='ruleName'>
            The name of the firewall rule.
            </param>
            <param name='parameters'>
            Parameters supplied to the create or update redis firewall rule
            operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IFirewallRulesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a single firewall rule in a specified redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='cacheName'>
            The name of the Redis cache.
            </param>
            <param name='ruleName'>
            The name of the firewall rule.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IFirewallRulesOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a single firewall rule in a specified redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='cacheName'>
            The name of the Redis cache.
            </param>
            <param name='ruleName'>
            The name of the firewall rule.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IFirewallRulesOperations.ListByRedisResourceNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all firewall rules in the specified redis cache.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.ILinkedServerOperations">
            <summary>
            LinkedServerOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.ILinkedServerOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisLinkedServerCreateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds a linked server to the Redis cache (requires Premium SKU).
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='linkedServerName'>
            The name of the linked server that is being added to the Redis
            cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Create Linked server operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.ILinkedServerOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the linked server from a redis cache (requires Premium
            SKU).
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='linkedServerName'>
            The name of the linked server that is being added to the Redis
            cache.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.ILinkedServerOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the detailed information about a linked server of a redis
            cache (requires Premium SKU).
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='linkedServerName'>
            The name of the linked server.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.ILinkedServerOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the list of linked servers associated with this redis cache
            (requires Premium SKU).
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.ILinkedServerOperations.BeginCreateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisLinkedServerCreateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds a linked server to the Redis cache (requires Premium SKU).
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='linkedServerName'>
            The name of the linked server that is being added to the Redis
            cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Create Linked server operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.ILinkedServerOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the list of linked servers associated with this redis cache
            (requires Premium SKU).
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.IOperations">
            <summary>
            Operations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the available REST API operations of the
            Microsoft.Cache provider.
            </summary>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the available REST API operations of the
            Microsoft.Cache provider.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.IPatchSchedulesOperations">
            <summary>
            PatchSchedulesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IPatchSchedulesOperations.ListByRedisResourceWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all patch schedules in the specified redis cache (there is
            only one).
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='cacheName'>
            The name of the Redis cache.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IPatchSchedulesOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntryInner},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create or replace the patching schedule for Redis cache (requires
            Premium SKU).
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='scheduleEntries'>
            List of patch schedules for a Redis cache.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IPatchSchedulesOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the patching schedule of a redis cache (requires Premium
            SKU).
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IPatchSchedulesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the patching schedule of a redis cache (requires Premium SKU).
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IPatchSchedulesOperations.ListByRedisResourceNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all patch schedules in the specified redis cache (there is
            only one).
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.IRedisManagementClient">
            <summary>
            REST API for Azure Redis Cache Service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisManagementClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisManagementClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisManagementClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisManagementClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisManagementClient.SubscriptionId">
            <summary>
            Gets subscription credentials which uniquely identify the Microsoft
            Azure subscription. The subscription ID forms part of the URI for
            every service call.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisManagementClient.ApiVersion">
            <summary>
            Client Api Version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisManagementClient.AcceptLanguage">
            <summary>
            Gets or sets the preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisManagementClient.LongRunningOperationRetryTimeout">
            <summary>
            Gets or sets the retry timeout in seconds for Long Running
            Operations. Default value is 30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisManagementClient.GenerateClientRequestId">
            <summary>
            When set to true a unique x-ms-client-request-id value is generated
            and included in each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisManagementClient.Operations">
            <summary>
            Gets the IOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisManagementClient.Redis">
            <summary>
            Gets the IRedisOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisManagementClient.FirewallRules">
            <summary>
            Gets the IFirewallRulesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisManagementClient.PatchSchedules">
            <summary>
            Gets the IPatchSchedulesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisManagementClient.LinkedServer">
            <summary>
            Gets the ILinkedServerOperations.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations">
            <summary>
            RedisOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.CheckNameAvailabilityWithHttpMessagesAsync(Microsoft.Azure.Management.Redis.Fluent.Models.CheckNameAvailabilityParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks that the redis cache name is valid and is not already in
            use.
            </summary>
            <param name='parameters'>
            Parameters supplied to the CheckNameAvailability Redis operation.
            The only supported resource type is 'Microsoft.Cache/redis'
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.ListUpgradeNotificationsWithHttpMessagesAsync(System.String,System.String,System.Double,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets any upgrade notifications for a Redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='history'>
            how many minutes in past to look for upgrade notifications
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.CreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create or replace (overwrite/recreate, with potential downtime) an
            existing Redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Create Redis operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisUpdateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Update an existing Redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Update Redis operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a Redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a Redis cache (resource description).
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all Redis caches in a resource group.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all Redis caches in the specified subscription.
            </summary>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.ListKeysWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieve a Redis cache's access keys. This operation requires write
            permission to the cache resource.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.RegenerateKeyWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisKeyType,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Regenerate Redis cache's access keys. This operation requires write
            permission to the cache resource.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='keyType'>
            The Redis access key to regenerate. Possible values include:
            'Primary', 'Secondary'
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.ForceRebootWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisRebootParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Reboot specified Redis node(s). This operation requires write
            permission to the cache resource. There can be potential data loss.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Specifies which Redis node(s) to reboot.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.ImportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ImportRDBParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Import data into Redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters for Redis import operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.ExportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ExportRDBParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Export data from the redis cache to blobs in a container.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters for Redis export operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.BeginCreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create or replace (overwrite/recreate, with potential downtime) an
            existing Redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Create Redis operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.BeginDeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a Redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.BeginImportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ImportRDBParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Import data into Redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters for Redis import operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.BeginExportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ExportRDBParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Export data from the redis cache to blobs in a container.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters for Redis export operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.ListByResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all Redis caches in a resource group.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all Redis caches in the specified subscription.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.LinkedServerOperations">
            <summary>
            LinkedServerOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.LinkedServerOperations.#ctor(Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient)">
            <summary>
            Initializes a new instance of the LinkedServerOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.LinkedServerOperations.Client">
            <summary>
            Gets a reference to the RedisManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.LinkedServerOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisLinkedServerCreateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds a linked server to the Redis cache (requires Premium SKU).
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='linkedServerName'>
            The name of the linked server that is being added to the Redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Create Linked server operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.LinkedServerOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the linked server from a redis cache (requires Premium SKU).
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='linkedServerName'>
            The name of the linked server that is being added to the Redis cache.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.LinkedServerOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the detailed information about a linked server of a redis cache
            (requires Premium SKU).
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='linkedServerName'>
            The name of the linked server.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.LinkedServerOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the list of linked servers associated with this redis cache (requires
            Premium SKU).
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.LinkedServerOperations.BeginCreateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisLinkedServerCreateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds a linked server to the Redis cache (requires Premium SKU).
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='linkedServerName'>
            The name of the linked server that is being added to the Redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Create Linked server operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.LinkedServerOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the list of linked servers associated with this redis cache (requires
            Premium SKU).
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.LinkedServerOperationsExtensions">
            <summary>
            Extension methods for LinkedServerOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.LinkedServerOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Redis.Fluent.ILinkedServerOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisLinkedServerCreateParametersInner,System.Threading.CancellationToken)">
            <summary>
            Adds a linked server to the Redis cache (requires Premium SKU).
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='linkedServerName'>
            The name of the linked server that is being added to the Redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Create Linked server operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.LinkedServerOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Redis.Fluent.ILinkedServerOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the linked server from a redis cache (requires Premium SKU).
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='linkedServerName'>
            The name of the linked server that is being added to the Redis cache.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.LinkedServerOperationsExtensions.GetAsync(Microsoft.Azure.Management.Redis.Fluent.ILinkedServerOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the detailed information about a linked server of a redis cache
            (requires Premium SKU).
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='linkedServerName'>
            The name of the linked server.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.LinkedServerOperationsExtensions.ListAsync(Microsoft.Azure.Management.Redis.Fluent.ILinkedServerOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the list of linked servers associated with this redis cache (requires
            Premium SKU).
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.LinkedServerOperationsExtensions.BeginCreateAsync(Microsoft.Azure.Management.Redis.Fluent.ILinkedServerOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisLinkedServerCreateParametersInner,System.Threading.CancellationToken)">
            <summary>
            Adds a linked server to the Redis cache (requires Premium SKU).
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='linkedServerName'>
            The name of the linked server that is being added to the Redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Create Linked server operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.LinkedServerOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Redis.Fluent.ILinkedServerOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the list of linked servers associated with this redis cache (requires
            Premium SKU).
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Operations">
            <summary>
            Operations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Operations.#ctor(Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient)">
            <summary>
            Initializes a new instance of the Operations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Operations.Client">
            <summary>
            Gets a reference to the RedisManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Operations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the available REST API operations of the Microsoft.Cache
            provider.
            </summary>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Operations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the available REST API operations of the Microsoft.Cache
            provider.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.OperationsExtensions">
            <summary>
            Extension methods for Operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.OperationsExtensions.ListAsync(Microsoft.Azure.Management.Redis.Fluent.IOperations,System.Threading.CancellationToken)">
            <summary>
            Lists all of the available REST API operations of the Microsoft.Cache
            provider.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.OperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Redis.Fluent.IOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all of the available REST API operations of the Microsoft.Cache
            provider.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.PatchSchedulesOperations">
            <summary>
            PatchSchedulesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.PatchSchedulesOperations.#ctor(Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient)">
            <summary>
            Initializes a new instance of the PatchSchedulesOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.PatchSchedulesOperations.Client">
            <summary>
            Gets a reference to the RedisManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.PatchSchedulesOperations.ListByRedisResourceWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all patch schedules in the specified redis cache (there is only one).
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='cacheName'>
            The name of the Redis cache.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.PatchSchedulesOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntryInner},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create or replace the patching schedule for Redis cache (requires Premium
            SKU).
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='scheduleEntries'>
            List of patch schedules for a Redis cache.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.PatchSchedulesOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the patching schedule of a redis cache (requires Premium SKU).
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.PatchSchedulesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the patching schedule of a redis cache (requires Premium SKU).
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.PatchSchedulesOperations.ListByRedisResourceNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all patch schedules in the specified redis cache (there is only one).
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.PatchSchedulesOperationsExtensions">
            <summary>
            Extension methods for PatchSchedulesOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.PatchSchedulesOperationsExtensions.ListByRedisResourceAsync(Microsoft.Azure.Management.Redis.Fluent.IPatchSchedulesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all patch schedules in the specified redis cache (there is only one).
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='cacheName'>
            The name of the Redis cache.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.PatchSchedulesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Redis.Fluent.IPatchSchedulesOperations,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntryInner},System.Threading.CancellationToken)">
            <summary>
            Create or replace the patching schedule for Redis cache (requires Premium
            SKU).
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='scheduleEntries'>
            List of patch schedules for a Redis cache.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.PatchSchedulesOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Redis.Fluent.IPatchSchedulesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the patching schedule of a redis cache (requires Premium SKU).
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.PatchSchedulesOperationsExtensions.GetAsync(Microsoft.Azure.Management.Redis.Fluent.IPatchSchedulesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the patching schedule of a redis cache (requires Premium SKU).
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.PatchSchedulesOperationsExtensions.ListByRedisResourceNextAsync(Microsoft.Azure.Management.Redis.Fluent.IPatchSchedulesOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all patch schedules in the specified redis cache (there is only one).
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient">
            <summary>
            REST API for Azure Redis Cache Service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient.SubscriptionId">
            <summary>
            Gets subscription credentials which uniquely identify the Microsoft Azure
            subscription. The subscription ID forms part of the URI for every service
            call.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient.ApiVersion">
            <summary>
            Client Api Version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient.AcceptLanguage">
            <summary>
            Gets or sets the preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient.LongRunningOperationRetryTimeout">
            <summary>
            Gets or sets the retry timeout in seconds for Long Running Operations.
            Default value is 30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient.GenerateClientRequestId">
            <summary>
            When set to true a unique x-ms-client-request-id value is generated and
            included in each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient.Operations">
            <summary>
            Gets the IOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient.Redis">
            <summary>
            Gets the IRedisOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient.FirewallRules">
            <summary>
            Gets the IFirewallRulesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient.PatchSchedules">
            <summary>
            Gets the IPatchSchedulesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient.LinkedServer">
            <summary>
            Gets the ILinkedServerOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient.#ctor(Microsoft.Azure.Management.ResourceManager.Fluent.Core.RestClient)">
            <summary>
            Initializes a new instance of the RedisManagementClient class.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient.Initialize">
            <summary>
            Initializes client properties.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisOperations">
            <summary>
            RedisOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.#ctor(Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient)">
            <summary>
            Initializes a new instance of the RedisOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.Client">
            <summary>
            Gets a reference to the RedisManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.CheckNameAvailabilityWithHttpMessagesAsync(Microsoft.Azure.Management.Redis.Fluent.Models.CheckNameAvailabilityParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks that the redis cache name is valid and is not already in use.
            </summary>
            <param name='parameters'>
            Parameters supplied to the CheckNameAvailability Redis operation. The only
            supported resource type is 'Microsoft.Cache/redis'
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.ListUpgradeNotificationsWithHttpMessagesAsync(System.String,System.String,System.Double,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets any upgrade notifications for a Redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='history'>
            how many minutes in past to look for upgrade notifications
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.CreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create or replace (overwrite/recreate, with potential downtime) an existing
            Redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Create Redis operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisUpdateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Update an existing Redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Update Redis operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a Redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a Redis cache (resource description).
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all Redis caches in a resource group.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all Redis caches in the specified subscription.
            </summary>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.ListKeysWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieve a Redis cache's access keys. This operation requires write
            permission to the cache resource.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.RegenerateKeyWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisKeyType,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Regenerate Redis cache's access keys. This operation requires write
            permission to the cache resource.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='keyType'>
            The Redis access key to regenerate. Possible values include: 'Primary',
            'Secondary'
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.ForceRebootWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisRebootParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Reboot specified Redis node(s). This operation requires write permission to
            the cache resource. There can be potential data loss.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Specifies which Redis node(s) to reboot.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.ImportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ImportRDBParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Import data into Redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters for Redis import operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.ExportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ExportRDBParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Export data from the redis cache to blobs in a container.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters for Redis export operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.BeginCreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create or replace (overwrite/recreate, with potential downtime) an existing
            Redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Create Redis operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.BeginDeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a Redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.BeginImportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ImportRDBParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Import data into Redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters for Redis import operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.BeginExportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ExportRDBParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Export data from the redis cache to blobs in a container.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters for Redis export operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.ListByResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all Redis caches in a resource group.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all Redis caches in the specified subscription.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions">
            <summary>
            Extension methods for RedisOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.CheckNameAvailabilityAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,Microsoft.Azure.Management.Redis.Fluent.Models.CheckNameAvailabilityParametersInner,System.Threading.CancellationToken)">
            <summary>
            Checks that the redis cache name is valid and is not already in use.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='parameters'>
            Parameters supplied to the CheckNameAvailability Redis operation. The only
            supported resource type is 'Microsoft.Cache/redis'
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.ListUpgradeNotificationsAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,System.Double,System.Threading.CancellationToken)">
            <summary>
            Gets any upgrade notifications for a Redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='history'>
            how many minutes in past to look for upgrade notifications
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner,System.Threading.CancellationToken)">
            <summary>
            Create or replace (overwrite/recreate, with potential downtime) an existing
            Redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Create Redis operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisUpdateParametersInner,System.Threading.CancellationToken)">
            <summary>
            Update an existing Redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Update Redis operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a Redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.GetAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a Redis cache (resource description).
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all Redis caches in a resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.ListAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.Threading.CancellationToken)">
            <summary>
            Gets all Redis caches in the specified subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.ListKeysAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a Redis cache's access keys. This operation requires write
            permission to the cache resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.RegenerateKeyAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisKeyType,System.Threading.CancellationToken)">
            <summary>
            Regenerate Redis cache's access keys. This operation requires write
            permission to the cache resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='keyType'>
            The Redis access key to regenerate. Possible values include: 'Primary',
            'Secondary'
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.ForceRebootAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisRebootParametersInner,System.Threading.CancellationToken)">
            <summary>
            Reboot specified Redis node(s). This operation requires write permission to
            the cache resource. There can be potential data loss.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Specifies which Redis node(s) to reboot.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.ImportDataAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ImportRDBParametersInner,System.Threading.CancellationToken)">
            <summary>
            Import data into Redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters for Redis import operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.ExportDataAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ExportRDBParametersInner,System.Threading.CancellationToken)">
            <summary>
            Export data from the redis cache to blobs in a container.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters for Redis export operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.BeginCreateAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner,System.Threading.CancellationToken)">
            <summary>
            Create or replace (overwrite/recreate, with potential downtime) an existing
            Redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Create Redis operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.BeginDeleteAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a Redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.BeginImportDataAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ImportRDBParametersInner,System.Threading.CancellationToken)">
            <summary>
            Import data into Redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters for Redis import operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.BeginExportDataAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ExportRDBParametersInner,System.Threading.CancellationToken)">
            <summary>
            Export data from the redis cache to blobs in a container.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters for Redis export operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.ListByResourceGroupNextAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all Redis caches in a resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all Redis caches in the specified subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisManager.Configure">
            <summary>
            Returns a Configurable instance that can be used to create RedisManager with optional configuration.
            </summary>
            <returns>The instance allowing configurations</returns>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.IRedisManager">
            <summary>
            Entry point to Azure Redis Cache management.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisManager.RedisCaches">
            <summary>
            Gets the Redis Cache management API entry point.
            </summary>
        </member>
    </members>
</doc>
